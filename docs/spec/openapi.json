{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Elastic Cloud API",
    "description" : "This RESTful API enables you to perform most of the operations available in the UI console through API calls.\n\nYou can [create an API key](https://www.elastic.co/guide/en/cloud/current/ec-api-authentication.html) to quickly and easily authenticate, then use the API to create and manage deployments, configure remote clusters, set up traffic filters, manage extensions, and much more.\nAccess the API from its base URL at `api.elastic-cloud.com`.\n\nTo manage your serverless projects, use the [Elastic Cloud Serverless API](https://www.elastic.co/docs/api/doc/elastic-cloud-serverless).\n\n## Documentation source and versions\n\nThis documentation is derived from https://api.elastic-cloud.com/api/v1/api-docs-user/swagger.json.\nIt is provided under license [Attribution-NonCommercial-NoDerivatives 4.0 International](https://creativecommons.org/licenses/by-nc-nd/4.0/).\n",
    "termsOfService" : "",
    "version" : "1",
    "x-doc-license" : {
      "name" : "Attribution-NonCommercial-NoDerivatives 4.0 International",
      "url" : "https://creativecommons.org/licenses/by-nc-nd/4.0/"
    },
    "x-feedbackLink" : {
      "label" : "Feedback",
      "url" : "https://github.com/elastic/docs-content/issues/new?assignees=&labels=feedback%2Ccommunity&projects=&template=api-feedback.yaml&title=%5BFeedback%5D%3A+"
    }
  },
  "servers" : [ {
    "url" : "https://api.elastic-cloud.com/api/v1"
  } ],
  "tags" : [ {
    "name" : "Accounts",
    "description" : "Retrieve and update the current Elasticsearch Service account."
  }, {
    "name" : "Authentication",
    "description" : "Manage your Elasticsearch Service API keys."
  }, {
    "name" : "BillingCostsAnalysis",
    "description" : "Get an overview of your costs by organization ID.",
    "x-displayName" : "Billing costs analysis"
  }, {
    "name" : "Deployments",
    "description" : "Manage APM routes and read-only mode on App Search resources. Perform CRUD operations and commands. Get information about the certificate authorities, resources, remote clusters, and upgrade assistant status in your deployments.\n"
  }, {
    "name" : "Extensions",
    "description" : "Manage the extensions for your deployment.",
    "x-displayName" : "Deployments - Extensions"
  }, {
    "name" : "DeploymentTemplates",
    "description" : "Retrieve available deployment templates.",
    "x-displayName" : "Deployments - Templates"
  }, {
    "name" : "DeploymentsTrafficFilter",
    "description" : "Manage traffic filter rulesets and their associations with your deployments. Manage the ownership of traffic link IDs.\n",
    "x-displayName" : "Deployments - Traffic filter"
  }, {
    "name" : "Organizations",
    "description" : "Manage organization invitations and memberships."
  }, {
    "name" : "Stack",
    "description" : "Retrieve the available Elastic Stack versions for your deployments.",
    "x-displayName" : "Stack - Versions - CRUD"
  }, {
    "name" : "TrustedEnvironments",
    "description" : "Get the list of trusted environments for the organization.",
    "x-displayName" : "Trusted environments"
  }, {
    "name" : "UserRoleAssignments",
    "description" : "Manage your user role assignments.",
    "x-displayName" : "Users - Role Assignments"
  } ],
  "paths" : {
    "/account" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Fetch current account information",
        "description" : "Fetch current account information.",
        "operationId" : "get-current-account",
        "responses" : {
          "200" : {
            "description" : "Account fetched successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Account not found. (code: `accounts.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "accounts.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Accounts"
        }
      },
      "put" : {
        "tags" : [ "Accounts" ],
        "summary" : "Updates the current account",
        "description" : "Updates the current account.",
        "operationId" : "update-current-account",
        "requestBody" : {
          "description" : "the current account",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Account updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Account not found. (code: `accounts.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "accounts.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Accounts"
        },
        "x-codegen-request-body-name" : "body"
      },
      "patch" : {
        "tags" : [ "Accounts" ],
        "summary" : "Updates the current account",
        "description" : "Updates the current account.",
        "operationId" : "patch-current-account",
        "requestBody" : {
          "description" : "All changes in the specified object are applied to the current account according to the JSON Merge Patch processing rules. Omitting existing fields causes the same values to be reapplied. Specifying a `null` value reverts the field to the default value, or removes the field when no default value exists",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Account updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Account not found. (code: `accounts.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "accounts.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Accounts"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/billing/costs/{organizationId}" : {
      "get" : {
        "tags" : [ "BillingCostsAnalysis" ],
        "summary" : "Get costs overview for the organization. Currently unavailable in self-hosted ECE.",
        "description" : "EXPERIMENTAL (it may change in future versions): Retrieves an overview of the costs by organization ID.",
        "operationId" : "get-costs-overview",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Top-level cost overview for the organization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CostsOverview"
                }
              }
            }
          },
          "400" : {
            "description" : "The specified date range is invalid. (code: `costs.invalid_date_range`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "costs.invalid_date_range" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "403" : {
            "description" : "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.invalid_access" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "An error occurred when fetching an overview of the costs for the organization. (code: `billing_service.failed_request`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "billing_service.failed_request" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-doc" : {
          "tag" : "Billing Costs Analysis"
        }
      }
    },
    "/billing/costs/{organizationId}/charts" : {
      "get" : {
        "tags" : [ "BillingCostsAnalysis" ],
        "summary" : "Get charts for the organization. Currently unavailable in self-hosted ECE.",
        "description" : "EXPERIMENTAL (it may change in future versions): Retrieves the usage charts for the organization.",
        "operationId" : "get-costs-charts",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bucketing_strategy",
          "in" : "query",
          "description" : "The desired bucketing strategy for the charts. Defaults to `daily`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "daily",
            "enum" : [ "daily", "monthly" ]
          },
          "x-ballerina-name" : "bucketingStrategy"
        } ],
        "responses" : {
          "200" : {
            "description" : "The usage charts of an organization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChartItems"
                }
              }
            }
          },
          "400" : {
            "description" : "The specified date range is invalid. (code: `costs.invalid_date_range`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "costs.invalid_date_range" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "403" : {
            "description" : "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.invalid_access" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests. (code: `billing_service.rate_limited`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "billing_service.rate_limited" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "Error fetching the itemized costs for the organization. (code: `billing_service.failed_request`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "billing_service.failed_request" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-doc" : {
          "tag" : "Billing Costs Analysis"
        }
      }
    },
    "/billing/costs/{organizationId}/deployments" : {
      "get" : {
        "tags" : [ "BillingCostsAnalysis" ],
        "summary" : "Get deployments costs for the organization. Currently unavailable in self-hosted ECE.",
        "description" : "EXPERIMENTAL (it may change in future versions): Retrieves the costs associated with all deployments for the organization.",
        "operationId" : "get-costs-deployments",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "A datetime for the beginning of the desired range for which to fetch activity. Defaults to start of current month",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "A datetime for the end of the desired range for which to fetch activity. Defaults to the current date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept",
          "in" : "header",
          "description" : "Accept header containing the content preference",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "accept"
        } ],
        "responses" : {
          "200" : {
            "description" : "The costs associated to a set of products",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentsCosts"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid date range specified. (code: `costs.invalid_date_range`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "costs.invalid_date_range" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "403" : {
            "description" : "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.invalid_access" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "An error occurred when fetching the costs associated with all deployments for the organization. (code: `billing_service.failed_request`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "billing_service.failed_request" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-doc" : {
          "tag" : "Billing Costs Analysis"
        }
      }
    },
    "/billing/costs/{organizationId}/deployments/{deploymentId}/charts" : {
      "get" : {
        "tags" : [ "BillingCostsAnalysis" ],
        "summary" : "Get charts by deployment. Currently unavailable in self-hosted ECE.",
        "description" : "EXPERIMENTAL (it may change in future versions): Retrieves the usage charts for the given  deployment.",
        "operationId" : "get-costs-charts-by-deployment",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Id of a Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bucketing_strategy",
          "in" : "query",
          "description" : "The desired bucketing strategy for the charts. Defaults to `daily`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "daily",
            "enum" : [ "daily", "monthly" ]
          },
          "x-ballerina-name" : "bucketingStrategy"
        } ],
        "responses" : {
          "200" : {
            "description" : "The usage charts of a deployment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChartItems"
                }
              }
            }
          },
          "400" : {
            "description" : "The specified date range is invalid. (code: `costs.invalid_date_range`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "costs.invalid_date_range" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "403" : {
            "description" : "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.invalid_access" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests. (code: `billing_service.rate_limited`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "billing_service.rate_limited" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "Error fetching the itemized costs for the organization. (code: `billing_service.failed_request`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "billing_service.failed_request" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-doc" : {
          "tag" : "Billing Costs Analysis"
        }
      }
    },
    "/billing/costs/{organizationId}/deployments/{deploymentId}/items" : {
      "get" : {
        "tags" : [ "BillingCostsAnalysis" ],
        "summary" : "Get itemized costs by deployments. Currently unavailable in self-hosted ECE.",
        "description" : "EXPERIMENTAL (it may change in future versions): Retrieves the itemized costs for the given deployment.",
        "operationId" : "get-costs-items-by-deployment",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Id of a Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept",
          "in" : "header",
          "description" : "Determines the response body format. Can be either application/json or text/csv",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "accept"
        } ],
        "responses" : {
          "200" : {
            "description" : "The costs associated to a set items billed for a single deployment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ItemsCosts"
                }
              }
            }
          },
          "400" : {
            "description" : "The specified date range is invalid. (code: `costs.invalid_date_range`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "costs.invalid_date_range" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "403" : {
            "description" : "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.invalid_access" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "* The organization was not found. (code: `organization.not_found`)\n* The Elasticsearch cluster was not found. (code: `billing_service.es_cluster_id_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found", "billing_service.es_cluster_id_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "An error occurred when fetching the itemized costs for the given deployment of the organization. (code: `billing_service.failed_request`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "billing_service.failed_request" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-doc" : {
          "tag" : "Billing Costs Analysis"
        }
      }
    },
    "/billing/costs/{organizationId}/items" : {
      "get" : {
        "tags" : [ "BillingCostsAnalysis" ],
        "summary" : "Get itemized costs for the organization. Currently unavailable in self-hosted ECE.",
        "description" : "EXPERIMENTAL (it may change in future versions): Retrieves the itemized costs for the organization.",
        "operationId" : "get-costs-items",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The costs associated to a set of items",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ItemsCosts"
                }
              }
            }
          },
          "400" : {
            "description" : "The specified date range is invalid. (code: `costs.invalid_date_range`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "costs.invalid_date_range" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "403" : {
            "description" : "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.invalid_access" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "Error fetching the itemized costs for the organization. (code: `billing_service.failed_request`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "billing_service.failed_request" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-doc" : {
          "tag" : "Billing Costs Analysis"
        }
      }
    },
    "/deployments" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "List Deployments",
        "description" : "List Deployments.",
        "operationId" : "list-deployments",
        "responses" : {
          "200" : {
            "description" : "The list of deployments that belong to the authenticated user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentsListResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to perform this action.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - CRUD"
        }
      },
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Create Deployment",
        "description" : "Creates a Deployment.",
        "operationId" : "create-deployment",
        "parameters" : [ {
          "name" : "request_id",
          "in" : "query",
          "description" : "An optional idempotency token - if two create requests share the same request_id token (min size 32 characters, max 128) then only one deployment will be created, the second request will return the info of that deployment (in the same format described below, but with blanks for auth-related fields)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "If true, will just validate the Deployment definition but will not perform the creation",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "template_id",
          "in" : "query",
          "description" : "An optional template id - if present, the referenced template will be used to fill in the resources field of the deployment creation request. If any resources are present in the request together with the template, the ones coming in the request will prevail and no merging with the template will be performed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The deployment definition",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeploymentCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request was valid (used when validate_only is true)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentCreateResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "The request was valid and a new deployment was created",
            "headers" : {
              "x-cloud-resource-version" : {
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-last-modified" : {
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-created" : {
                "description" : "The date-time when the resource was created (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentCreateResponse"
                }
              }
            }
          },
          "202" : {
            "description" : "The request was valid and deployment creation had already been started.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentCreateResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "The deployment request had errors.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to perform this action.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - CRUD"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/deployments/_search" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Search Deployments",
        "description" : "Retrieves the information for all of the deployments that match the specified query.",
        "operationId" : "search-deployments",
        "parameters" : [ {
          "name" : "minimal_metadata",
          "in" : "query",
          "description" : "Comma separated list of attributes to include in response for deployments found. Useful for reducing response size when retrieving many deployments. Use of this parameter moves the result to the minimal_metadata section of the response",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "minimalMetadata"
        } ],
        "requestBody" : {
          "description" : "(Optional) The search query to run. When not specified, all of the deployments are matched",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "The list of deployments that match the specified query and belong to the authenticated user",
            "headers" : {
              "x-cloud-resource-version" : {
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-last-modified" : {
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-created" : {
                "description" : "The date-time when the resource was created (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentsSearchResponse"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/deployments/eligible-remote-clusters" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get eligible remote clusters",
        "description" : "Returns the list of deployments which contain eligible remote clusters for a specific version.",
        "operationId" : "search-eligible-remote-clusters",
        "parameters" : [ {
          "name" : "version",
          "in" : "query",
          "description" : "The version of the Elasticsearch cluster cluster that will potentially be configured to have remote clusters",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "(Optional) The search query to run against all deployments containing eligible remote clusters. When not specified, all the eligible deployments are matched",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "List of deployments which contains eligible remote clusters for a specific version",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentsSearchResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "The provided version is invalid. (code: `stackpack.invalid_version`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "stackpack.invalid_version" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Remote Clusters"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/deployments/extensions" : {
      "get" : {
        "tags" : [ "Extensions" ],
        "summary" : "List Extensions",
        "description" : "Retrieves all of the available extensions.",
        "operationId" : "list-extensions",
        "responses" : {
          "200" : {
            "description" : "The extensions that are available",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Extensions"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Extensions"
        }
      },
      "post" : {
        "tags" : [ "Extensions" ],
        "summary" : "Create an extension",
        "description" : "Creates the extension.\n The extensions API supports two types of usage patterns.\n A). Specify a `download_url`, http or https URL,  where the extension is currently hosted. This will result in extension being copied to elastic repository.\n B). Create only the extension metadata using the `POST` endpoint and then use `PUT` to upload the extension file. Leave the `download_url` unspecified in this case.\n",
        "operationId" : "create-extension",
        "requestBody" : {
          "description" : "the data that creates the extension",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateExtensionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The extension that was just created",
            "headers" : {
              "x-cloud-resource-version" : {
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-last-modified" : {
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-created" : {
                "description" : "The date-time when the resource was created (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Extension"
                }
              }
            }
          },
          "400" : {
            "description" : "Could not download the extension from the specified URL. (code: `extensions.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "extensions.request_execution_failed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "extensions.no_user_id" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "409" : {
            "description" : "An extension already exists with the generated id. Please try again. (code: `extensions.id_already_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "extensions.id_already_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Extensions"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/deployments/extensions/{extensionId}" : {
      "get" : {
        "tags" : [ "Extensions" ],
        "summary" : "Get Extension",
        "description" : "Retrieves an extension.",
        "operationId" : "get-extension",
        "parameters" : [ {
          "name" : "extensionId",
          "in" : "path",
          "description" : "Id of an extension",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include_deployments",
          "in" : "query",
          "description" : "Include deployments referencing this extension. Up to only 10000 deployments will be included",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "includeDeployments"
        } ],
        "responses" : {
          "200" : {
            "description" : "The Extension",
            "headers" : {
              "x-cloud-resource-version" : {
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-last-modified" : {
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-created" : {
                "description" : "The date-time when the resource was created (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Extension"
                }
              }
            }
          },
          "404" : {
            "description" : "The extension requested does not exist. (code: `extensions.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "extensions.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Extensions"
        }
      },
      "put" : {
        "tags" : [ "Extensions" ],
        "summary" : "Uploads the Extension",
        "description" : "Uploads archive for an extension.",
        "operationId" : "upload-extension",
        "parameters" : [ {
          "name" : "extensionId",
          "in" : "path",
          "description" : "Id of an extension",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExtensionsextensionIdBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Archive uploaded successfully",
            "headers" : {
              "x-cloud-resource-version" : {
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-last-modified" : {
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-created" : {
                "description" : "The date-time when the resource was created (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Extension"
                }
              }
            }
          },
          "400" : {
            "description" : "Could not accept the extensions file. (code: `extensions.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "extensions.request_execution_failed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "401" : {
            "description" : "* The extension does not belong to you. (code: `extensions.unauthorised`)\n* Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "extensions.unauthorised", "extensions.no_user_id" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "The extension you want does not exist. (code: `extensions.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "extensions.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Extensions"
        }
      },
      "post" : {
        "tags" : [ "Extensions" ],
        "summary" : "Update Extension",
        "description" : "Updates an extension.",
        "operationId" : "update-extension",
        "parameters" : [ {
          "name" : "extensionId",
          "in" : "path",
          "description" : "Id of an extension",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The extension update data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateExtensionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Extension updated successfully",
            "headers" : {
              "x-cloud-resource-version" : {
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-last-modified" : {
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-created" : {
                "description" : "The date-time when the resource was created (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Extension"
                }
              }
            }
          },
          "400" : {
            "description" : "Could not download the extension from the specified URL. (code: `extensions.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "extensions.request_execution_failed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "401" : {
            "description" : "* The extension does not belong to you. (code: `extensions.unauthorised`)\n* Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "extensions.unauthorised", "extensions.no_user_id" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "The extension you want does not exist. (code: `extensions.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "extensions.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "409" : {
            "description" : "The version you sent does not match the persisted version. (code: `extensions.version_conflict`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "extensions.version_conflict" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Extensions"
        },
        "x-codegen-request-body-name" : "body"
      },
      "delete" : {
        "tags" : [ "Extensions" ],
        "summary" : "Delete Extension",
        "description" : "Deletes a Extension.",
        "operationId" : "delete-extension",
        "parameters" : [ {
          "name" : "extensionId",
          "in" : "path",
          "description" : "Id of an extension",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Extension deleted successfully",
            "headers" : {
              "x-cloud-resource-version" : {
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-last-modified" : {
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-created" : {
                "description" : "The date-time when the resource was created (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "* The extension does not belong to you. (code: `extensions.unauthorised`)\n* Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "extensions.unauthorised", "extensions.no_user_id" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "The extension requested does not exist. (code: `extensions.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "extensions.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "409" : {
            "description" : "The version you sent does not match the persisted version. (code: `extensions.version_conflict`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "extensions.version_conflict" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Extensions"
        }
      }
    },
    "/deployments/templates" : {
      "get" : {
        "tags" : [ "DeploymentTemplates" ],
        "summary" : "Get deployment templates",
        "description" : "Retrieves all deployment templates.",
        "operationId" : "get-deployment-templates-v2",
        "parameters" : [ {
          "name" : "metadata",
          "in" : "query",
          "description" : "An optional key/value pair in the form of (key:value) that will act as a filter and exclude any templates that do not have a matching metadata item associated",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "show_instance_configurations",
          "in" : "query",
          "description" : "If true, will return details for each instance configuration referenced by the template",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          },
          "x-ballerina-name" : "showInstanceConfigurations"
        }, {
          "name" : "show_max_zones",
          "in" : "query",
          "description" : "If true, will populate the max_zones field in the instance configurations. Only relevant if show_instance_configurations=true",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showMaxZones"
        }, {
          "name" : "stack_version",
          "in" : "query",
          "description" : "If present, it will cause the returned deployment templates to be adapted to return only the elements allowed in that version",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "stackVersion"
        }, {
          "name" : "hide_deprecated",
          "in" : "query",
          "description" : "If true, templates flagged as deprecated will NOT be returned",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "hideDeprecated"
        }, {
          "name" : "region",
          "in" : "query",
          "description" : "Region of the deployment templates",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The deployment templates were returned successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeploymentTemplateInfoV2"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The requested region was not found. (code: `templates.region_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "templates.region_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "401" : {
            "description" : "The user is not authorized to access requested region. (code: `templates.region_not_allowed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "templates.region_not_allowed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Templates"
        }
      }
    },
    "/deployments/templates/{templateId}" : {
      "get" : {
        "tags" : [ "DeploymentTemplates" ],
        "summary" : "Get deployment template",
        "description" : "Retrieves a deployment template by id.",
        "operationId" : "get-deployment-template-v2",
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "description" : "The identifier for the deployment template",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "show_instance_configurations",
          "in" : "query",
          "description" : "If true, will return details for each instance configuration referenced by the template",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          },
          "x-ballerina-name" : "showInstanceConfigurations"
        }, {
          "name" : "show_max_zones",
          "in" : "query",
          "description" : "If true, will populate the max_zones field in the instance configurations. Only relevant if show_instance_configurations=true",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showMaxZones"
        }, {
          "name" : "stack_version",
          "in" : "query",
          "description" : "If present, it will cause the returned deployment template to be adapted to return only the elements allowed in that version",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "stackVersion"
        }, {
          "name" : "region",
          "in" : "query",
          "description" : "Region of the deployment template",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The deployment template was found and returned successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentTemplateInfoV2"
                }
              }
            }
          },
          "400" : {
            "description" : "The requested region is not supported. (code: `templates.region_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "templates.region_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "401" : {
            "description" : "The user is not authorized to access requested region. (code: `templates.region_not_allowed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "templates.region_not_allowed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "The deployment template specified by {template_id} cannot be found. (code: `templates.template_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "templates.template_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Templates"
        }
      }
    },
    "/deployments/traffic-filter/associations/{associationType}/{associatedEntityId}/rulesets" : {
      "get" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Get associated rulesets",
        "description" : "Retrieves the rulesets associated with a deployment.",
        "operationId" : "get-traffic-filter-deployment-ruleset-associations",
        "parameters" : [ {
          "name" : "associationType",
          "in" : "path",
          "description" : "Association type",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "associatedEntityId",
          "in" : "path",
          "description" : "Associated entity ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Rulesets in the deployment were successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrafficFilterSettings"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid association type. (code: `traffic_filter.invalid_association_type`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter.invalid_association_type" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "Error fetching traffic filter rulesets. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter.request_execution_failed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - Associations"
        }
      }
    },
    "/deployments/traffic-filter/link-ids" : {
      "get" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "List traffic filter claimed link id",
        "description" : "List all of the traffic filter claimed link id.",
        "operationId" : "get-traffic-filter-claimed-link-ids",
        "parameters" : [ {
          "name" : "region",
          "in" : "query",
          "description" : "If provided limits the claimed id to that region only",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organization_id",
          "in" : "query",
          "description" : "Retrieves a list of resources that are associated to the specified organization ID. It only takes effect if the user is an admin",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "organizationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of traffic filter claimed link id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrafficFilterClaimedLinkIds"
                }
              }
            }
          },
          "500" : {
            "description" : "Error fetching traffic filter claimed link ids. (code: `traffic_filter_claimed_link_id.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter_claimed_link_id.request_execution_failed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter Claimed Link Id"
        }
      }
    },
    "/deployments/traffic-filter/link-ids/_claim" : {
      "post" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Claim a link id",
        "description" : "Claim the ownership of a link id.",
        "operationId" : "claim-traffic-filter-link-id",
        "requestBody" : {
          "description" : "The specification for traffic filter claimed link id",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TrafficFilterClaimedLinkIdRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ruleset definition is valid and the creation has started",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrafficFilterClaimedLinkIdInfo"
                }
              }
            }
          },
          "500" : {
            "description" : "Error creating the traffic filter ruleset. (code: `traffic_filter_claimed_link_id.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter_claimed_link_id.request_execution_failed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter Claimed Link Id"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/deployments/traffic-filter/link-ids/_unclaim" : {
      "post" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Unclaims a link id",
        "description" : "Unclaims the ownership of a link id.",
        "operationId" : "unclaim-traffic-filter-link-id",
        "requestBody" : {
          "description" : "The specification for traffic filter claimed link id",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TrafficFilterClaimedLinkIdRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The claimed link id was successfully deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Error validating the request. (code: `traffic_filter_claimed_link_id.invalid_input`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter_claimed_link_id.invalid_input" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "Error deleting the traffic filter claimed link id. (code: `traffic_filter_claimed_link_id.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter_claimed_link_id.request_execution_failed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter Claimed Link Id"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/deployments/traffic-filter/rulesets" : {
      "get" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "List traffic filter rulesets",
        "description" : "List all of the traffic filter rulesets.",
        "operationId" : "get-traffic-filter-rulesets",
        "parameters" : [ {
          "name" : "include_associations",
          "in" : "query",
          "description" : "Retrieves a list of resources that are associated to the specified ruleset",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "includeAssociations"
        }, {
          "name" : "region",
          "in" : "query",
          "description" : "If provided limits the rulesets to that region only",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organization_id",
          "in" : "query",
          "description" : "Retrieves a list of resources that are associated to the specified organization ID. It only takes effect if the user is an admin",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "organizationId"
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of traffic filter routes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrafficFilterRulesets"
                }
              }
            }
          },
          "500" : {
            "description" : "Error fetching traffic filter rulesets. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter.request_execution_failed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - CRUD"
        }
      },
      "post" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Create a ruleset",
        "description" : "Creates a ruleset that consists of a set of rules.",
        "operationId" : "create-traffic-filter-ruleset",
        "requestBody" : {
          "description" : "The specification for traffic filter ruleset",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TrafficFilterRulesetRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ruleset definition is valid and the creation has started",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrafficFilterRulesetResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Error creating the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter.request_execution_failed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - CRUD"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/deployments/traffic-filter/rulesets/{rulesetId}" : {
      "get" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Retrieves the ruleset by ID.",
        "description" : "Retrieves a list of resources that are associated to the specified ruleset.",
        "operationId" : "get-traffic-filter-ruleset",
        "parameters" : [ {
          "name" : "rulesetId",
          "in" : "path",
          "description" : "The mandatory ruleset ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include_associations",
          "in" : "query",
          "description" : "Retrieves a list of resources that are associated to the specified ruleset",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "includeAssociations"
        } ],
        "responses" : {
          "200" : {
            "description" : "The container for a set of traffic filter rules",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrafficFilterRulesetInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "Error reading the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter.request_execution_failed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - CRUD"
        }
      },
      "put" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Updates a ruleset",
        "description" : "Updates the ruleset with the definition.",
        "operationId" : "update-traffic-filter-ruleset",
        "parameters" : [ {
          "name" : "rulesetId",
          "in" : "path",
          "description" : "The mandatory ruleset ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The specification for traffic filter ruleset",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TrafficFilterRulesetRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The ruleset definition was valid and the update has started",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrafficFilterRulesetResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "Error reading the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter.request_execution_failed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - CRUD"
        },
        "x-codegen-request-body-name" : "body"
      },
      "delete" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Delete a ruleset",
        "description" : "Deletes the ruleset by ID.",
        "operationId" : "delete-traffic-filter-ruleset",
        "parameters" : [ {
          "name" : "rulesetId",
          "in" : "path",
          "description" : "The mandatory ruleset ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ignore_associations",
          "in" : "query",
          "description" : "When true, ignores the associations and deletes the ruleset. When false, recognizes the associations, which prevents the deletion of the rule set",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "ignoreAssociations"
        } ],
        "responses" : {
          "200" : {
            "description" : "The traffic filter ruleset was successfully deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "Error deleting the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter.request_execution_failed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - CRUD"
        }
      }
    },
    "/deployments/traffic-filter/rulesets/{rulesetId}/associations" : {
      "get" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Get associated deployments",
        "description" : "Retrieves a list of deployments that are associated to the specified ruleset.",
        "operationId" : "get-traffic-filter-ruleset-deployment-associations",
        "parameters" : [ {
          "name" : "rulesetId",
          "in" : "path",
          "description" : "The mandatory ruleset ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Associations referred by traffic filter rulesets were successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RulesetAssociations"
                }
              }
            }
          },
          "500" : {
            "description" : "Error fetching deployments. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter.request_execution_failed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - Associations"
        }
      },
      "post" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Create ruleset association",
        "description" : "Applies the ruleset to the specified deployment.",
        "operationId" : "create-traffic-filter-ruleset-association",
        "parameters" : [ {
          "name" : "rulesetId",
          "in" : "path",
          "description" : "The mandatory ruleset ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Mandatory ruleset association description",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FilterAssociation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Create association request was valid and the association already exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Create association request was valid and the association has been created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "Creation failed. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter.request_execution_failed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - Associations"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/deployments/traffic-filter/rulesets/{rulesetId}/associations/{associationType}/{associatedEntityId}" : {
      "delete" : {
        "tags" : [ "DeploymentsTrafficFilter" ],
        "summary" : "Delete ruleset association",
        "description" : "Deletes the traffic rules in the ruleset from the deployment.",
        "operationId" : "delete-traffic-filter-ruleset-association",
        "parameters" : [ {
          "name" : "rulesetId",
          "in" : "path",
          "description" : "The mandatory ruleset ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "associationType",
          "in" : "path",
          "description" : "Association type",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "associatedEntityId",
          "in" : "path",
          "description" : "Associated entity ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Delete association request was valid and the association has been deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The traffic filter ruleset association cannot be found. (code: `traffic_filter.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "Deletion failed. (code: `traffic_filter.request_execution_failed`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "traffic_filter.request_execution_failed" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployments - Traffic Filter - Associations"
        }
      }
    },
    "/deployments/{deploymentId}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get Deployment",
        "description" : "Retrieves information about a Deployment.",
        "operationId" : "get-deployment",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "show_security",
          "in" : "query",
          "description" : "Whether to include the Elasticsearch 2.x security information in the response - can be large per cluster and also include credentials",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showSecurity"
        }, {
          "name" : "show_metadata",
          "in" : "query",
          "description" : "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showMetadata"
        }, {
          "name" : "show_plans",
          "in" : "query",
          "description" : "Whether to include the full current and pending plan information in the response - can be large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          },
          "x-ballerina-name" : "showPlans"
        }, {
          "name" : "show_plan_logs",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the attempt log - can be very large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanLogs"
        }, {
          "name" : "show_plan_history",
          "in" : "query",
          "description" : "Whether to include the plan history with the current and pending plan information. The results can be very large per cluster.\n By default, if a given resource kind (e.g. Elasticsearch, Kibana, etc.) has more than 100 plans\n (which should be very rare, most likely caused by a bug) only 100 plans are returned for the given resource type:\n The first 10 plans, and the last 90 plans for that resource type.\n If ALL of the plans are desired, pass the `force_all_plan_history` parameter with a value of `true`\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanHistory"
        }, {
          "name" : "show_plan_defaults",
          "in" : "query",
          "description" : "If showing plans, whether to show values that are left at their default value (less readable but more informative)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanDefaults"
        }, {
          "name" : "convert_legacy_plans",
          "in" : "query",
          "description" : "If showing plans, whether to leave pre-2.0.0 plans in their legacy format (the default), or whether to update them to 2.0.x+ format (if 'true')",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "convertLegacyPlans"
        }, {
          "name" : "show_system_alerts",
          "in" : "query",
          "description" : "Number of system alerts (such as forced restarts due to memory limits) to be included in the response - can be large per cluster. Negative numbers or 0 will not return field",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "default" : 0
          },
          "x-ballerina-name" : "showSystemAlerts"
        }, {
          "name" : "show_settings",
          "in" : "query",
          "description" : "Whether to show cluster settings in the response",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showSettings"
        }, {
          "name" : "show_instance_metrics",
          "in" : "query",
          "description" : "Whether to show resources instance metrics in the response",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          },
          "x-ballerina-name" : "showInstanceMetrics"
        }, {
          "name" : "show_instance_configurations",
          "in" : "query",
          "description" : "If true, will return details for each instance configuration referenced by the deployment",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          },
          "x-ballerina-name" : "showInstanceConfigurations"
        }, {
          "name" : "enrich_with_template",
          "in" : "query",
          "description" : "If showing plans, whether to enrich the plan by including the missing elements from the deployment template it is based on",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          },
          "x-ballerina-name" : "enrichWithTemplate"
        }, {
          "name" : "force_all_plan_history",
          "in" : "query",
          "description" : "Force show the entire plan history no matter how long.\n As noted in the `show_plan_history` parameter description, by default, a maximum of 100 plans are shown per resource. \n If `true`, this parameter overrides the default, and ALL plans are returned.\n Use with care as the plan history can be VERY large. Consider pairing with `show_plan_logs=false`.\n ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "forceAllPlanHistory"
        }, {
          "name" : "clear_transient",
          "in" : "query",
          "description" : "If set (defaults to false) then removes the transient section from all child resources, making it safe to reapply via an update",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "clearTransient"
        } ],
        "responses" : {
          "200" : {
            "description" : "The Deployment info response",
            "headers" : {
              "x-cloud-resource-version" : {
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-last-modified" : {
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-created" : {
                "description" : "The date-time when the resource was created (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentGetResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to perform this action.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - CRUD"
        }
      },
      "put" : {
        "tags" : [ "Deployments" ],
        "summary" : "Update Deployment",
        "description" : "Updates a Deployment.",
        "operationId" : "update-deployment",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hide_pruned_orphans",
          "in" : "query",
          "description" : "Whether or not to hide orphaned resources that were shut down (relevant if prune on the request is true)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "hidePrunedOrphans"
        }, {
          "name" : "skip_snapshot",
          "in" : "query",
          "description" : "Whether or not to skip snapshots before shutting down orphaned resources (relevant if prune on the request is true)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "skipSnapshot"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "If true, will just validate the Deployment definition but will not perform the update",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "If specified then checks for conflicts against the version stored in the persistent store (returned in 'x-cloud-resource-version' of the GET request)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The deployment definition",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeploymentUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request was valid and the deployment was updated",
            "headers" : {
              "x-cloud-resource-version" : {
                "description" : "The resource version, which is used to avoid update conflicts with concurrent operations",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-last-modified" : {
                "description" : "The date-time when the resource was last modified (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "x-cloud-resource-created" : {
                "description" : "The date-time when the resource was created (ISO format relative to UTC)",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentUpdateResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "The deployment request had errors.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to perform this action.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - CRUD"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/deployments/{deploymentId}/_restore" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Restores a shutdown Deployment",
        "description" : "Restores all resources in a Deployment.",
        "operationId" : "restore-deployment",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "restore_snapshot",
          "in" : "query",
          "description" : "Whether or not to restore a snapshot for those resources that allow it",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "restoreSnapshot"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was valid and the resources of the deployment were restored",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentRestoreResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "There are Elasticsearch resources in the deployment which are not shut down.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to perform this action.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - CRUD"
        }
      }
    },
    "/deployments/{deploymentId}/_shutdown" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Shuts down Deployment",
        "description" : "Shuts down all resources in a Deployment.",
        "operationId" : "shutdown-deployment",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hide",
          "in" : "query",
          "description" : "Whether or not to hide the deployment and its resources.Only applicable for Platform administrators",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "skip_snapshot",
          "in" : "query",
          "description" : "Whether or not to skip snapshots before shutting down the resources",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "skipSnapshot"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was valid and the resources of the deployment were shutdown",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentShutdownResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Parameter is restricted and can only be set by a Platform administrator. (code: `deployments.restricted_parameter`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.restricted_parameter" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to perform this action.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - CRUD"
        }
      }
    },
    "/deployments/{deploymentId}/apm/{refId}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get Deployment APM Resource Info",
        "description" : "Get info about an APM Resource belonging to a given Deployment.",
        "operationId" : "get-deployment-apm-resource-info",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "show_metadata",
          "in" : "query",
          "description" : "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showMetadata"
        }, {
          "name" : "show_plans",
          "in" : "query",
          "description" : "Whether to include the full current and pending plan information in the response - can be large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          },
          "x-ballerina-name" : "showPlans"
        }, {
          "name" : "show_plan_logs",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the attempt log - can be very large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanLogs"
        }, {
          "name" : "show_plan_history",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the plan history- can be very large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanHistory"
        }, {
          "name" : "show_plan_defaults",
          "in" : "query",
          "description" : "If showing plans, whether to show values that are left at their default value (less readable but more informative)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanDefaults"
        }, {
          "name" : "show_settings",
          "in" : "query",
          "description" : "Whether to show cluster settings in the response",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showSettings"
        }, {
          "name" : "clear_transient",
          "in" : "query",
          "description" : "If set (defaults to false) then removes the transient section from all child resources, making it safe to reapply via an update",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "clearTransient"
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApmResourceInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Info"
        }
      }
    },
    "/deployments/{deploymentId}/apm/{refId}/_reset-token" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Reset the secret token for an APM resource.",
        "description" : "Reset the token of an APM resource.",
        "operationId" : "deployment-apm-reset-secret-token",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Response containing the new secret token, plan to apply it starts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApmCrudResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Reset token is not supported when APM is managed by Elastic Agent. (code: `clusters.cluster_plan_state_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "clusters.cluster_plan_state_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "APM routes"
        }
      }
    },
    "/deployments/{deploymentId}/appsearch/{refId}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get Deployment App Search Resource Info",
        "description" : "Get info about an App Search Resource belonging to a given Deployment.",
        "operationId" : "get-deployment-appsearch-resource-info",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "show_metadata",
          "in" : "query",
          "description" : "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showMetadata"
        }, {
          "name" : "show_plans",
          "in" : "query",
          "description" : "Whether to include the full current and pending plan information in the response - can be large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          },
          "x-ballerina-name" : "showPlans"
        }, {
          "name" : "show_plan_logs",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the attempt log - can be very large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanLogs"
        }, {
          "name" : "show_plan_history",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the plan history- can be very large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanHistory"
        }, {
          "name" : "show_plan_defaults",
          "in" : "query",
          "description" : "If showing plans, whether to show values that are left at their default value (less readable but more informative)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanDefaults"
        }, {
          "name" : "show_settings",
          "in" : "query",
          "description" : "Whether to show cluster settings in the response",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showSettings"
        }, {
          "name" : "clear_transient",
          "in" : "query",
          "description" : "If set (defaults to false) then removes the transient section from all child resources, making it safe to reapply via an update",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "clearTransient"
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppSearchResourceInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Info"
        }
      }
    },
    "/deployments/{deploymentId}/appsearch/{refId}/read_only_mode" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Set AppSearch read-only status",
        "description" : "Enable/Disable read-only mode on the given App Search resource.",
        "operationId" : "get-appsearch-read-only-mode",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReadOnlyResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The Resource specified by ref_id cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "App Search - Read-only"
        }
      },
      "put" : {
        "tags" : [ "Deployments" ],
        "summary" : "Set AppSearch read-only status",
        "description" : "Enable/Disable read-only mode on the given App Search resource.",
        "operationId" : "set-appsearch-read-only-mode",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "read-only request body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReadOnlyRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReadOnlyResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The Resource specified by ref_id cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "App Search - Read-only"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/deployments/{deploymentId}/certificate-authority" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get certificate authority",
        "description" : "Returns the certificate authority used to sign the certificates of this deployment.",
        "operationId" : "get-deployment-certificate-authority",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The certificate authority used to sign the certificates of this deployment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateAuthority"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Elasticsearch Resource cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Trust"
        }
      }
    },
    "/deployments/{deploymentId}/elasticsearch/{refId}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get Deployment Elasticsearch Resource Info",
        "description" : "Get info about an Elasticsearch Resource belonging to a given Deployment.",
        "operationId" : "get-deployment-es-resource-info",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "show_security",
          "in" : "query",
          "description" : "Whether to include the Elasticsearch 2.x security information in the response - can be large per cluster and also include credentials",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showSecurity"
        }, {
          "name" : "show_metadata",
          "in" : "query",
          "description" : "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showMetadata"
        }, {
          "name" : "show_plans",
          "in" : "query",
          "description" : "Whether to include the full current and pending plan information in the response - can be large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          },
          "x-ballerina-name" : "showPlans"
        }, {
          "name" : "show_plan_logs",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the attempt log - can be very large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanLogs"
        }, {
          "name" : "show_plan_history",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the plan history- can be very large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanHistory"
        }, {
          "name" : "show_plan_defaults",
          "in" : "query",
          "description" : "If showing plans, whether to show values that are left at their default value (less readable but more informative)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanDefaults"
        }, {
          "name" : "convert_legacy_plans",
          "in" : "query",
          "description" : "If showing plans, whether to leave pre-2.0.0 plans in their legacy format (the default), or whether to update them to 2.0.x+ format (if 'true')",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "convertLegacyPlans"
        }, {
          "name" : "show_system_alerts",
          "in" : "query",
          "description" : "Number of system alerts (such as forced restarts due to memory limits) to be included in the response - can be large per cluster. Negative numbers or 0 will not return field",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "default" : 0
          },
          "x-ballerina-name" : "showSystemAlerts"
        }, {
          "name" : "show_settings",
          "in" : "query",
          "description" : "Whether to show cluster settings in the response",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showSettings"
        }, {
          "name" : "enrich_with_template",
          "in" : "query",
          "description" : "If showing plans, whether to enrich the plan by including the missing elements from the deployment template it is based on",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          },
          "x-ballerina-name" : "enrichWithTemplate"
        }, {
          "name" : "clear_transient",
          "in" : "query",
          "description" : "If set (defaults to false) then removes the transient section from all child resources, making it safe to reapply via an update",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "clearTransient"
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ElasticsearchResourceInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Info"
        }
      }
    },
    "/deployments/{deploymentId}/elasticsearch/{refId}/_enable-ccr" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Migrate Elasticsearch and associated Kibana resources to enable CCR",
        "description" : "Migrates the specified Elasticsearch resource and its associated Kibana to enable CCR (if supported).",
        "operationId" : "enable-deployment-resource-ccr",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "When `true`, will not enable CCR but returns warnings if any elements may lose availability during CCR enablement",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "validateOnly"
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCommandResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deploymentId}/elasticsearch/{refId}/_enable-ilm" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Migrate Elasticsearch resource to use ILM",
        "description" : "Migrates the specified Elasticsearch resource to use ILM.",
        "operationId" : "enable-deployment-resource-ilm",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "When `true`, does not enable ILM but returns warnings if any applications may lose availability during ILM migration",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "validateOnly"
        } ],
        "requestBody" : {
          "description" : "Information to build the ILM policies that will be created",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnableIlmRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCommandResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/deployments/{deploymentId}/elasticsearch/{refId}/_enable-slm" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Migrate Elasticsearch resource to use SLM",
        "description" : "Migrates the specified Elasticsearch resource to use SLM.",
        "operationId" : "enable-deployment-resource-slm",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "When `true`, does not enable SLM but returns warnings if any applications may lose availability during SLM migration",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "validateOnly"
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCommandResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deploymentId}/elasticsearch/{refId}/_reset-password" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Reset 'elastic' user password",
        "description" : "Resets the password of the 'elastic' user.",
        "operationId" : "reset-elasticsearch-user-password",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "check_completion",
          "in" : "query",
          "description" : "If true, will not reset elastic user password and instead will return a status code signaling whether or not the current credentials are ready to use (eg from creation or the last call to _reset_password)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "checkCompletion"
        } ],
        "responses" : {
          "200" : {
            "description" : "The password reset was out carried successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ElasticsearchElasticUserPasswordResetResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "Failed to reset the 'elastic' user's password. (code: `deployments.elasticsearch.password_reset_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.elasticsearch.password_reset_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deploymentId}/elasticsearch/{refId}/_restart" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Restart Deployment Elasticsearch Resource",
        "description" : "Restarts an Elasticsearch Resource. If a Resource is active: this command re-applies the existing plan but applies a \"cluster_reboot\", which issues a restart command and waits for it to complete. If a Resource is inactive: this command starts it up with the most recent successful plan.",
        "operationId" : "restart-deployment-es-resource",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "restore_snapshot",
          "in" : "query",
          "description" : "When set to true and restoring from shutdown, then will restore the cluster from the last snapshot (if available)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          },
          "x-ballerina-name" : "restoreSnapshot"
        }, {
          "name" : "skip_snapshot",
          "in" : "query",
          "description" : "If true, will not take a snapshot of the cluster before restarting",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          },
          "x-ballerina-name" : "skipSnapshot"
        }, {
          "name" : "cancel_pending",
          "in" : "query",
          "description" : "If true, cancels any pending plans before restarting. If false and there are pending plans, returns an error",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "cancelPending"
        }, {
          "name" : "group_attribute",
          "in" : "query",
          "description" : "Indicates the property or properties used to divide the list of instances to restart in groups. Valid options are: '\\_\\_all\\_\\_' (restart all at once), '\\_\\_zone\\_\\_' by logical zone, '\\_\\_name\\_\\_' one instance at a time, or a comma-separated list of attributes of the instances",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "__zone__"
          },
          "x-ballerina-name" : "groupAttribute"
        }, {
          "name" : "shard_init_wait_time",
          "in" : "query",
          "description" : "The time, in seconds, to wait for shards that show no progress of initializing, before rolling the next group (default: 10 minutes)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "default" : 600
          },
          "x-ballerina-name" : "shardInitWaitTime"
        } ],
        "responses" : {
          "202" : {
            "description" : "The restart command was issued successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCommandResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "422" : {
            "description" : "The command sent to a Resource found the Resource in an illegal state, the error message gives more details. (code: `deployments.deployment_resource_plan_change_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_plan_change_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deploymentId}/elasticsearch/{refId}/_shutdown" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Shutdown Deployment Elasticsearch Resource",
        "description" : "Shutdown Elasticsearch Resource belonging to a given Deployment.",
        "operationId" : "shutdown-deployment-es-resource",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hide",
          "in" : "query",
          "description" : "Hide cluster on shutdown. Hidden clusters are not listed by default. Only applicable for Platform administrators",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "skip_snapshot",
          "in" : "query",
          "description" : "If true, will skip taking a snapshot of the cluster before shutting the cluster down (if even possible)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "skipSnapshot"
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCommandResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Parameter is restricted and can only be set by a Platform administrator. (code: `deployments.restricted_parameter`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.restricted_parameter" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deploymentId}/elasticsearch/{refId}/eligible-remote-clusters" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get eligible remote clusters",
        "description" : "Returns the list of deployments which contain eligible remote clusters for the elasticsearch resource.",
        "operationId" : "get-deployment-es-resource-eligible-remote-clusters",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "(Optional) The search query to run against all deployments containing eligible remote clusters. When not specified, all the eligible deployments are matched",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "List of deployments which contains eligible remote clusters for the resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentsSearchResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "The resource specified doesn't yet have a valid version for the current plan or the pending plan. (code: `deployments.resource_does_not_have_a_valid_version`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.resource_does_not_have_a_valid_version" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Remote Clusters"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/deployments/{deploymentId}/elasticsearch/{refId}/keystore" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get the items in the Elasticsearch resource keystore",
        "description" : "Fetches the current fields and metadata (but not the values) of the keystore for the Elasticsearch resource.",
        "operationId" : "get-deployment-es-resource-keystore",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The contents of the Elasticsearch keystore, with values redacted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeystoreContents"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.metadata_internal_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.metadata_internal_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment Resources - CRUD"
        }
      },
      "patch" : {
        "tags" : [ "Deployments" ],
        "summary" : "Add or remove items from the Elasticsearch resource keystore",
        "description" : "Adds the specified values to the Elasticsearch keystore, or removes the keys for the unspecified values.",
        "operationId" : "set-deployment-es-resource-keystore",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new settings that will be applied to the keystore of the Elasticsearch resource",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeystoreContents"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The new contents of the Elasticsearch keystore",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeystoreContents"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.metadata_internal_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.metadata_internal_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment Resources - CRUD"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/deployments/{deploymentId}/elasticsearch/{refId}/remote-clusters" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get certificate based remote clusters",
        "description" : "Returns the list of certificate based remote clusters for the elasticsearch resource.",
        "operationId" : "get-deployment-es-resource-remote-clusters",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of certificate based remote clusters for the resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteResources"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Remote Clusters"
        }
      },
      "put" : {
        "tags" : [ "Deployments" ],
        "summary" : "Set certificate based remote clusters",
        "description" : "Overwrites or creates the list of certificate based remote clusters for the elasticsearch resource.",
        "operationId" : "set-deployment-es-resource-remote-clusters",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "List of certificate based remote clusters for the resource",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoteResources"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "The Remote Clusters were updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Remote Clusters"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/deployments/{deploymentId}/enterprise_search/{refId}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get Deployment Enterprise Search Resource Info",
        "description" : "Get info about an Enterprise Search Resource belonging to a given Deployment.",
        "operationId" : "get-deployment-enterprise-search-resource-info",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "show_metadata",
          "in" : "query",
          "description" : "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showMetadata"
        }, {
          "name" : "show_plans",
          "in" : "query",
          "description" : "Whether to include the full current and pending plan information in the response - can be large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          },
          "x-ballerina-name" : "showPlans"
        }, {
          "name" : "show_plan_logs",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the attempt log - can be very large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanLogs"
        }, {
          "name" : "show_plan_history",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the plan history- can be very large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanHistory"
        }, {
          "name" : "show_plan_defaults",
          "in" : "query",
          "description" : "If showing plans, whether to show values that are left at their default value (less readable but more informative)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanDefaults"
        }, {
          "name" : "show_settings",
          "in" : "query",
          "description" : "Whether to show cluster settings in the response",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showSettings"
        }, {
          "name" : "clear_transient",
          "in" : "query",
          "description" : "If set (defaults to false) then removes the transient section from all child resources, making it safe to reapply via an update",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "clearTransient"
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnterpriseSearchResourceInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Info"
        }
      }
    },
    "/deployments/{deploymentId}/integrations_server/{refId}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get Deployment Integrations Server Resource Info",
        "description" : "Get info about an Integrations Server Resource belonging to a given Deployment.",
        "operationId" : "get-deployment-integrations-server-resource-info",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "show_metadata",
          "in" : "query",
          "description" : "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showMetadata"
        }, {
          "name" : "show_plans",
          "in" : "query",
          "description" : "Whether to include the full current and pending plan information in the response - can be large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          },
          "x-ballerina-name" : "showPlans"
        }, {
          "name" : "show_plan_logs",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the attempt log - can be very large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanLogs"
        }, {
          "name" : "show_plan_history",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the plan history- can be very large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanHistory"
        }, {
          "name" : "show_plan_defaults",
          "in" : "query",
          "description" : "If showing plans, whether to show values that are left at their default value (less readable but more informative)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanDefaults"
        }, {
          "name" : "show_settings",
          "in" : "query",
          "description" : "Whether to show cluster settings in the response",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showSettings"
        }, {
          "name" : "clear_transient",
          "in" : "query",
          "description" : "If set (defaults to false) then removes the transient section from all child resources, making it safe to reapply via an update",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "clearTransient"
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationsServerResourceInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Info"
        }
      }
    },
    "/deployments/{deploymentId}/kibana/{refId}" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get Deployment Kibana Resource Info",
        "description" : "Get info about a Kibana Resource belonging to a given Deployment.",
        "operationId" : "get-deployment-kib-resource-info",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "show_metadata",
          "in" : "query",
          "description" : "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showMetadata"
        }, {
          "name" : "show_plans",
          "in" : "query",
          "description" : "Whether to include the full current and pending plan information in the response - can be large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          },
          "x-ballerina-name" : "showPlans"
        }, {
          "name" : "show_plan_logs",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the attempt log - can be very large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanLogs"
        }, {
          "name" : "show_plan_history",
          "in" : "query",
          "description" : "Whether to include with the current and pending plan information the plan history- can be very large per cluster",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanHistory"
        }, {
          "name" : "show_plan_defaults",
          "in" : "query",
          "description" : "If showing plans, whether to show values that are left at their default value (less readable but more informative)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showPlanDefaults"
        }, {
          "name" : "convert_legacy_plans",
          "in" : "query",
          "description" : "If showing plans, whether to leave pre-2.0.0 plans in their legacy format (the default), or whether to update them to 2.0.x+ format (if 'true')",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "convertLegacyPlans"
        }, {
          "name" : "show_settings",
          "in" : "query",
          "description" : "Whether to show cluster settings in the response",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showSettings"
        }, {
          "name" : "clear_transient",
          "in" : "query",
          "description" : "If set (defaults to false) then removes the transient section from all child resources, making it safe to reapply via an update",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "clearTransient"
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KibanaResourceInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Info"
        }
      }
    },
    "/deployments/{deploymentId}/migrate_template" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Build request to migrate deployment to a different template",
        "description" : "Returns a deployment update request that would migrate this deployment to a different template.",
        "operationId" : "migrate-deployment-template",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "template_id",
          "in" : "query",
          "description" : "The ID of the deployment template to migrate to",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "templateId"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was valid and the deployment can be migrated to the template with the provided ID",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentUpdateRequest"
                }
              }
            }
          },
          "400" : {
            "description" : "The deployment cannot be successfully migrated to the template with the provided ID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to perform this action.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - CRUD"
        }
      }
    },
    "/deployments/{deploymentId}/upgrade_assistant/status" : {
      "get" : {
        "tags" : [ "Deployments" ],
        "summary" : "Get Deployment upgrade assistant status",
        "description" : "Get details about an Elasticsearch resource belonging to a given deployment.",
        "operationId" : "get-deployment-upgrade-assistant-status",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "target_version",
          "in" : "query",
          "description" : "If present, value is included in resource request to provide additional context (only supported for Kibana)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "targetVersion"
        } ],
        "responses" : {
          "200" : {
            "description" : "The Upgrade Assistant returned the status successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentUpgradeAssistantStatusResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Upgrade Assistant"
        }
      }
    },
    "/deployments/{deploymentId}/{resourceKind}/{refId}/_restore" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Restores a shutdown resource",
        "description" : "Restores a shutdown resource belonging to a given Deployment.",
        "operationId" : "restore-deployment-resource",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceKind",
          "in" : "path",
          "description" : "The kind of resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "elasticsearch", "kibana", "apm", "appsearch", "enterprise_search", "integrations_server" ]
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "restore_snapshot",
          "in" : "query",
          "description" : "Whether or not to restore a snapshot for those resources that allow it",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "restoreSnapshot"
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard Deployment Resource Crud Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCrudResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "* The Resource does not have a pending plan. (code: `deployments.resource_does_not_have_a_pending_plan`)\n* The resource is not shut down. (code: `deployments.resource_not_shutdown`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.resource_does_not_have_a_pending_plan", "deployments.resource_not_shutdown" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment Resources - CRUD"
        }
      }
    },
    "/deployments/{deploymentId}/{resourceKind}/{refId}/instances/_start" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Start all instances",
        "description" : "Starts all instances belonging to a Deployment Resource.",
        "operationId" : "start-deployment-resource-instances-all",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceKind",
          "in" : "path",
          "description" : "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "The start command was issued successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCommandResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.instance_update_prohibited_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found", "deployments.instances_missing_on_update_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deploymentId}/{resourceKind}/{refId}/instances/_stop" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Stop all instances",
        "description" : "Stops all instances belonging to a Deployment Resource.",
        "operationId" : "stop-deployment-resource-instances-all",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceKind",
          "in" : "path",
          "description" : "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "The stop command was issued successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCommandResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "The stop maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.instance_update_prohibited_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found", "deployments.instances_missing_on_update_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deploymentId}/{resourceKind}/{refId}/instances/maintenance-mode/_start" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Start maintenance mode (all instances)",
        "description" : "Starts maintenance mode of all instances belonging to a Deployment Resource.",
        "operationId" : "start-deployment-resource-instances-all-maintenance-mode",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceKind",
          "in" : "path",
          "description" : "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "The start maintenance command was issued successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCommandResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.instance_update_prohibited_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found", "deployments.instances_missing_on_update_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deploymentId}/{resourceKind}/{refId}/instances/maintenance-mode/_stop" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Stop maintenance mode (all instances)",
        "description" : "Stops maintenance mode of all instances belonging to a Deployment Resource.",
        "operationId" : "stop-deployment-resource-instances-all-maintenance-mode",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceKind",
          "in" : "path",
          "description" : "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "The stop maintenance mode command was issued successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCommandResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "The stop maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.instance_update_prohibited_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found", "deployments.instances_missing_on_update_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deploymentId}/{resourceKind}/{refId}/instances/{instanceIds}/_start" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Start instances",
        "description" : "Starts instances belonging to a Deployment Resource.",
        "operationId" : "start-deployment-resource-instances",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceKind",
          "in" : "path",
          "description" : "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceIds",
          "in" : "path",
          "description" : "A comma-separated list of instance identifiers",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "ignore_missing",
          "in" : "query",
          "description" : "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "ignoreMissing"
        } ],
        "responses" : {
          "202" : {
            "description" : "The start command was issued successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCommandResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.instance_update_prohibited_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found", "deployments.instances_missing_on_update_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deploymentId}/{resourceKind}/{refId}/instances/{instanceIds}/_stop" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Stop instances",
        "description" : "Stops instances belonging to a Deployment Resource.",
        "operationId" : "stop-deployment-resource-instances",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceKind",
          "in" : "path",
          "description" : "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceIds",
          "in" : "path",
          "description" : "A comma-separated list of instance identifiers",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "ignore_missing",
          "in" : "query",
          "description" : "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "ignoreMissing"
        } ],
        "responses" : {
          "202" : {
            "description" : "The stop command was issued successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCommandResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.instance_update_prohibited_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found", "deployments.instances_missing_on_update_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deploymentId}/{resourceKind}/{refId}/instances/{instanceIds}/maintenance-mode/_start" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Start maintenance mode",
        "description" : "Starts maintenance mode of instances belonging to a Deployment Resource.",
        "operationId" : "start-deployment-resource-maintenance-mode",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceKind",
          "in" : "path",
          "description" : "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceIds",
          "in" : "path",
          "description" : "A comma-separated list of instance identifiers",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "ignore_missing",
          "in" : "query",
          "description" : "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "ignoreMissing"
        } ],
        "responses" : {
          "202" : {
            "description" : "The start maintenance command was issued successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCommandResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.instance_update_prohibited_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found", "deployments.instances_missing_on_update_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deploymentId}/{resourceKind}/{refId}/instances/{instanceIds}/maintenance-mode/_stop" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Stop maintenance mode",
        "description" : "Stops maintenance mode of instances belonging to a Resource.",
        "operationId" : "stop-deployment-resource-maintenance-mode",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceKind",
          "in" : "path",
          "description" : "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceIds",
          "in" : "path",
          "description" : "A comma-separated list of instance identifiers",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "ignore_missing",
          "in" : "query",
          "description" : "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "ignoreMissing"
        } ],
        "responses" : {
          "202" : {
            "description" : "The stop maintenance mode command was issued successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCommandResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "The stop maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.instance_update_prohibited_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found", "deployments.instances_missing_on_update_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deploymentId}/{resourceKind}/{refId}/plan/pending" : {
      "delete" : {
        "tags" : [ "Deployments" ],
        "summary" : "Cancel resource pending plan",
        "description" : "Cancels the pending plan of a Resource belonging to a given Deployment.",
        "operationId" : "cancel-deployment-resource-pending-plan",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceKind",
          "in" : "path",
          "description" : "The kind of resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "elasticsearch", "kibana", "apm", "appsearch", "enterprise_search", "integrations_server" ]
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force_delete",
          "in" : "query",
          "description" : "When `true`, deletes the pending plan instead of attempting a graceful cancellation. The default is `false`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "forceDelete"
        }, {
          "name" : "ignore_missing",
          "in" : "query",
          "description" : "When `true`, returns successfully, even when plans are missing. The default is `false`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "ignoreMissing"
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard Deployment Resource Crud Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCrudResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "The Resource does not have a pending plan. (code: `deployments.resource_does_not_have_a_pending_plan`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.resource_does_not_have_a_pending_plan" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment Resources - CRUD"
        }
      }
    },
    "/deployments/{deploymentId}/{statelessResourceKind}/{refId}/_restart" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Restart Deployment Stateless Resource",
        "description" : "Restarts a Stateless Resource. If a Resource is active: this command re-applies the existing plan but applies a \"cluster_reboot\", which issues a restart command and waits for it to complete. If a Resource is inactive: this command starts it up with the most recent successful plan.",
        "operationId" : "restart-deployment-stateless-resource",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "statelessResourceKind",
          "in" : "path",
          "description" : "The kind of stateless resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "kibana", "apm", "appsearch", "enterprise_search", "integrations_server" ]
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cancel_pending",
          "in" : "query",
          "description" : "If true, cancels any pending plans before restarting. If false and there are pending plans, returns an error",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "cancelPending"
        } ],
        "responses" : {
          "202" : {
            "description" : "The restart command was issued successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCommandResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "422" : {
            "description" : "The command sent to a Resource found the Resource in an illegal state, the error message gives more details. (code: `deployments.deployment_resource_plan_change_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_plan_change_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/deployments/{deploymentId}/{statelessResourceKind}/{refId}/_shutdown" : {
      "post" : {
        "tags" : [ "Deployments" ],
        "summary" : "Shutdown Deployment Stateless Resource",
        "description" : "Shut down Stateless Resource belonging to a given Deployment.\nKibana cannot be shut down on Elasticsearch Service as it is required for Elasticsearch administrative functions, such as Snapshot Lifecycle Management and version upgrades.",
        "operationId" : "shutdown-deployment-stateless-resource",
        "parameters" : [ {
          "name" : "deploymentId",
          "in" : "path",
          "description" : "Identifier for the Deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "statelessResourceKind",
          "in" : "path",
          "description" : "The kind of stateless resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "kibana", "apm", "appsearch", "enterprise_search", "integrations_server" ]
          }
        }, {
          "name" : "refId",
          "in" : "path",
          "description" : "User-specified RefId for the Resource (or '_main' if there is only one)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hide",
          "in" : "query",
          "description" : "Hide cluster on shutdown. Hidden clusters are not listed by default. Only applicable for Platform administrators",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "skip_snapshot",
          "in" : "query",
          "description" : "If true, will skip taking a snapshot of the cluster before shutting the cluster down (if even possible)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "skipSnapshot"
        } ],
        "responses" : {
          "200" : {
            "description" : "Standard response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentResourceCommandResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Parameter is restricted and can only be set by a Platform administrator. (code: `deployments.restricted_parameter`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.restricted_parameter" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_not_found", "deployments.deployment_resource_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "500" : {
            "description" : "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "deployments.deployment_resource_no_longer_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Deployment - Commands"
        }
      }
    },
    "/organizations" : {
      "get" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "List organizations",
        "description" : "Fetch organizations available to the current user. Currently unavailable in self-hosted ECE.",
        "operationId" : "list-organizations",
        "responses" : {
          "200" : {
            "description" : "Organizations fetched successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationList"
                }
              }
            }
          },
          "401" : {
            "description" : "User not found. (code: `user.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "user.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        }
      }
    },
    "/organizations/invitations/{invitationToken}" : {
      "get" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Get organization invitation",
        "description" : "Gets a single invitation to an organization by token. Currently unavailable in self-hosted ECE.",
        "operationId" : "get-organization-invitation",
        "parameters" : [ {
          "name" : "invitationToken",
          "in" : "path",
          "description" : "Organization invitation token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Organization invitation fetched successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationInvitation"
                }
              }
            }
          },
          "404" : {
            "description" : "Invitation not found. (code: `organization.invitation_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.invitation_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        }
      }
    },
    "/organizations/invitations/{invitationToken}/_accept" : {
      "post" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Accept an organization invitation",
        "description" : "Accepts an organization invitation. Currently unavailable in self-hosted ECE.",
        "operationId" : "accept-organization-invitation",
        "parameters" : [ {
          "name" : "invitationToken",
          "in" : "path",
          "description" : "Organization invitation token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Organization invitation accepted successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "User already belongs to organization. (code: `organization.user_organization_already_belongs`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.user_organization_already_belongs" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "403" : {
            "description" : "The current user authentication is not valid. (code: `root.invalid_authentication`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "root.invalid_authentication" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "* Organization not found. (code: `organization.not_found`)\n* User not found. (code: `user.not_found`)\n* Invitation not found. (code: `organization.invitation_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found", "user.not_found", "organization.invitation_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        }
      }
    },
    "/organizations/{organizationId}" : {
      "get" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Fetch organization information",
        "description" : "Fetch a single organization by id. Currently unavailable in self-hosted ECE.",
        "operationId" : "get-organization",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Organization fetched successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            }
          },
          "401" : {
            "description" : "User not found. (code: `user.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "user.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "403" : {
            "description" : "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.invalid_access" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        }
      },
      "put" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Update organization",
        "description" : "> WARNING\n> This endpoint is deprecated and scheduled to be removed in the next major version.\n\nUpdates an existing organization. Currently unavailable in self-hosted ECE.",
        "operationId" : "update-organization",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The organization to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Organization updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            }
          },
          "400" : {
            "description" : "* Name must be between 2 and 30 characters. (code: `organization.invalid_name`)\n* User already has an organization. (code: `organization.user_organization_already_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.invalid_name", "organization.user_organization_already_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to perform this action",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "403" : {
            "description" : "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.invalid_access" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/organizations/{organizationId}/domains" : {
      "get" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Get domain claims",
        "description" : "Get domain claims for the organization.",
        "operationId" : "domain-claim-get-domain-claims",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The claimed domains for the organization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetOrganizationClaimedDomainsResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "IamService"
        }
      },
      "delete" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Delete domain claim",
        "description" : "Delete domain claim.",
        "operationId" : "domain-claim-delete",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The domain claim to remove",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeleteDomainClaimRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "With status 200 ok to signal the domain has been unclaimed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "An IdP is configured for the organization. (code: `org.idp.idp_configured`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "org.idp.idp_configured" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "409" : {
            "description" : "Concurrent organization modification. (code: `org.domain_claim.concurrent_organization_modification`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "org.domain_claim.concurrent_organization_modification" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "IamService"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/organizations/{organizationId}/domains/_generate_verification_code" : {
      "post" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Generate verification code",
        "description" : "Generate verification code for the domain claim challenge.",
        "operationId" : "domain-claim-generate-verification-code",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The verification code request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VerificationCodeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The verification code response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VerificationCodeResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "IamService"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/organizations/{organizationId}/domains/_verify" : {
      "post" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Verify domain claim",
        "description" : "Verify domain claim challenge.",
        "operationId" : "domain-claim-verify-domain",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The verification code request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainVerificationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "With status 200 ok to signal the domain has been claimed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Domain claim already exists. (code: `org.domain_claim.already_exists`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "org.domain_claim.already_exists" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "409" : {
            "description" : "Concurrent organization modification. (code: `org.domain_claim.concurrent_organization_modification`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "org.domain_claim.concurrent_organization_modification" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "449" : {
            "description" : "The challenge can not be verified at the moment, please retry later",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "IamService"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/organizations/{organizationId}/idp" : {
      "get" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Get organization IdP",
        "description" : "Gets the oranization's IdP. Currently unavailable in self-hosted ECE.",
        "operationId" : "get-organization-idp",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The IdP info",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationIdp"
                }
              }
            }
          },
          "404" : {
            "description" : "IdP was not configured yet. (code: `org.idp.idp_not_configured`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "org.idp.idp_not_configured" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        }
      },
      "put" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Setup organization IdP",
        "description" : "Sets up an organization's IdP. Currently unavailable in self-hosted ECE.",
        "operationId" : "setup-organization-idp",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The IdP configuration",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IdpConfigurationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The IdP info",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationIdp"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        },
        "x-codegen-request-body-name" : "body"
      },
      "delete" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Tear down organization IdP",
        "description" : "Tear down up an organization's IdP. Currently unavailable in self-hosted ECE.",
        "operationId" : "teardown-organization-idp",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The IdP was successfully removed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization IdP not configured. (code: `org.idp.idp_not_configured`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "org.idp.idp_not_configured" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        }
      }
    },
    "/organizations/{organizationId}/idp/metadata.xml" : {
      "get" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Get organization service provider SAML2 metadata.xml for configuring the identity provider",
        "description" : "Gets the oranization's IdP metadata.xml. Currently unavailable in self-hosted ECE.",
        "operationId" : "get-organization-idp-metadata",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The IdP info",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "IdP was not configured yet. (code: `org.idp.idp_not_configured`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "org.idp.idp_not_configured" ]
                }
              }
            },
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        }
      }
    },
    "/organizations/{organizationId}/invitations" : {
      "get" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "List organization invitations",
        "description" : "Fetch open invitations to the selected organization. Currently unavailable in self-hosted ECE.",
        "operationId" : "list-organization-invitations",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Organization invitations fetched successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationInvitations"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        }
      },
      "post" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Create organization invitations",
        "description" : "Creates or refreshes organization invitations. Currently unavailable in self-hosted ECE.",
        "operationId" : "create-organization-invitations",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The organization invitations to create or refresh",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganizationInvitationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Organization invitations created successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationInvitations"
                }
              }
            }
          },
          "400" : {
            "description" : "* Invitation email was not valid. (code: `organization.invitation_invalid_email`)\n* Invitation already sent. (code: `organization.invitation_already_exists`)\n* User already belongs to organization. (code: `organization.user_organization_already_belongs`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.invitation_invalid_email", "organization.invitation_already_exists", "organization.user_organization_already_belongs" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "403" : {
            "description" : "The current user authentication is not valid. (code: `root.invalid_authentication`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "root.invalid_authentication" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "* Organization not found. (code: `organization.not_found`)\n* User not found. (code: `user.not_found`)\n* Invitation sender does not belong to organization. (code: `organization.user_organization_does_not_belong`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found", "user.not_found", "organization.user_organization_does_not_belong" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "429" : {
            "description" : "Request exceeds organization invitation creation rate limits. (code: `organization.invitations_rate_limit_exceeded`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.invitations_rate_limit_exceeded" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/organizations/{organizationId}/invitations/{invitationTokens}" : {
      "delete" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Delete organization invitations",
        "description" : "Deletes one or more organization invitations. Currently unavailable in self-hosted ECE.",
        "operationId" : "delete-organization-invitations",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invitationTokens",
          "in" : "path",
          "description" : "CSV list of Invitation tokens",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Organization invitations deleted successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "No valid invitation token was supplied. (code: `root.invalid_data`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "root.invalid_data" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "* Organization not found. (code: `organization.not_found`)\n* Invitation not found. (code: `organization.invitation_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found", "organization.invitation_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        }
      }
    },
    "/organizations/{organizationId}/members" : {
      "get" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "List organization members",
        "description" : "Fetch users belonging to the selected organization. Currently unavailable in self-hosted ECE.",
        "operationId" : "list-organization-members",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Organization members fetched successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationMemberships"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        }
      }
    },
    "/organizations/{organizationId}/members/{userIds}" : {
      "delete" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Delete organization memberships",
        "description" : "Deletes one or more organization memberships. Currently unavailable in self-hosted ECE.",
        "operationId" : "delete-organization-memberships",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userIds",
          "in" : "path",
          "description" : "CSV list of User identifiers",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Whether or not to force the removal of Org memberships (effective only for Platform Admins)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Organization membership deleted successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "* User not found. (code: `user.not_found`)\n* Organization not found. (code: `organization.not_found`)\n* Organization membership not found. (code: `organization.membership_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "user.not_found", "organization.not_found", "organization.membership_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        }
      }
    },
    "/organizations/{organizationId}/role_mappings" : {
      "get" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Get role  mappings",
        "description" : "Gets the organization role  mappings. Currently unavailable in self-hosted ECE.",
        "operationId" : "get-role-mappings",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The IdP info",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetRoleMappingsResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        }
      },
      "put" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Updates role mappings",
        "description" : "Updates the role assignments applicable when logging via SSO. Currently unavailable in self-hosted ECE.",
        "operationId" : "update-role-mappings",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The role  mappings to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOrganizationRoleMappingRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An empty response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error. (code: `org.role_mapping_rule.syntax_error`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "org.role_mapping_rule.syntax_error" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        },
        "x-codegen-request-body-name" : "body"
      },
      "delete" : {
        "tags" : [ "Organizations", "IamService" ],
        "summary" : "Delete role  mappings",
        "description" : "Deletes the organization role  mappings. Currently unavailable in self-hosted ECE.",
        "operationId" : "delete-role-mappings",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Identifier for the Organization",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The mappings were successfully deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Organizations"
        }
      }
    },
    "/stack/versions" : {
      "get" : {
        "tags" : [ "Stack" ],
        "summary" : "Get stack versions",
        "description" : "By default, retrieves only the available Elastic Stack versions. To retrieve all of the Elastic Stack versions, use the `show_deleted parameter`.",
        "operationId" : "get-version-stacks",
        "parameters" : [ {
          "name" : "show_deleted",
          "in" : "query",
          "description" : "Whether to show deleted stack versions or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showDeleted"
        }, {
          "name" : "show_unusable",
          "in" : "query",
          "description" : "Whether to show versions that are unusable by the authenticated user",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "x-ballerina-name" : "showUnusable"
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of all available Elastic Stack versions are retrieved, including the template version and structure",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StackVersionConfigs"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Stack - Versions - CRUD"
        }
      }
    },
    "/trusted-environments" : {
      "get" : {
        "tags" : [ "TrustedEnvironments" ],
        "summary" : "Get trusted environments",
        "description" : "Returns the list of trusted environments for the organization. If no organization is passed in, the organization attached to the user is assumed.",
        "operationId" : "get-trusted-envs",
        "responses" : {
          "200" : {
            "description" : "Trusted environments for this organization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ElasticsearchClusterTrustSettings"
                }
              }
            }
          },
          "404" : {
            "description" : "Organization not found. (code: `organization.not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "organization.not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "TrustedEnvironments"
        }
      }
    },
    "/users/auth/keys" : {
      "get" : {
        "tags" : [ "Authentication", "IamService" ],
        "summary" : "Get all API keys",
        "description" : "Retrieves the metadata for all of the API keys that the user generated.",
        "operationId" : "get-api-keys",
        "responses" : {
          "200" : {
            "description" : "The metadata for the API keys is retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiKeysResponse"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Authentication"
        }
      },
      "post" : {
        "tags" : [ "Authentication", "IamService" ],
        "summary" : "Create API key",
        "description" : "Creates a new API key.",
        "operationId" : "create-api-key",
        "requestBody" : {
          "description" : "The request to create the API key",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateApiKeyRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The API key is created and returned in the body of the response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiKeyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "The request is invalid. Specify a different request, then try again. (code: `api_keys.invalid_input`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "api_keys.invalid_input" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Authentication"
        },
        "x-codegen-request-body-name" : "body"
      },
      "delete" : {
        "tags" : [ "Authentication", "IamService" ],
        "summary" : "Delete API keys",
        "description" : "Delete or invalidate API keys.",
        "operationId" : "delete-api-keys",
        "requestBody" : {
          "description" : "The request to delete API keys",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeleteApiKeysRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The API keys are deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Authentication"
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/users/auth/keys/{apiKeyId}" : {
      "get" : {
        "tags" : [ "Authentication", "IamService" ],
        "summary" : "Get API key",
        "description" : "Retrieves the metadata for an API key.",
        "operationId" : "get-api-key",
        "parameters" : [ {
          "name" : "apiKeyId",
          "in" : "path",
          "description" : "The API Key ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The API key metadata is retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiKeyResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The {api_key_id} can't be found. (code: `api_keys.key_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "api_keys.key_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Authentication"
        }
      },
      "delete" : {
        "tags" : [ "Authentication", "IamService" ],
        "summary" : "Delete API key",
        "description" : "Delete or invalidate the API key.",
        "operationId" : "delete-api-key",
        "parameters" : [ {
          "name" : "apiKeyId",
          "in" : "path",
          "description" : "The API Key ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The API key is deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The {api_key_id} can't be found. (code: `api_keys.key_not_found`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "api_keys.key_not_found" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Authentication"
        }
      }
    },
    "/users/{userId}/role_assignments" : {
      "post" : {
        "tags" : [ "UserRoleAssignments", "IamService" ],
        "summary" : "Add Role Assignments",
        "description" : "Adds a set of RoleAssignments to the specified User. Currently unavailable in self-hosted ECE.",
        "operationId" : "add-role-assignments",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "Identifier for the user; include realm name and id if required",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Role Assignments to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoleAssignments"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Role Assignments were successfully added to the target User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "The target user Id is invalid. (code: `role_assignments.invalid_target_user_id`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "role_assignments.invalid_target_user_id" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "401" : {
            "description" : "Credentials were invalid. (code: `root.unauthorized`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "root.unauthorized" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "403" : {
            "description" : "You are not authorised to add the specified RoleAssignments. (code: `role_assignments.unauthorized_role_assignments`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "role_assignments.unauthorized_role_assignments" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Users - Role Assignments"
        },
        "x-codegen-request-body-name" : "body"
      },
      "delete" : {
        "tags" : [ "UserRoleAssignments", "IamService" ],
        "summary" : "Remove Role Assignments",
        "description" : "Removes a set of RoleAssignments from the specified User. Currently unavailable in self-hosted ECE.",
        "operationId" : "remove-role-assignments",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "Identifier for the user; include realm name and id if required",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Role Assignments to remove",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoleAssignments"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Role Assignments were successfully removed from the target User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "The target user Id is invalid. (code: `role_assignments.invalid_target_user_id`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "role_assignments.invalid_target_user_id" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "401" : {
            "description" : "Credentials were invalid. (code: `root.unauthorized`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "root.unauthorized" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          },
          "403" : {
            "description" : "You are not authorised to remove the specified RoleAssignments. (code: `role_assignments.unauthorized_role_assignments`)",
            "headers" : {
              "x-cloud-error-codes" : {
                "description" : "The error codes associated with the response",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "enum" : [ "role_assignments.unauthorized_role_assignments" ]
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BasicFailedReply"
                }
              }
            }
          }
        },
        "x-doc" : {
          "tag" : "Users - Role Assignments"
        },
        "x-codegen-request-body-name" : "body"
      }
    }
  },
  "components" : {
    "schemas" : {
      "TrafficFilterRulesets" : {
        "required" : [ "rulesets" ],
        "type" : "object",
        "properties" : {
          "rulesets" : {
            "type" : "array",
            "description" : "List of traffic filter rules",
            "items" : {
              "$ref" : "#/components/schemas/TrafficFilterRulesetInfo"
            }
          }
        },
        "description" : "The container for a set of traffic filter rulesets"
      },
      "ApmCrudResponse" : {
        "required" : [ "secret_token" ],
        "type" : "object",
        "properties" : {
          "diagnostics" : {
            "type" : "object",
            "properties" : { },
            "description" : "If the endpoint is called with URL param 'validate_only=true', then this contains advanced debug info (the internal plan representation)"
          },
          "secret_token" : {
            "type" : "string",
            "description" : "The secret token for accessing the server",
            "x-ballerina-name" : "secretToken"
          },
          "apm_id" : {
            "type" : "string",
            "description" : "For an operation creating or updating an APM server, the Id of that server",
            "x-ballerina-name" : "apmId"
          }
        },
        "description" : "The response to an APM CRUD (create/update-plan) request"
      },
      "AppSearchPayload" : {
        "required" : [ "elasticsearch_cluster_ref_id", "plan", "ref_id", "region" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "A locally-unique user-specified id for AppSearch",
            "x-ballerina-name" : "refId"
          },
          "settings" : {
            "$ref" : "#/components/schemas/AppSearchSettings"
          },
          "elasticsearch_cluster_ref_id" : {
            "type" : "string",
            "description" : "Alias to the Elasticsearch Cluster to attach AppSearch to",
            "x-ballerina-name" : "elasticsearchClusterRefId"
          },
          "display_name" : {
            "type" : "string",
            "description" : "The human readable name for the AppSearch cluster (default: takes the name of its Elasticsearch cluster)",
            "x-ballerina-name" : "displayName"
          },
          "region" : {
            "type" : "string",
            "description" : "The region where this resource exists"
          },
          "plan" : {
            "$ref" : "#/components/schemas/AppSearchPlan"
          }
        },
        "description" : "An AppSearch creation request paired with the alias of the Elasticsearch cluster it should be paired with"
      },
      "ElasticsearchPlanControlConfiguration" : {
        "type" : "object",
        "properties" : {
          "cluster_reboot" : {
            "type" : "string",
            "description" : "Set to 'forced' to force a reboot as part of the upgrade plan. NOTES: (ie taking an existing plan and leaving it alone except for setting 'transient.plan_configuration.cluster_reboot': 'forced' will reboot the cluster)",
            "enum" : [ "forced" ],
            "x-ballerina-name" : "clusterReboot"
          },
          "calm_wait_time" : {
            "type" : "integer",
            "description" : "This timeout determines how long to give a cluster after it responds to API calls before performing actual operations on it. It defaults to 5s",
            "format" : "int64",
            "x-ballerina-name" : "calmWaitTime"
          },
          "max_snapshot_attempts" : {
            "type" : "integer",
            "description" : "If taking a snapshot (ie unless 'skip_snapshots': true) then will retry on failure at most this number of times (default: 5)",
            "format" : "int32",
            "x-ballerina-name" : "maxSnapshotAttempts"
          },
          "max_snapshot_age" : {
            "type" : "integer",
            "description" : "When you take a snapshot and 'skip_snapshots' is false, specifies the maximum age in seconds of the most recent snapshot before a new snapshot is created. Default is 300",
            "format" : "int64",
            "x-ballerina-name" : "maxSnapshotAge"
          },
          "timeout" : {
            "type" : "integer",
            "description" : "The total timeout in seconds after which the plan is cancelled even if it is not complete. Defaults to 4x the max memory capacity per node (in MB). NOTES: A 3 zone cluster with 2 nodes of 2048 each would have a timeout of 4*2048=8192 seconds. Timeout does not include time required to run rollback actions",
            "format" : "int64"
          },
          "skip_snapshot" : {
            "type" : "boolean",
            "description" : "If true (default: false), does not take (or require) a successful snapshot to be taken before performing any potentially destructive changes to this cluster",
            "x-ballerina-name" : "skipSnapshot"
          },
          "extended_maintenance" : {
            "type" : "boolean",
            "description" : "If true (default false), does not clear the maintenance flag (which prevents its API from being accessed except by the constructor) on new instances added until after a snapshot has been restored, otherwise, the maintenance flag is cleared once the new instances successfully join the new cluster",
            "x-ballerina-name" : "extendedMaintenance"
          }
        },
        "description" : "The configuration settings for the timeout and fallback parameters"
      },
      "AppSearchSubInfo" : {
        "required" : [ "app_search_id", "enabled" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Hyperlink"
            },
            "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
          },
          "app_search_id" : {
            "type" : "string",
            "description" : "The App Search Id",
            "x-ballerina-name" : "appSearchId"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether the associated App Search is currently available"
          }
        },
        "description" : "Information about the APM Servers associated with the Elasticsearch cluster"
      },
      "EnterpriseSearchTopologyElement" : {
        "type" : "object",
        "properties" : {
          "instance_configuration_id" : {
            "type" : "string",
            "description" : "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration",
            "x-ballerina-name" : "instanceConfigurationId"
          },
          "instance_configuration_version" : {
            "type" : "integer",
            "description" : "The version of the Instance Configuration Id. If it is unset, the meaning depends on read vs writes. For deployment reads, it is equivalent to version 0 (or the IC is unversioned); for deployment creates and deployment template use, it is equivalent to 'the latest version'; and for deployment updates, it is equivalent to 'retain the current version'",
            "format" : "int32",
            "x-ballerina-name" : "instanceConfigurationVersion"
          },
          "memory_per_node" : {
            "type" : "object",
            "properties" : { },
            "x-ballerina-name" : "memoryPerNode"
          },
          "node_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnterpriseSearchNodeTypes"
            } ],
            "x-ballerina-name" : "nodeType"
          },
          "enterprise_search" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnterpriseSearchConfiguration"
            } ],
            "x-ballerina-name" : "enterpriseSearch"
          },
          "size" : {
            "$ref" : "#/components/schemas/TopologySize"
          },
          "zone_count" : {
            "type" : "integer",
            "description" : "number of zones in which nodes will be placed",
            "format" : "int32",
            "x-ballerina-name" : "zoneCount"
          },
          "node_configuration" : {
            "type" : "string",
            "x-ballerina-name" : "nodeConfiguration"
          },
          "node_count_per_zone" : {
            "type" : "object",
            "properties" : { },
            "x-ballerina-name" : "nodeCountPerZone"
          },
          "allocator_filter" : {
            "type" : "object",
            "properties" : { },
            "x-ballerina-name" : "allocatorFilter"
          }
        },
        "description" : "Defines the topology of the Enterprise Search nodes (e.g. number/capacity of nodes, and where they can be allocated)"
      },
      "TransientIntegrationsServerPlanConfiguration" : {
        "type" : "object",
        "properties" : {
          "plan_configuration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IntegrationsServerPlanControlConfiguration"
            } ],
            "x-ballerina-name" : "planConfiguration"
          },
          "strategy" : {
            "$ref" : "#/components/schemas/PlanStrategy"
          }
        },
        "description" : "Defines the configuration parameters that control how the plan is applied. For example, the Elasticsearch cluster topology and Integrations Server settings"
      },
      "IntegrationsServerPlanInfo" : {
        "required" : [ "healthy", "plan_attempt_log", "warnings" ],
        "type" : "object",
        "properties" : {
          "healthy" : {
            "type" : "boolean",
            "description" : "Either the plan ended successfully, or is not yet completed (and no errors have occurred)"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClusterPlanWarning"
            }
          },
          "attempt_end_time" : {
            "type" : "string",
            "description" : "If this plan completed or failed (ie is not pending), when the attempt ended (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "attemptEndTime"
          },
          "source" : {
            "$ref" : "#/components/schemas/ChangeSourceInfo"
          },
          "error" : {
            "$ref" : "#/components/schemas/ClusterPlanAttemptError"
          },
          "plan" : {
            "$ref" : "#/components/schemas/IntegrationsServerPlan"
          },
          "plan_attempt_log" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClusterPlanStepInfo"
            },
            "x-ballerina-name" : "planAttemptLog"
          },
          "plan_end_time" : {
            "type" : "string",
            "description" : "If this plan is not current or pending, when the plan was no longer active (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "planEndTime"
          },
          "plan_attempt_id" : {
            "type" : "string",
            "description" : "A UUID for each plan attempt",
            "x-ballerina-name" : "planAttemptId"
          },
          "plan_attempt_name" : {
            "type" : "string",
            "description" : "A human readable name for each plan attempt, only populated when retrieving plan histories",
            "x-ballerina-name" : "planAttemptName"
          },
          "attempt_start_time" : {
            "type" : "string",
            "description" : "When this plan attempt (ie to apply the plan to the Integrations Server) started (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "attemptStartTime"
          }
        },
        "description" : "Information about the Integrations Server plan"
      },
      "KibanaConfiguration" : {
        "type" : "object",
        "properties" : {
          "user_settings_json" : {
            "type" : "object",
            "properties" : { },
            "description" : "An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided the parameters are on the allowlist and not on the denylist. (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Kibana settings)",
            "x-ballerina-name" : "userSettingsJson"
          },
          "system_settings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/KibanaSystemSettings"
            } ],
            "x-ballerina-name" : "systemSettings"
          },
          "user_settings_yaml" : {
            "type" : "string",
            "description" : "An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided the parameters are on the allowlist and not on the denylist. (These field together with 'user_settings_override*' and 'system_settings' defines the total set of Kibana settings)",
            "x-ballerina-name" : "userSettingsYaml"
          },
          "user_settings_override_json" : {
            "type" : "object",
            "properties" : { },
            "description" : "An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Kibana settings)",
            "x-ballerina-name" : "userSettingsOverrideJson"
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the Kibana cluster (must be one of the ECE supported versions, and won't work unless it matches the Elasticsearch version. Leave blank to auto-detect version.)"
          },
          "docker_image" : {
            "type" : "string",
            "description" : "A docker URI that allows overriding of the default docker image specified for this version",
            "x-ballerina-name" : "dockerImage"
          },
          "user_settings_override_yaml" : {
            "type" : "string",
            "description" : "An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Kibana settings)",
            "x-ballerina-name" : "userSettingsOverrideYaml"
          }
        },
        "description" : "The Kibana instance settings. When specified at the top level, provides a field-by-field default. When specified at the topology level, provides the override settings"
      },
      "DeploymentUpgradeAssistantStatusResponse" : {
        "required" : [ "details", "ready_for_upgrade" ],
        "type" : "object",
        "properties" : {
          "ready_for_upgrade" : {
            "type" : "boolean",
            "description" : "A boolean indicating whether or not the cluster is ready to be upgraded",
            "x-ballerina-name" : "readyForUpgrade"
          },
          "details" : {
            "type" : "string",
            "description" : "Message with information about the number of Elasticsearch and Kibana deprecations"
          }
        },
        "description" : "The status of your cluster and its readiness to be upgraded"
      },
      "ExternalHyperlink" : {
        "required" : [ "id", "label" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Identifier of the external link"
          },
          "label" : {
            "type" : "string",
            "description" : "Human-readable description of the external link"
          },
          "uri" : {
            "type" : "string",
            "description" : "hyperlink to an external resource"
          }
        }
      },
      "DeploymentSettings" : {
        "required" : [ "auto_ops" ],
        "type" : "object",
        "properties" : {
          "auto_ops" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutoOpsSettings"
            } ],
            "x-ballerina-name" : "autoOps"
          },
          "solution_type" : {
            "type" : "string",
            "description" : "An optional string that declares the deployment's expected application. Example supported values are: elasticsearch, observability, security",
            "x-ballerina-name" : "solutionType"
          },
          "autoscaling_enabled" : {
            "type" : "boolean",
            "description" : "If autoscaling is enabled for this deployment",
            "x-ballerina-name" : "autoscalingEnabled"
          },
          "traffic_filter_settings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrafficFilterSettings"
            } ],
            "x-ballerina-name" : "trafficFilterSettings"
          },
          "observability" : {
            "$ref" : "#/components/schemas/DeploymentObservabilitySettings"
          }
        },
        "description" : "Additional configuration about the current deployment object"
      },
      "CreateApiKeyRequest" : {
        "required" : [ "description" ],
        "type" : "object",
        "properties" : {
          "role_assignments" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoleAssignments"
            } ],
            "x-ballerina-name" : "roleAssignments"
          },
          "description" : {
            "type" : "string",
            "description" : "API key description. Useful if there are multiple keys"
          },
          "expiration" : {
            "type" : "string",
            "description" : "The optional expiration for the API key, provided as a duration (ex: '1d', '3h')"
          }
        },
        "description" : "The request payload that creates the API keys"
      },
      "DeploymentResource" : {
        "required" : [ "id", "kind", "ref_id", "region" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "A locally-unique friendly alias for this Elasticsearch cluster",
            "x-ballerina-name" : "refId"
          },
          "elasticsearch_cluster_ref_id" : {
            "type" : "string",
            "description" : "The Elasticsearch cluster that this resource depends on",
            "x-ballerina-name" : "elasticsearchClusterRefId"
          },
          "credentials" : {
            "$ref" : "#/components/schemas/ClusterCredentials"
          },
          "kind" : {
            "type" : "string",
            "description" : "The kind of resource"
          },
          "warnings" : {
            "type" : "array",
            "description" : "List of warnings generated from validating resource updates",
            "items" : {
              "$ref" : "#/components/schemas/ReplyWarning"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "A system-unique id for the created resource"
          },
          "cloud_id" : {
            "type" : "string",
            "description" : "An encoded string that provides other Elastic services with the necessary information to connect to this Elasticsearch and Kibana",
            "x-ballerina-name" : "cloudId"
          },
          "region" : {
            "type" : "string",
            "description" : "Identifier of the region in which this resource runs"
          },
          "secret_token" : {
            "type" : "string",
            "description" : "Secret token for using a created resource. Only provided on initial create and absent otherwise",
            "x-ballerina-name" : "secretToken"
          }
        },
        "description" : "Data for a deployment resource"
      },
      "AppSearchInfo" : {
        "required" : [ "elasticsearch_cluster", "external_links", "healthy", "id", "name", "plan_info", "status", "topology" ],
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/AppSearchSettings"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ClusterMetadataInfo"
          },
          "topology" : {
            "$ref" : "#/components/schemas/ClusterTopologyInfo"
          },
          "plan_info" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppSearchPlansInfo"
            } ],
            "x-ballerina-name" : "planInfo"
          },
          "elasticsearch_cluster" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TargetElasticsearchCluster"
            } ],
            "x-ballerina-name" : "elasticsearchCluster"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the App Search is healthy or not (one or more of the info subsections will have healthy: false)"
          },
          "external_links" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "External resources related to the App Search",
            "items" : {
              "$ref" : "#/components/schemas/ExternalHyperlink"
            },
            "x-ballerina-name" : "externalLinks"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the App Search"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Hyperlink"
            },
            "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
          },
          "id" : {
            "type" : "string",
            "description" : "The id of the App Search"
          },
          "deployment_id" : {
            "type" : "string",
            "description" : "The id of the deployment that this App Search belongs to",
            "x-ballerina-name" : "deploymentId"
          },
          "region" : {
            "type" : "string",
            "description" : "The region that this App Search belongs to. Only populated in SaaS or federated ECE"
          },
          "status" : {
            "type" : "string",
            "description" : "App Search status",
            "enum" : [ "initializing", "stopping", "stopped", "rebooting", "restarting", "reconfiguring", "started" ]
          }
        },
        "description" : "The overview information for the App Search Server"
      },
      "ElasticsearchMonitoringInfo" : {
        "required" : [ "destination_cluster_ids", "healthy", "last_modified", "last_update_status", "source_cluster_ids" ],
        "type" : "object",
        "properties" : {
          "source_cluster_ids" : {
            "type" : "array",
            "description" : "The list of clusters Ids from which this cluster is currently receiving monitoring data",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "sourceClusterIds"
          },
          "destination_cluster_ids" : {
            "type" : "array",
            "description" : "The list of clusters Ids to which this cluster is currently sending monitoring data",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "destinationClusterIds"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the Monitoring configuration has been successfully applied"
          },
          "last_update_status" : {
            "type" : "string",
            "description" : "The status message from the last update (successful or not)",
            "x-ballerina-name" : "lastUpdateStatus"
          },
          "last_modified" : {
            "type" : "string",
            "description" : "The time the monitoring configuration was last changed",
            "format" : "date-time",
            "x-ballerina-name" : "lastModified"
          }
        },
        "description" : "Information about the monitoring status for the Elasticsearch cluster"
      },
      "ExistsQuery" : {
        "required" : [ "field" ],
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string",
            "description" : "The field to check for non-null values in"
          }
        },
        "description" : "Matches documents that have at least one non-`null` value in the original field"
      },
      "KibanaClusterPlanInfo" : {
        "required" : [ "healthy", "plan_attempt_log", "warnings" ],
        "type" : "object",
        "properties" : {
          "healthy" : {
            "type" : "boolean",
            "description" : "Either the plan ended successfully, or is not yet completed (and no errors have occurred)"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClusterPlanWarning"
            }
          },
          "attempt_end_time" : {
            "type" : "string",
            "description" : "If this plan completed or failed (ie is not pending), when the attempt ended (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "attemptEndTime"
          },
          "source" : {
            "$ref" : "#/components/schemas/ChangeSourceInfo"
          },
          "error" : {
            "$ref" : "#/components/schemas/ClusterPlanAttemptError"
          },
          "plan" : {
            "$ref" : "#/components/schemas/KibanaClusterPlan"
          },
          "plan_attempt_log" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClusterPlanStepInfo"
            },
            "x-ballerina-name" : "planAttemptLog"
          },
          "plan_end_time" : {
            "type" : "string",
            "description" : "If this plan is not current or pending, when the plan was no longer active (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "planEndTime"
          },
          "plan_attempt_id" : {
            "type" : "string",
            "description" : "A UUID for each plan attempt",
            "x-ballerina-name" : "planAttemptId"
          },
          "plan_attempt_name" : {
            "type" : "string",
            "description" : "A human readable name for each plan attempt, only populated when retrieving plan histories",
            "x-ballerina-name" : "planAttemptName"
          },
          "attempt_start_time" : {
            "type" : "string",
            "description" : "When this plan attempt (ie to apply the plan to the cluster) started (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "attemptStartTime"
          }
        },
        "description" : "Information about the current, pending, or past Kibana instance plan"
      },
      "OrganizationList" : {
        "required" : [ "organizations" ],
        "type" : "object",
        "properties" : {
          "next_page" : {
            "type" : "string",
            "description" : "A cursor to get the next page of results",
            "x-ballerina-name" : "nextPage"
          },
          "organizations" : {
            "type" : "array",
            "description" : "The list of organizations",
            "items" : {
              "$ref" : "#/components/schemas/Organization"
            }
          }
        },
        "description" : "A collection of Organizations"
      },
      "AccountTrustRelationship" : {
        "required" : [ "account_id", "trust_all" ],
        "type" : "object",
        "properties" : {
          "account_id" : {
            "type" : "string",
            "description" : "the ID of the Account",
            "x-ballerina-name" : "accountId"
          },
          "trust_all" : {
            "type" : "boolean",
            "description" : "If true, all clusters in this account will by default be trusted and the `trust_allowlist` is ignored",
            "x-ballerina-name" : "trustAll"
          },
          "name" : {
            "type" : "string",
            "description" : "A human readable name of the trust relationship"
          },
          "trust_allowlist" : {
            "type" : "array",
            "description" : "The list of clusters to trust. Only used when `trust_all` is false",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "trustAllowlist"
          }
        },
        "description" : "The trust relationship with the clusters of one account"
      },
      "RemoteResources" : {
        "required" : [ "resources" ],
        "type" : "object",
        "properties" : {
          "resources" : {
            "type" : "array",
            "description" : "The remote resources",
            "items" : {
              "$ref" : "#/components/schemas/RemoteResourceRef"
            }
          }
        },
        "description" : "The list of resources used as remote clusters"
      },
      "TrafficFilterEgressRule" : {
        "required" : [ "protocol", "target" ],
        "type" : "object",
        "properties" : {
          "protocol" : {
            "type" : "string",
            "description" : "The target protocol for an egress rule",
            "enum" : [ "all", "tcp", "udp" ]
          },
          "ports" : {
            "type" : "array",
            "description" : "A list of target ports for an egress rule",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "target" : {
            "type" : "string",
            "description" : "Allowed traffic filter egress target: IP address or CIDR mask"
          }
        },
        "description" : "The rule detail for a traffic filter egress rule"
      },
      "DeploymentResourceCrudResponse" : {
        "required" : [ "id", "kind", "ref_id" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "The reference id of the resource",
            "x-ballerina-name" : "refId"
          },
          "kind" : {
            "type" : "string",
            "description" : "The kind of the stateless resource"
          },
          "id" : {
            "type" : "string",
            "description" : "The id of the deployment"
          }
        },
        "description" : "A response returned from the Deployment Resource endpoints"
      },
      "ElasticsearchClusterPlan" : {
        "required" : [ "cluster_topology", "elasticsearch" ],
        "type" : "object",
        "properties" : {
          "elasticsearch" : {
            "$ref" : "#/components/schemas/ElasticsearchConfiguration"
          },
          "transient" : {
            "$ref" : "#/components/schemas/TransientElasticsearchPlanConfiguration"
          },
          "autoscaling_enabled" : {
            "type" : "boolean",
            "description" : "Enable autoscaling for this Elasticsearch cluster",
            "x-ballerina-name" : "autoscalingEnabled"
          },
          "cluster_topology" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchClusterTopologyElement"
            },
            "x-ballerina-name" : "clusterTopology"
          },
          "deployment_template" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DeploymentTemplateReference"
            } ],
            "x-ballerina-name" : "deploymentTemplate"
          }
        },
        "description" : "The plan for the Elasticsearch cluster"
      },
      "ClusterPlanWarning" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "A unique warning code"
          },
          "message" : {
            "type" : "string",
            "description" : "A description of the warning"
          },
          "step_id" : {
            "type" : "string",
            "description" : "The ID of the step which produced a warning, if any",
            "x-ballerina-name" : "stepId"
          }
        },
        "description" : "Information about a warning from a plan"
      },
      "DeploymentCreateSettings" : {
        "type" : "object",
        "properties" : {
          "solution_type" : {
            "type" : "string",
            "description" : "An optional string that declares the deployment's expected application. Example supported values are: elasticsearch, observability, security",
            "x-ballerina-name" : "solutionType"
          },
          "autoscaling_enabled" : {
            "type" : "boolean",
            "description" : "Enable autoscaling for this deployment",
            "x-ballerina-name" : "autoscalingEnabled"
          },
          "traffic_filter_settings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrafficFilterSettings"
            } ],
            "x-ballerina-name" : "trafficFilterSettings"
          },
          "observability" : {
            "$ref" : "#/components/schemas/DeploymentObservabilitySettings"
          }
        },
        "description" : "Additional configuration for the new deployment object"
      },
      "DtsDimensionCosts" : {
        "required" : [ "cost", "name", "quantity", "rate", "sku", "type" ],
        "type" : "object",
        "properties" : {
          "cost" : {
            "type" : "number",
            "description" : "Costs associated to the Data Transfer and Storage (DTS) dimensions for an organization",
            "format" : "double"
          },
          "quantity" : {
            "$ref" : "#/components/schemas/DtsQuantity"
          },
          "rate" : {
            "$ref" : "#/components/schemas/DtsRate"
          },
          "name" : {
            "type" : "string",
            "description" : "DTS dimension name"
          },
          "sku" : {
            "type" : "string",
            "description" : "DTS dimension Stock Keeping Unit (SKU)"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of the DTS dimension usage"
          }
        },
        "description" : "The costs associated to a Data Transfer and Storage (DTS) dimension for an organization. All of the costs, credits, and trials are expressed in Elastic Consumption Units (ECU)"
      },
      "TrafficFilterRulesetRequest" : {
        "required" : [ "include_by_default", "name", "region", "rules", "type" ],
        "type" : "object",
        "properties" : {
          "include_by_default" : {
            "type" : "boolean",
            "description" : "Should the ruleset be automatically included in the new deployments",
            "x-ballerina-name" : "includeByDefault"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the ruleset"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the ruleset"
          },
          "rules" : {
            "type" : "array",
            "description" : "List of rules",
            "items" : {
              "$ref" : "#/components/schemas/TrafficFilterRule"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "Type of the ruleset"
          },
          "region" : {
            "type" : "string",
            "description" : "The ruleset can be attached only to deployments in the specific region"
          }
        },
        "description" : "The specification for traffic filter ruleset"
      },
      "ElasticsearchClusterBlockingIssues" : {
        "required" : [ "cluster_level", "healthy", "index_level" ],
        "type" : "object",
        "properties" : {
          "index_level" : {
            "type" : "array",
            "description" : "A list of issues that affect availability of the cluster's indices",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchClusterBlockingIssueElement"
            },
            "x-ballerina-name" : "indexLevel"
          },
          "cluster_level" : {
            "type" : "array",
            "description" : "A list of issues that affect availability of entire cluster",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchClusterBlockingIssueElement"
            },
            "x-ballerina-name" : "clusterLevel"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the cluster has issues (false) or not (true)"
          }
        },
        "description" : "> WARNING\n> This endpoint is deprecated and scheduled to be removed in the next major version. Use `cluster_blocking_issues` instead\n\nIssues that prevent the Elasticsearch cluster or index from operating correctly"
      },
      "ClusterSnapshotSettings" : {
        "type" : "object",
        "properties" : {
          "slm" : {
            "type" : "boolean",
            "description" : "When set to true, the deployment will have SLM enabled. Default value is true",
            "readOnly" : true
          },
          "cron_expression" : {
            "type" : "string",
            "description" : "Cron expression indicating when should snapshots be taken. This can be enabled only if SLM is enabled for the deployment and 'interval' is not present",
            "x-ballerina-name" : "cronExpression"
          },
          "interval" : {
            "type" : "string",
            "description" : "Interval between snapshots, with the format 'length unit' (space is optional), where unit can be one of: d (day), h (hour), min (minute). Default is 30 minutes"
          },
          "retention" : {
            "$ref" : "#/components/schemas/ClusterSnapshotRetention"
          }
        },
        "description" : "The snapshot configuration settings for an Elasticsearch cluster"
      },
      "RestoreSnapshotConfiguration" : {
        "required" : [ "snapshot_name" ],
        "type" : "object",
        "properties" : {
          "snapshot_name" : {
            "type" : "string",
            "description" : "The name of the snapshot to restore. Use '\\_\\_latest_success\\_\\_' to get the most recent snapshot from the specified repository",
            "x-ballerina-name" : "snapshotName"
          },
          "repository_config" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RestoreSnapshotRepoConfiguration"
            } ],
            "x-ballerina-name" : "repositoryConfig"
          },
          "restore_payload" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RestoreSnapshotApiConfiguration"
            } ],
            "x-ballerina-name" : "restorePayload"
          },
          "strategy" : {
            "type" : "string",
            "description" : "The restore strategy to use. Defaults to a full restore. Partial restore will attempt to restore unavailable indices only",
            "enum" : [ "partial", "full", "recovery" ]
          },
          "repository_name" : {
            "type" : "string",
            "description" : "If specified, contains the name of the snapshot repository - else will default to the Elastic Cloud system repo ('found-snapshots')",
            "x-ballerina-name" : "repositoryName"
          },
          "source_cluster_id" : {
            "type" : "string",
            "description" : "If specified, contains the name of the source cluster id. Do not send this if you are sending repository_config",
            "x-ballerina-name" : "sourceClusterId"
          }
        },
        "description" : "Restores a snapshot from a local or remote repository"
      },
      "DeploymentResourceCommandResponse" : {
        "type" : "object",
        "properties" : {
          "warnings" : {
            "type" : "array",
            "description" : "List of warnings generated from validating command",
            "items" : {
              "$ref" : "#/components/schemas/ReplyWarning"
            }
          }
        },
        "description" : "Response returned when a command is successfully issued against a given Deployment resource"
      },
      "TrafficFilterRulesetInfo" : {
        "required" : [ "id", "include_by_default", "name", "region", "rules", "type" ],
        "type" : "object",
        "properties" : {
          "associations" : {
            "type" : "array",
            "description" : "List of associations. Returned only when include_associations query parameter is true",
            "items" : {
              "$ref" : "#/components/schemas/FilterAssociation"
            }
          },
          "include_by_default" : {
            "type" : "boolean",
            "description" : "Should the ruleset be automatically included in the new deployments",
            "x-ballerina-name" : "includeByDefault"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the ruleset"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the ruleset"
          },
          "rules" : {
            "type" : "array",
            "description" : "List of rules",
            "items" : {
              "$ref" : "#/components/schemas/TrafficFilterRule"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The ruleset ID"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of the ruleset"
          },
          "region" : {
            "type" : "string",
            "description" : "The ruleset can be attached only to deployments in the specific region"
          },
          "total_associations" : {
            "type" : "integer",
            "description" : "Total number of associations. This includes associations the user does not have permission to view.Returned only when include_associations query parameter is true",
            "format" : "int32",
            "x-ballerina-name" : "totalAssociations"
          }
        },
        "description" : "The container for a set of traffic filter rules"
      },
      "DeploymentCreateResponse" : {
        "required" : [ "created", "id", "name", "resources" ],
        "type" : "object",
        "properties" : {
          "diagnostics" : {
            "$ref" : "#/components/schemas/DeploymentDiagnostics"
          },
          "created" : {
            "type" : "boolean",
            "description" : "Whether or not the deployment was freshly created"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the deployment"
          },
          "alias" : {
            "type" : "string",
            "description" : "A user-defined deployment alias for user-friendly resource URLs"
          },
          "resources" : {
            "type" : "array",
            "description" : "List of created resources",
            "items" : {
              "$ref" : "#/components/schemas/DeploymentResource"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The id of the deployment"
          }
        },
        "description" : "A response returned from the Deployment create endpoint"
      },
      "DeploymentObservabilitySettings" : {
        "type" : "object",
        "properties" : {
          "logging" : {
            "$ref" : "#/components/schemas/DeploymentLoggingSettings"
          },
          "metrics" : {
            "$ref" : "#/components/schemas/DeploymentMetricsSettings"
          }
        },
        "description" : "The observability settings for a deployment"
      },
      "DeploymentGetResponse" : {
        "required" : [ "healthy", "id", "name", "resources" ],
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/DeploymentSettings"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/DeploymentMetadata"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the deployment is overall healthy or not (one or more of the resource info subsections will have healthy: false)"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of this deployment"
          },
          "alias" : {
            "type" : "string",
            "description" : "A user-defined deployment alias for user-friendly resource URLs"
          },
          "resources" : {
            "$ref" : "#/components/schemas/DeploymentResources"
          },
          "id" : {
            "type" : "string",
            "description" : "A randomly-generated id of this Deployment"
          },
          "instance_configurations" : {
            "type" : "array",
            "description" : "List of instance configurations used in the deployment",
            "items" : {
              "$ref" : "#/components/schemas/InstanceConfigurationInfo"
            },
            "x-ballerina-name" : "instanceConfigurations"
          },
          "observability" : {
            "$ref" : "#/components/schemas/DeploymentObservability"
          }
        },
        "description" : "Describes a given Deployment"
      },
      "KibanaSubClusterInfo" : {
        "required" : [ "enabled", "kibana_id" ],
        "type" : "object",
        "properties" : {
          "kibana_id" : {
            "type" : "string",
            "description" : "The Kibana cluster Id",
            "x-ballerina-name" : "kibanaId"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Hyperlink"
            },
            "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether the associated Kibana cluster is currently available"
          }
        },
        "description" : "Information about the Kibana instances associated with the Elasticsearch cluster"
      },
      "AppSearchPlan" : {
        "required" : [ "appsearch" ],
        "type" : "object",
        "properties" : {
          "transient" : {
            "$ref" : "#/components/schemas/TransientAppSearchPlanConfiguration"
          },
          "cluster_topology" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppSearchTopologyElement"
            },
            "x-ballerina-name" : "clusterTopology"
          },
          "appsearch" : {
            "$ref" : "#/components/schemas/AppSearchConfiguration"
          }
        },
        "description" : "The plan for the App Search cluster"
      },
      "Creates" : {
        "type" : "object",
        "properties" : {
          "enterprise_search" : {
            "type" : "array",
            "description" : "Diagnostics for Enterprise Search resources",
            "items" : {
              "$ref" : "#/components/schemas/EnterpriseSearch"
            },
            "x-ballerina-name" : "enterpriseSearch"
          },
          "elasticsearch" : {
            "type" : "array",
            "description" : "Diagnostics for Elasticsearch clusters",
            "items" : {
              "$ref" : "#/components/schemas/Elasticsearch"
            }
          },
          "kibana" : {
            "type" : "array",
            "description" : "Diagnostics for Kibanas",
            "items" : {
              "$ref" : "#/components/schemas/Kibana"
            }
          },
          "apm" : {
            "type" : "array",
            "description" : "Diagnostics for APMs",
            "items" : {
              "$ref" : "#/components/schemas/Apm"
            }
          },
          "integrations_server" : {
            "type" : "array",
            "description" : "Diagnostics for Integrations Server",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationsServer"
            },
            "x-ballerina-name" : "integrationsServer"
          },
          "appsearch" : {
            "type" : "array",
            "description" : "Diagnostics for AppSearches",
            "items" : {
              "$ref" : "#/components/schemas/AppSearch"
            }
          }
        },
        "description" : "Holds diagnostics for resources that will be created"
      },
      "ObservabilityIssue" : {
        "required" : [ "description", "severity" ],
        "type" : "object",
        "properties" : {
          "severity" : {
            "type" : "string",
            "description" : "Severity of the health issue"
          },
          "description" : {
            "type" : "string",
            "description" : "A user-friendly description of the observability health issue"
          }
        },
        "description" : "Observability health issue"
      },
      "ElasticsearchCuration" : {
        "required" : [ "from_instance_configuration_id", "to_instance_configuration_id" ],
        "type" : "object",
        "properties" : {
          "from_instance_configuration_id" : {
            "type" : "string",
            "description" : "The source instance configuration",
            "x-ballerina-name" : "fromInstanceConfigurationId"
          },
          "to_instance_configuration_id" : {
            "type" : "string",
            "description" : "The destination instance configuration",
            "x-ballerina-name" : "toInstanceConfigurationId"
          }
        },
        "description" : "The structure that defines the routing settings for index curation"
      },
      "ChartItem" : {
        "required" : [ "timestamp", "values" ],
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "description" : "the collection of values to plot the chart item",
            "items" : {
              "$ref" : "#/components/schemas/ChartItemValue"
            }
          },
          "timestamp" : {
            "type" : "integer",
            "description" : "Axis X position",
            "format" : "int64"
          }
        },
        "description" : "Chart Item"
      },
      "TrustedCertificate" : {
        "required" : [ "pem" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/CertificateMetaData"
          },
          "pem" : {
            "type" : "string",
            "description" : "The public ca certificate as string in PEM format"
          }
        },
        "description" : "An x509 certificate used by a DirectTrustRelationship"
      },
      "KeystoreContents" : {
        "required" : [ "secrets" ],
        "type" : "object",
        "properties" : {
          "secrets" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/KeystoreSecret"
            },
            "description" : "List of secrets"
          }
        },
        "description" : "The contents of the Elasticsearch keystore"
      },
      "ClusterPlanStepLogMessageInfo" : {
        "required" : [ "details", "message", "stage", "timestamp" ],
        "type" : "object",
        "properties" : {
          "stage" : {
            "type" : "string",
            "description" : "Stage that info log message takes place in",
            "enum" : [ "starting", "completed", "in_progress" ]
          },
          "failure_type" : {
            "type" : "string",
            "description" : "The failure type, in case the step failed",
            "x-ballerina-name" : "failureType"
          },
          "delta_in_millis" : {
            "type" : "integer",
            "description" : "Time in milliseconds since previous log message",
            "format" : "int64",
            "x-ballerina-name" : "deltaInMillis"
          },
          "details" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A map with details for the log about what happened during the step execution. Keys and values for are always both strings, representing the name of the detail and its value, respectively"
          },
          "message" : {
            "type" : "string",
            "description" : "Human readable log message"
          },
          "timestamp" : {
            "type" : "string",
            "description" : "Timestamp marking on info log of step",
            "format" : "date-time"
          }
        },
        "description" : "The log message from a specified stage of an executed step in a plan"
      },
      "GrowShrinkStrategyConfig" : {
        "type" : "object",
        "description" : "A strategy that creates instances with the new plan, migrates data from the old instances, then shuts down the old instances. `GrowShrinkStrategyConfig` is safer than 'rolling' and ensures single node availability during a plan change, but can be a lot slower on larger clusters"
      },
      "NestedQuery" : {
        "required" : [ "path", "query" ],
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "description" : "The path to the nested object"
          },
          "score_mode" : {
            "type" : "string",
            "description" : "Allows to specify how inner children matching affects score of the parent. Refer to the Elasticsearch documentation for details",
            "enum" : [ "avg", "sum", "min", "max", "none" ],
            "x-ballerina-name" : "scoreMode"
          },
          "query" : {
            "$ref" : "#/components/schemas/QueryContainer"
          }
        },
        "description" : "A query that matches nested objects"
      },
      "DeploymentsSearchResponse" : {
        "required" : [ "deployments", "return_count" ],
        "type" : "object",
        "properties" : {
          "minimal_metadata" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            },
            "x-ballerina-name" : "minimalMetadata"
          },
          "cursor" : {
            "type" : "string",
            "description" : "To retrieve the next batch of deployments from this search, specify this value in the cursor field of the next search request. For paginated searches, it is recommended to sort on a static and unique field, like deployment or cluster id. A static and unique sort avoids concurrent updates causing a deployment to move across pages and becoming a duplicate or lost entry. The default sort of rank and modified date is often good for getting a particular deployment into the first page, but if a not yet seen deployment is modified in between page requests, then it would be left out from the next page"
          },
          "deployments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeploymentSearchResponse"
            }
          },
          "match_count" : {
            "type" : "integer",
            "description" : "If a query is supplied, then the total number of deployments that matched",
            "format" : "int32",
            "x-ballerina-name" : "matchCount"
          },
          "return_count" : {
            "type" : "integer",
            "description" : "The number of deployments actually returned, either as deployment instances or as minimalMetadata objects",
            "format" : "int32",
            "x-ballerina-name" : "returnCount"
          }
        },
        "description" : "Contains a list of Deployments as result of a search request"
      },
      "EnterpriseSearchPlansInfo" : {
        "required" : [ "healthy", "history" ],
        "type" : "object",
        "properties" : {
          "current" : {
            "$ref" : "#/components/schemas/EnterpriseSearchPlanInfo"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the plan situation is healthy (if unhealthy, means the last plan attempt failed)"
          },
          "pending" : {
            "$ref" : "#/components/schemas/EnterpriseSearchPlanInfo"
          },
          "history" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnterpriseSearchPlanInfo"
            }
          }
        },
        "description" : "Information about current, pending, and past Enterprise Search Server plans"
      },
      "IntegrationsServerInfo" : {
        "required" : [ "elasticsearch_cluster", "external_links", "healthy", "id", "name", "plan_info", "status", "topology" ],
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/IntegrationsServerSettings"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ClusterMetadataInfo"
          },
          "topology" : {
            "$ref" : "#/components/schemas/ClusterTopologyInfo"
          },
          "plan_info" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IntegrationsServerPlansInfo"
            } ],
            "x-ballerina-name" : "planInfo"
          },
          "elasticsearch_cluster" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TargetElasticsearchCluster"
            } ],
            "x-ballerina-name" : "elasticsearchCluster"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the Integrations Server is healthy or not (one or more of the info subsections will have healthy: false)"
          },
          "external_links" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "External resources related to the Integrations Server",
            "items" : {
              "$ref" : "#/components/schemas/ExternalHyperlink"
            },
            "x-ballerina-name" : "externalLinks"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Integrations Server"
          },
          "apm_server_mode" : {
            "type" : "string",
            "description" : "The mode APM is operating in",
            "enum" : [ "standalone", "managed" ],
            "x-ballerina-name" : "apmServerMode"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Hyperlink"
            },
            "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
          },
          "id" : {
            "type" : "string",
            "description" : "The id of the Integrations Server"
          },
          "deployment_id" : {
            "type" : "string",
            "description" : "The id of the deployment that this Integrations Server belongs to",
            "x-ballerina-name" : "deploymentId"
          },
          "region" : {
            "type" : "string",
            "description" : "The region that this Integrations Server belongs to. Only populated in SaaS or federated ECE"
          },
          "status" : {
            "type" : "string",
            "description" : "Integrations Server status",
            "enum" : [ "initializing", "stopping", "stopped", "rebooting", "restarting", "reconfiguring", "started" ]
          }
        },
        "description" : "The overview information for the Integrations Server"
      },
      "TransientElasticsearchPlanConfiguration" : {
        "type" : "object",
        "properties" : {
          "plan_configuration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ElasticsearchPlanControlConfiguration"
            } ],
            "x-ballerina-name" : "planConfiguration"
          },
          "cluster_settings_json" : {
            "type" : "object",
            "properties" : { },
            "description" : "If specified, contains transient settings to be applied to an Elasticsearch cluster during changes,default values shown below applied.\nThese can be overridden by specifying them in the map (or null to unset). Additional settings can also be set. Settings will be cleared after the plan has finished. If not specified, no settings will be applied.\nNOTE: These settings are only explicitly cleared for 5.x+ clusters, they must be hand-reset to their defaults in 2.x- (or a cluster reboot will clear them).\n- indices.store.throttle.max_bytes_per_sec: 120Mb\n- indices.recovery.max_bytes_per_sec: 120Mb\n- cluster.routing.allocation.cluster_concurrent_rebalance: 5\n- cluster.routing.allocation.node_initial_primaries_recoveries: 5\n- cluster.routing.allocation.node_concurrent_incoming_recoveries: 5\nFor version 8.1 and later no defaults are provided through this mechanism, but instead hardware dependent settings are provided to each instance",
            "x-ballerina-name" : "clusterSettingsJson"
          },
          "restore_snapshot" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RestoreSnapshotConfiguration"
            } ],
            "x-ballerina-name" : "restoreSnapshot"
          },
          "strategy" : {
            "$ref" : "#/components/schemas/PlanStrategy"
          },
          "remote_clusters" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RemoteResources"
            } ],
            "x-ballerina-name" : "remoteClusters"
          }
        },
        "description" : "Defines the configuration parameters that control how the plan is applied. For example, the Elasticsearch cluster topology and Elasticsearch settings"
      },
      "RangeQuery" : {
        "type" : "object",
        "properties" : {
          "lt" : {
            "type" : "object",
            "properties" : { },
            "description" : "Less-than"
          },
          "format" : {
            "type" : "string",
            "description" : "Formatted dates will be parsed using the format specified on the date field by default, but it can be overridden by passing the format parameter"
          },
          "gte" : {
            "type" : "object",
            "properties" : { },
            "description" : "Greater-than or equal to"
          },
          "boost" : {
            "type" : "number",
            "description" : "An optional boost value to apply to the query",
            "format" : "float"
          },
          "lte" : {
            "type" : "object",
            "properties" : { },
            "description" : "Less-than or equal to"
          },
          "time_zone" : {
            "type" : "string",
            "description" : "Dates can be converted from another timezone to UTC either by specifying the time zone in the date value itself (if the format accepts it), or it can be specified as the time_zone parameter",
            "x-ballerina-name" : "timeZone"
          },
          "gt" : {
            "type" : "object",
            "properties" : { },
            "description" : "Greater-than"
          }
        },
        "description" : "The query that matches documents with fields that contain terms within a specified range"
      },
      "PlanStrategy" : {
        "type" : "object",
        "properties" : {
          "rolling" : {
            "$ref" : "#/components/schemas/RollingStrategyConfig"
          },
          "autodetect" : {
            "$ref" : "#/components/schemas/AutodetectStrategyConfig"
          },
          "rolling_grow_and_shrink" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RollingGrowShrinkStrategyConfig"
            } ],
            "x-ballerina-name" : "rollingGrowAndShrink"
          },
          "grow_and_shrink" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GrowShrinkStrategyConfig"
            } ],
            "x-ballerina-name" : "growAndShrink"
          }
        },
        "description" : "The options for performing a plan change. Specify only one property each time. The default is `grow_and_shrink`"
      },
      "ApmInfo" : {
        "required" : [ "elasticsearch_cluster", "external_links", "healthy", "id", "name", "plan_info", "status", "topology" ],
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/ApmSettings"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ClusterMetadataInfo"
          },
          "topology" : {
            "$ref" : "#/components/schemas/ClusterTopologyInfo"
          },
          "plan_info" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ApmPlansInfo"
            } ],
            "x-ballerina-name" : "planInfo"
          },
          "elasticsearch_cluster" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TargetElasticsearchCluster"
            } ],
            "x-ballerina-name" : "elasticsearchCluster"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the APM is healthy or not (one or more of the info subsections will have healthy: false)"
          },
          "external_links" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "External resources related to the APM",
            "items" : {
              "$ref" : "#/components/schemas/ExternalHyperlink"
            },
            "x-ballerina-name" : "externalLinks"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the APM"
          },
          "apm_server_mode" : {
            "type" : "string",
            "description" : "The mode APM is operating in",
            "enum" : [ "standalone", "managed" ],
            "x-ballerina-name" : "apmServerMode"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Hyperlink"
            },
            "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
          },
          "id" : {
            "type" : "string",
            "description" : "The id of the APM"
          },
          "deployment_id" : {
            "type" : "string",
            "description" : "The id of the deployment that this APM Server belongs to",
            "x-ballerina-name" : "deploymentId"
          },
          "region" : {
            "type" : "string",
            "description" : "The region that this APM belongs to. Only populated in SaaS or federated ECE"
          },
          "status" : {
            "type" : "string",
            "description" : "APM status",
            "enum" : [ "initializing", "stopping", "stopped", "rebooting", "restarting", "reconfiguring", "started" ]
          }
        },
        "description" : "The overview information for the APM Server"
      },
      "ApmPayload" : {
        "required" : [ "elasticsearch_cluster_ref_id", "plan", "ref_id", "region" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "A locally-unique user-specified id for APM",
            "x-ballerina-name" : "refId"
          },
          "settings" : {
            "$ref" : "#/components/schemas/ApmSettings"
          },
          "elasticsearch_cluster_ref_id" : {
            "type" : "string",
            "description" : "Alias to the Elasticsearch Cluster to attach APM to",
            "x-ballerina-name" : "elasticsearchClusterRefId"
          },
          "display_name" : {
            "type" : "string",
            "description" : "The human readable name for the APM cluster (default: takes the name of its Elasticsearch cluster)",
            "x-ballerina-name" : "displayName"
          },
          "region" : {
            "type" : "string",
            "description" : "The region where this resource exists"
          },
          "plan" : {
            "$ref" : "#/components/schemas/ApmPlan"
          }
        },
        "description" : "An APM creation request paired with the alias of the Elasticsearch cluster it should be paired with"
      },
      "ApmSubInfo" : {
        "required" : [ "apm_id", "enabled" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Hyperlink"
            },
            "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether the associated APM cluster is currently available"
          },
          "apm_id" : {
            "type" : "string",
            "description" : "The APM cluster Id",
            "x-ballerina-name" : "apmId"
          }
        },
        "description" : "Information about the APM Servers associated with the Elasticsearch cluster"
      },
      "ElasticsearchReplicaElement" : {
        "required" : [ "instance_name", "replica_count" ],
        "type" : "object",
        "properties" : {
          "instance_name" : {
            "type" : "string",
            "description" : "The Elastic Cloud name/id of the instance (container)",
            "x-ballerina-name" : "instanceName"
          },
          "replica_count" : {
            "type" : "integer",
            "description" : "The number of unavailable replicas on this instance",
            "format" : "int32",
            "x-ballerina-name" : "replicaCount"
          }
        },
        "description" : "Information about the unavailable replicas. NOTE: Unlike shards, unavailable replicas indicate a loss of redundancy rather than a loss of availability"
      },
      "KibanaClusterSettings" : {
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ClusterMetadataSettings"
          }
        },
        "description" : "The settings for multiple Kibana instances"
      },
      "DeploymentUpdateResources" : {
        "type" : "object",
        "properties" : {
          "enterprise_search" : {
            "type" : "array",
            "description" : "A list of payloads for Enterprise Search updates",
            "items" : {
              "$ref" : "#/components/schemas/EnterpriseSearchPayload"
            },
            "x-ballerina-name" : "enterpriseSearch"
          },
          "elasticsearch" : {
            "type" : "array",
            "description" : "A list of payloads for Elasticsearch cluster updates",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchPayload"
            }
          },
          "kibana" : {
            "type" : "array",
            "description" : "A list of payloads for Kibana updates",
            "items" : {
              "$ref" : "#/components/schemas/KibanaPayload"
            }
          },
          "apm" : {
            "type" : "array",
            "description" : "A list of payloads for APM updates",
            "items" : {
              "$ref" : "#/components/schemas/ApmPayload"
            }
          },
          "appsearch" : {
            "type" : "array",
            "description" : "A list of payloads for AppSearch updates. AppSearch has been replaced by Enterprise Search in the Elastic Stack 7.7 and higher",
            "items" : {
              "$ref" : "#/components/schemas/AppSearchPayload"
            }
          },
          "integrations_server" : {
            "type" : "array",
            "description" : "A list of payloads for Integrations Server updates",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationsServerPayload"
            },
            "x-ballerina-name" : "integrationsServer"
          }
        },
        "description" : "Describes the Deployment resource updates"
      },
      "CertificateMetaData" : {
        "required" : [ "fingerprint", "valid_from", "valid_to" ],
        "type" : "object",
        "properties" : {
          "valid_to" : {
            "type" : "string",
            "description" : "The expiry date of the certificate in UTC",
            "format" : "date-time",
            "x-ballerina-name" : "validTo"
          },
          "fingerprint" : {
            "type" : "string",
            "description" : "The fingerprint of the certificate"
          },
          "valid_from" : {
            "type" : "string",
            "description" : "The valid from date of the certificate in UTC",
            "format" : "date-time",
            "x-ballerina-name" : "validFrom"
          },
          "also_trusted_by" : {
            "type" : "array",
            "description" : "Other deployments also trusting this certificate",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "alsoTrustedBy"
          }
        },
        "description" : "The certificate MetaData"
      },
      "DeploymentCreateRequest" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/DeploymentCreateSettings"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/DeploymentCreateMetadata"
          },
          "name" : {
            "type" : "string",
            "description" : "A name for the deployment; otherwise this will be the generated deployment id"
          },
          "resources" : {
            "$ref" : "#/components/schemas/DeploymentCreateResources"
          },
          "alias" : {
            "type" : "string",
            "description" : "A user-defined alias to use in place of Cluster IDs for user-friendly URLs"
          },
          "region" : {
            "type" : "string",
            "description" : "Identifier of the region to be used as the default for all the resources of the deployment"
          },
          "version" : {
            "type" : "string",
            "description" : "The version for all the resources of the deployment (must be one of the supported versions). Defaults to the latest version if not specified"
          }
        },
        "description" : "A request for creating a new Deployment consisting of multiple clusters"
      },
      "DeploymentCreateResources" : {
        "type" : "object",
        "properties" : {
          "enterprise_search" : {
            "type" : "array",
            "description" : "A list of payloads for Enterprise Search creation",
            "items" : {
              "$ref" : "#/components/schemas/EnterpriseSearchPayload"
            },
            "x-ballerina-name" : "enterpriseSearch"
          },
          "elasticsearch" : {
            "type" : "array",
            "description" : "A list of payloads for Elasticsearch cluster creation",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchPayload"
            }
          },
          "kibana" : {
            "type" : "array",
            "description" : "A list of payloads for Kibana creation",
            "items" : {
              "$ref" : "#/components/schemas/KibanaPayload"
            }
          },
          "apm" : {
            "type" : "array",
            "description" : "A list of payloads for APM creation. WARNING: For stack versions 8.0.0 and higher the integrations_server payload should be used instead, as this field becomes deprecated",
            "items" : {
              "$ref" : "#/components/schemas/ApmPayload"
            }
          },
          "appsearch" : {
            "type" : "array",
            "description" : "A list of payloads for AppSearch updates. AppSearch has been replaced by Enterprise Search in the Elastic Stack 7.7 and higher",
            "items" : {
              "$ref" : "#/components/schemas/AppSearchPayload"
            }
          },
          "integrations_server" : {
            "type" : "array",
            "description" : "A list of payloads for Integrations Server creation",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationsServerPayload"
            },
            "x-ballerina-name" : "integrationsServer"
          }
        },
        "description" : "Describes the resources that will belong to a Deployment"
      },
      "Hyperlink" : {
        "type" : "object",
        "properties" : {
          "need_elevated_permissions" : {
            "type" : "boolean",
            "description" : "Whether the operation requires elevated permissions (when the field is present, elevated permissions are required)",
            "x-ballerina-name" : "needElevatedPermissions"
          }
        }
      },
      "DeploymentsCosts" : {
        "required" : [ "deployments", "total_cost" ],
        "type" : "object",
        "properties" : {
          "deployments" : {
            "type" : "array",
            "description" : "Costs of the list of deployments",
            "items" : {
              "$ref" : "#/components/schemas/DeploymentCosts"
            }
          },
          "total_cost" : {
            "type" : "number",
            "description" : "Total cost for all deployments",
            "format" : "double",
            "x-ballerina-name" : "totalCost"
          }
        },
        "description" : "Costs associated to a set of deployments for an organization. All of the costs are expressed in Elastic Consumption Unit (ECU)"
      },
      "DeploymentMetadata" : {
        "type" : "object",
        "properties" : {
          "byok_enabled" : {
            "type" : "boolean",
            "description" : "Indicates if the Deployment is BYOK enabled or not",
            "readOnly" : true,
            "x-ballerina-name" : "byokEnabled"
          },
          "tags" : {
            "type" : "array",
            "description" : "Arbitrary user-defined metadata associated with this deployment",
            "items" : {
              "$ref" : "#/components/schemas/MetadataItem"
            }
          }
        },
        "description" : "Additional information about the current deployment object"
      },
      "InstanceConfigurationInfo" : {
        "required" : [ "discrete_sizes", "name" ],
        "type" : "object",
        "properties" : {
          "node_types" : {
            "type" : "array",
            "description" : "Node types (master, data) for the instance. For instance configurations where the type (and tier) is specified in the 'id', the default value of 'node_types' will be automatically inferred",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "nodeTypes"
          },
          "metadata" : {
            "type" : "object",
            "properties" : { },
            "description" : "Optional arbitrary metadata to associate with this template"
          },
          "max_zones" : {
            "type" : "integer",
            "description" : "The maximum number of availability zones in which this instance configuration has allocators. This field will be missing unless explicitly requested with the show_max_zones parameter",
            "format" : "int32",
            "readOnly" : true,
            "x-ballerina-name" : "maxZones"
          },
          "cpu_multiplier" : {
            "type" : "number",
            "description" : "Settings for the instance CPU multiplier",
            "format" : "double",
            "x-ballerina-name" : "cpuMultiplier"
          },
          "storage_multiplier" : {
            "type" : "number",
            "description" : "Settings for the instance storage multiplier",
            "format" : "double",
            "x-ballerina-name" : "storageMultiplier"
          },
          "name" : {
            "type" : "string",
            "description" : "Display name for the instance configuration"
          },
          "description" : {
            "type" : "string",
            "description" : "Optional description for the instance configuration"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the instance configuration"
          },
          "instance_type" : {
            "type" : "string",
            "description" : "The type of instance. For instance configurations where the type is specified in the 'id', the default value of 'instance_type' will be automatically inferred",
            "enum" : [ "elasticsearch", "kibana", "apm", "integrations_server", "appsearch", "enterprise_search" ],
            "x-ballerina-name" : "instanceType"
          },
          "config_version" : {
            "type" : "integer",
            "description" : "If the IC is configuration controlled, this field is the version either being read back (reads return the latest IC unless specified by the 'config_version' URL param), or the version to update. Cannot be used in creates. For unversioned IC reads it is left empty",
            "format" : "int32",
            "x-ballerina-name" : "configVersion"
          },
          "discrete_sizes" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DiscreteSizes"
            } ],
            "x-ballerina-name" : "discreteSizes"
          }
        },
        "description" : "The configuration template for Elasticsearch instances, Kibana instances, and APM Servers"
      },
      "ClusterTopologyInfo" : {
        "required" : [ "healthy", "instances" ],
        "type" : "object",
        "properties" : {
          "instances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClusterInstanceInfo"
            }
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the cluster topology is healthy (ie all instances are started and the services they run - ie elasticsearch - are available"
          }
        },
        "description" : "The topology for Elasticsearch clusters, multiple Kibana instances, or multiple APM Servers. The `ClusterTopologyInfo` also includes the instances and containers, and where they are located"
      },
      "RollingStrategyConfig" : {
        "type" : "object",
        "properties" : {
          "skip_synced_flush" : {
            "type" : "boolean",
            "description" : "Whether to skip attempting to do a synced flush on the filesystem of the container (default: false), which is less safe but may be required if the container is unhealthy",
            "x-ballerina-name" : "skipSyncedFlush"
          },
          "group_by" : {
            "type" : "string",
            "description" : "Specifies the grouping attribute to use when rolling several instances. Instances that share the same value for the provided attribute key are rolled together as a unit. Examples that make sense to use are '\\_\\_all\\_\\_' (roll all instances as a single unit), 'logical_zone_name' (roll instances by zone), '\\_\\_name\\_\\_' (roll one instance at a time, the default if not specified). Note that '\\_\\_all\\_\\_' is required when performing a major version upgrade",
            "x-ballerina-name" : "groupBy"
          },
          "allow_inline_resize" : {
            "type" : "boolean",
            "description" : "Whether we allow changing the capacity of instances (default false). This is currently implemented by stopping, re-creating then starting the affected instance on its associated allocator when performing the changes. NOTES: This requires a round-trip through the allocation infrastructure of the active constructor, as it has to reserve the target capacity without over-committing",
            "x-ballerina-name" : "allowInlineResize"
          },
          "shard_init_wait_time" : {
            "type" : "integer",
            "description" : "The time, in seconds, to wait for shards that show no progress of initializing before rolling the next group (default: 10 minutes)",
            "format" : "int64",
            "x-ballerina-name" : "shardInitWaitTime"
          }
        },
        "description" : "Performs inline, rolling configuration changes that mutate existing containers. TIP: This is the fastest way to update a plan, but can fail for complex plan changes, such as topology changes. Also, this is less safe for configuration changes that leave a cluster in a non running state. NOTE: When you perform a major version upgrade, and 'group_by' is set to 'pass:macros[__all__]';, rolling is required"
      },
      "EnterpriseSearchConfiguration" : {
        "type" : "object",
        "properties" : {
          "user_settings_json" : {
            "type" : "object",
            "properties" : { },
            "description" : "An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided the parameters are on the allowlist and not on the denylist. (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Enterprise Search settings)",
            "x-ballerina-name" : "userSettingsJson"
          },
          "system_settings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnterpriseSearchSystemSettings"
            } ],
            "x-ballerina-name" : "systemSettings"
          },
          "user_settings_yaml" : {
            "type" : "string",
            "description" : "An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided the parameters are on the allowlist and not on the denylist. (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Enterprise Search settings)",
            "x-ballerina-name" : "userSettingsYaml"
          },
          "user_settings_override_json" : {
            "type" : "object",
            "properties" : { },
            "description" : "An arbitrary JSON object allowing ECE admins to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), i.e. in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Enterprise Search settings)",
            "x-ballerina-name" : "userSettingsOverrideJson"
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the Enterprise Search cluster (must be one of the ECE supported versions, and won't work unless it matches the Elasticsearch version. Leave blank to auto-detect version.)"
          },
          "docker_image" : {
            "type" : "string",
            "description" : "A docker URI that allows overriding of the default docker image specified for this version",
            "x-ballerina-name" : "dockerImage"
          },
          "user_settings_override_yaml" : {
            "type" : "string",
            "description" : "An arbitrary YAML object allowing ECE admins to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), i.e. in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Enterprise Search settings)",
            "x-ballerina-name" : "userSettingsOverrideYaml"
          }
        }
      },
      "KibanaClusterPlansInfo" : {
        "required" : [ "healthy", "history" ],
        "type" : "object",
        "properties" : {
          "current" : {
            "$ref" : "#/components/schemas/KibanaClusterPlanInfo"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the plan situation is healthy (if unhealthy, means the last plan attempt failed)"
          },
          "pending" : {
            "$ref" : "#/components/schemas/KibanaClusterPlanInfo"
          },
          "history" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KibanaClusterPlanInfo"
            }
          }
        },
        "description" : "Information about the current, pending, or past Kibana instance plans"
      },
      "ClusterPlanAttemptError" : {
        "required" : [ "details", "message", "timestamp" ],
        "type" : "object",
        "properties" : {
          "failure_type" : {
            "type" : "string",
            "description" : "The failure type",
            "x-ballerina-name" : "failureType"
          },
          "details" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A map with details regarding the error. Both the keys and values are always strings, representing the name of the detail and its value, respectively"
          },
          "message" : {
            "type" : "string",
            "description" : "Human readable error message"
          },
          "timestamp" : {
            "type" : "string",
            "description" : "Timestamp marking on info log of step",
            "format" : "date-time"
          }
        },
        "description" : "Information about an error during a plan attempt"
      },
      "OrganizationMemberships" : {
        "required" : [ "members" ],
        "type" : "object",
        "properties" : {
          "members" : {
            "type" : "array",
            "description" : "The list of organization memberships",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationMembership"
            }
          }
        },
        "description" : "All user memberships to an organization"
      },
      "DeploymentResources" : {
        "required" : [ "apm", "appsearch", "elasticsearch", "enterprise_search", "integrations_server", "kibana" ],
        "type" : "object",
        "properties" : {
          "enterprise_search" : {
            "type" : "array",
            "description" : "List of Enterprise Search resources in your Deployment",
            "items" : {
              "$ref" : "#/components/schemas/EnterpriseSearchResourceInfo"
            },
            "x-ballerina-name" : "enterpriseSearch"
          },
          "elasticsearch" : {
            "type" : "array",
            "description" : "List of Elasticsearch resources in your Deployment",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchResourceInfo"
            }
          },
          "kibana" : {
            "type" : "array",
            "description" : "List of Kibana resources in your Deployment",
            "items" : {
              "$ref" : "#/components/schemas/KibanaResourceInfo"
            }
          },
          "apm" : {
            "type" : "array",
            "description" : "List of Apm resources in your Deployment",
            "items" : {
              "$ref" : "#/components/schemas/ApmResourceInfo"
            }
          },
          "appsearch" : {
            "type" : "array",
            "description" : "List of App Search resources in your Deployment",
            "items" : {
              "$ref" : "#/components/schemas/AppSearchResourceInfo"
            }
          },
          "integrations_server" : {
            "type" : "array",
            "description" : "List of Integrations Server resources in your Deployment",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationsServerResourceInfo"
            },
            "x-ballerina-name" : "integrationsServer"
          }
        },
        "description" : "Describes a resource belonging to a Deployment"
      },
      "IntegrationsServerConfiguration" : {
        "type" : "object",
        "properties" : {
          "mode" : {
            "type" : "string",
            "description" : "The mode the Integrations Server is operating in",
            "enum" : [ "standalone", "managed" ]
          },
          "user_settings_json" : {
            "type" : "object",
            "properties" : { },
            "description" : "An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided the parameters are on the allowlist and not on the denylist. (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Integrations Server settings)",
            "x-ballerina-name" : "userSettingsJson"
          },
          "system_settings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IntegrationsServerSystemSettings"
            } ],
            "x-ballerina-name" : "systemSettings"
          },
          "user_settings_yaml" : {
            "type" : "string",
            "description" : "An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided the parameters are on the allowlist and not on the denylist. (These field together with 'user_settings_override*' and 'system_settings' defines the total set of Integrations Server settings)",
            "x-ballerina-name" : "userSettingsYaml"
          },
          "user_settings_override_json" : {
            "type" : "object",
            "properties" : { },
            "description" : "An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Integrations Server settings)",
            "x-ballerina-name" : "userSettingsOverrideJson"
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the Integrations Server cluster (must be one of the ECE supported versions, and won't work unless it matches the Integrations Server version. Leave blank to auto-detect version.)"
          },
          "docker_image" : {
            "type" : "string",
            "description" : "A docker URI that allows overriding of the default docker image specified for this version",
            "x-ballerina-name" : "dockerImage"
          },
          "user_settings_override_yaml" : {
            "type" : "string",
            "description" : "An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Integrations Server settings)",
            "x-ballerina-name" : "userSettingsOverrideYaml"
          }
        },
        "description" : "The configuration options for the Integrations Server"
      },
      "KibanaDeeplink" : {
        "required" : [ "semver", "uri" ],
        "type" : "object",
        "properties" : {
          "semver" : {
            "type" : "string",
            "description" : "Semver condition when to apply the URI"
          },
          "uri" : {
            "type" : "string",
            "description" : "URI to which the user should be directed"
          }
        },
        "description" : "Embedded object that contains information for linking into a specific Kibana page configured via the template"
      },
      "ItemCosts" : {
        "required" : [ "hours", "instance_count", "kind", "name", "period", "price", "price_per_hour", "sku" ],
        "type" : "object",
        "properties" : {
          "hours" : {
            "type" : "integer",
            "description" : "Resource usage in hours",
            "format" : "int64"
          },
          "period" : {
            "$ref" : "#/components/schemas/Period"
          },
          "kind" : {
            "type" : "string",
            "description" : "Kind of resource",
            "enum" : [ "elasticsearch", "kibana", "apm", "integrations_server", "appsearch", "enterprise_search" ]
          },
          "price" : {
            "type" : "number",
            "description" : "Resource price",
            "format" : "double"
          },
          "price_per_hour" : {
            "type" : "number",
            "description" : "Price per hour",
            "format" : "double",
            "x-ballerina-name" : "pricePerHour"
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name"
          },
          "sku" : {
            "type" : "string",
            "description" : "Stock Keeping Unit (SKU)"
          },
          "instance_count" : {
            "type" : "integer",
            "description" : "Number of instances",
            "format" : "int32",
            "x-ballerina-name" : "instanceCount"
          }
        },
        "description" : "Detailed costs associated to an Elastic Cloud Resource for an organization. All of the costs are expressed in Elastic Consumption Unit (ECU)"
      },
      "ElasticsearchClusterTrustSettings" : {
        "type" : "object",
        "properties" : {
          "external" : {
            "type" : "array",
            "description" : "The list of trust relationships with external entities",
            "items" : {
              "$ref" : "#/components/schemas/ExternalTrustRelationship"
            }
          },
          "direct" : {
            "type" : "array",
            "description" : "The list of trust relationships where the certificate is bundled with the trust setting. Allows configuring trust for clusters running outside of an Elastic Cloud managed environment or in an Elastic Cloud environment without an environment level trust established",
            "items" : {
              "$ref" : "#/components/schemas/DirectTrustRelationship"
            }
          },
          "accounts" : {
            "type" : "array",
            "description" : "The list of trust relationships with different accounts",
            "items" : {
              "$ref" : "#/components/schemas/AccountTrustRelationship"
            }
          }
        },
        "description" : "Configuration of trust with other clusters"
      },
      "ServiceUrl" : {
        "required" : [ "service", "url" ],
        "type" : "object",
        "properties" : {
          "service" : {
            "type" : "string",
            "description" : "Name of the service"
          },
          "url" : {
            "type" : "string",
            "description" : "The full URL to access the service"
          }
        },
        "description" : "A URL to access the service of a resource"
      },
      "ElasticsearchResourceInfo" : {
        "required" : [ "id", "info", "ref_id", "region" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "The locally-unique user-specified id of a Resource",
            "x-ballerina-name" : "refId"
          },
          "id" : {
            "type" : "string",
            "description" : "The randomly-generated id of a Resource"
          },
          "region" : {
            "type" : "string",
            "description" : "The region where this resource exists"
          },
          "info" : {
            "$ref" : "#/components/schemas/ElasticsearchClusterInfo"
          }
        },
        "description" : "Describes an Elasticsearch resource belonging to a Deployment"
      },
      "KibanaResourceInfo" : {
        "required" : [ "elasticsearch_cluster_ref_id", "id", "info", "ref_id", "region" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "The locally-unique user-specified id of a Resource",
            "x-ballerina-name" : "refId"
          },
          "elasticsearch_cluster_ref_id" : {
            "type" : "string",
            "description" : "The Elasticsearch cluster that this resource depends on",
            "x-ballerina-name" : "elasticsearchClusterRefId"
          },
          "id" : {
            "type" : "string",
            "description" : "The randomly-generated id of a Resource"
          },
          "region" : {
            "type" : "string",
            "description" : "The region where this resource exists"
          },
          "info" : {
            "$ref" : "#/components/schemas/KibanaClusterInfo"
          }
        },
        "description" : "Describes an Kibana resource belonging to a Deployment"
      },
      "ApmResourceInfo" : {
        "required" : [ "elasticsearch_cluster_ref_id", "id", "info", "ref_id", "region" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "The locally-unique user-specified id of a Resource",
            "x-ballerina-name" : "refId"
          },
          "elasticsearch_cluster_ref_id" : {
            "type" : "string",
            "description" : "The Elasticsearch cluster that this resource depends on",
            "x-ballerina-name" : "elasticsearchClusterRefId"
          },
          "id" : {
            "type" : "string",
            "description" : "The randomly-generated id of a Resource"
          },
          "region" : {
            "type" : "string",
            "description" : "The region where this resource exists"
          },
          "info" : {
            "$ref" : "#/components/schemas/ApmInfo"
          }
        },
        "description" : "Describes an APM resource belonging to a Deployment"
      },
      "FilterAssociation" : {
        "required" : [ "entity_type", "id" ],
        "type" : "object",
        "properties" : {
          "entity_type" : {
            "type" : "string",
            "description" : "Type of the traffic filter ruleset association, such as 'deployment', 'cluster'",
            "x-ballerina-name" : "entityType"
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the entity, such as the deployment ID or Elasticsearch cluster ID"
          }
        },
        "description" : "The association with a ruleset or user auth token for a deployment, template, or product"
      },
      "DeploymentUpdateResponse" : {
        "required" : [ "id", "name", "resources" ],
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/DeploymentSettings"
          },
          "diagnostics" : {
            "$ref" : "#/components/schemas/DeploymentDiagnostics"
          },
          "shutdown_resources" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Orphaned"
            } ],
            "x-ballerina-name" : "shutdownResources"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the deployment"
          },
          "alias" : {
            "type" : "string",
            "description" : "A user-defined alias to use in place of ResourceIds for user-friendly resource URLs"
          },
          "resources" : {
            "type" : "array",
            "description" : "List of resources that are part of the deployment after the update operation",
            "items" : {
              "$ref" : "#/components/schemas/DeploymentResource"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The id of the deployment"
          }
        },
        "description" : "A response returned from the Deployment update endpoint"
      },
      "RoleMappingRule" : {
        "type" : "object",
        "properties" : {
          "all" : {
            "type" : "array",
            "description" : "The rules that must match. All rules must match for the role assignment to be applied",
            "items" : {
              "$ref" : "#/components/schemas/RoleMappingGroupRule"
            }
          },
          "any" : {
            "type" : "array",
            "description" : "The rules that must match. Only one rule must match for the role assignment to be applied",
            "items" : {
              "$ref" : "#/components/schemas/RoleMappingGroupRule"
            }
          }
        }
      },
      "AutodetectStrategyConfig" : {
        "type" : "object",
        "description" : "A strategy that lets constructor choose the most optimal way to execute the plan"
      },
      "ApiKeysResponse" : {
        "required" : [ "keys" ],
        "type" : "object",
        "properties" : {
          "keys" : {
            "type" : "array",
            "description" : "The list of API keys",
            "items" : {
              "$ref" : "#/components/schemas/ApiKeyResponse"
            }
          }
        },
        "description" : "The response model for the API keys"
      },
      "EnterpriseSearchPayload" : {
        "required" : [ "elasticsearch_cluster_ref_id", "plan", "ref_id", "region" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "A locally-unique user-specified id for Enterprise Search",
            "x-ballerina-name" : "refId"
          },
          "settings" : {
            "$ref" : "#/components/schemas/EnterpriseSearchSettings"
          },
          "elasticsearch_cluster_ref_id" : {
            "type" : "string",
            "description" : "Alias to the Elasticsearch Cluster to attach Enterprise Search to",
            "x-ballerina-name" : "elasticsearchClusterRefId"
          },
          "display_name" : {
            "type" : "string",
            "description" : "The human readable name for the Enterprise Search cluster (default: takes the name of its Elasticsearch cluster)",
            "x-ballerina-name" : "displayName"
          },
          "region" : {
            "type" : "string",
            "description" : "The region where this resource exists"
          },
          "plan" : {
            "$ref" : "#/components/schemas/EnterpriseSearchPlan"
          }
        },
        "description" : "An Enterprise Search creation request paired with the alias of the Elasticsearch cluster it should be paired with"
      },
      "ChartItems" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "The list of chart item",
            "items" : {
              "$ref" : "#/components/schemas/ChartItem"
            }
          }
        },
        "description" : "A collection of ChartItems"
      },
      "CreateExtensionRequest" : {
        "required" : [ "extension_type", "name", "version" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The extension name. Only ASCII alphanumeric and [_.-] characters allowed"
          },
          "download_url" : {
            "type" : "string",
            "description" : "The URL to download the extension archive",
            "x-ballerina-name" : "downloadUrl"
          },
          "description" : {
            "type" : "string",
            "description" : "The extension description"
          },
          "extension_type" : {
            "type" : "string",
            "description" : "The extension type",
            "enum" : [ "plugin", "bundle" ],
            "x-ballerina-name" : "extensionType"
          },
          "version" : {
            "type" : "string",
            "description" : "The Elasticsearch version"
          }
        },
        "description" : "The body of a request to create a new extension"
      },
      "StackVersionApmConfig" : {
        "required" : [ "blacklist", "docker_image" ],
        "type" : "object",
        "properties" : {
          "capacity_constraints" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StackVersionInstanceCapacityConstraint"
            } ],
            "x-ballerina-name" : "capacityConstraints"
          },
          "settings" : {
            "type" : "object",
            "properties" : { },
            "description" : "Settings that are applied to all nodes of this type"
          },
          "compatible_node_types" : {
            "type" : "array",
            "description" : "Node types that are compatible with this one",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "compatibleNodeTypes"
          },
          "blacklist" : {
            "type" : "array",
            "description" : "List of configuration options that cannot be overridden by user settings",
            "items" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "string",
            "description" : "Version of APM"
          },
          "docker_image" : {
            "type" : "string",
            "description" : "Docker image for the APM",
            "x-ballerina-name" : "dockerImage"
          }
        },
        "description" : "The APM Server configuration for an Elastic Stack version"
      },
      "ClusterSystemAlert" : {
        "required" : [ "alert_type", "instance_name", "timestamp" ],
        "type" : "object",
        "properties" : {
          "instance_name" : {
            "type" : "string",
            "description" : "Instance that caused the system alert",
            "x-ballerina-name" : "instanceName"
          },
          "exit_code" : {
            "type" : "integer",
            "description" : "The exit_code related to the event. Only applicable for alert_type: slain",
            "format" : "int32",
            "x-ballerina-name" : "exitCode"
          },
          "alert_type" : {
            "type" : "string",
            "description" : "Type of system alert",
            "enum" : [ "automatic_restart", "heap_dump", "unknown_event" ],
            "x-ballerina-name" : "alertType"
          },
          "url" : {
            "type" : "string",
            "description" : "The URL related to the event. Only applicable for alert_type: heap_dump"
          },
          "timestamp" : {
            "type" : "string",
            "description" : "Timestamp marking the system alert",
            "format" : "date-time"
          }
        },
        "description" : "Information about a system alert on an Elasticsearch cluster"
      },
      "EnterpriseSearchPlan" : {
        "required" : [ "enterprise_search" ],
        "type" : "object",
        "properties" : {
          "enterprise_search" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnterpriseSearchConfiguration"
            } ],
            "x-ballerina-name" : "enterpriseSearch"
          },
          "transient" : {
            "$ref" : "#/components/schemas/TransientEnterpriseSearchPlanConfiguration"
          },
          "cluster_topology" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnterpriseSearchTopologyElement"
            },
            "x-ballerina-name" : "clusterTopology"
          }
        },
        "description" : "The plan for the Enterprise Search cluster"
      },
      "SamlIdp" : {
        "required" : [ "issuer", "public_certificate", "sso_url" ],
        "type" : "object",
        "properties" : {
          "public_certificate" : {
            "type" : "array",
            "description" : "Base64-encoded PEM-format X.509 certificate",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "publicCertificate"
          },
          "sso_url" : {
            "type" : "string",
            "description" : "The IdP SAML HTTP-POST endpoint URL that will receive SAML requests during SP-initiated login",
            "x-ballerina-name" : "ssoUrl"
          },
          "issuer" : {
            "type" : "string",
            "description" : "The IdP URI that identifies the issuer of a SAML2 response message assertion"
          }
        },
        "description" : "SAML2 IdP configuration object"
      },
      "IntegrationsServerSettings" : {
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ClusterMetadataSettings"
          }
        },
        "description" : "The settings for the Integrations Server"
      },
      "SimpleQueryStringQuery" : {
        "required" : [ "query" ],
        "type" : "object",
        "properties" : {
          "auto_generate_synonyms_phrase_query" : {
            "type" : "boolean",
            "description" : "If `true`, the parse creates a `match_phrase` uery for each multi-position token. Defaults to `true`",
            "x-ballerina-name" : "autoGenerateSynonymsPhraseQuery"
          },
          "query" : {
            "type" : "string",
            "description" : "The query expressed in simple query string syntax"
          },
          "analyze_wildcard" : {
            "type" : "boolean",
            "description" : "If `true`, the query attempts to analyze wildcard terms. Defaults to `false`",
            "x-ballerina-name" : "analyzeWildcard"
          },
          "flags" : {
            "type" : "string",
            "description" : "List of enabled operators for the simple query string syntax. Defaults to `ALL`"
          },
          "minimum_should_match" : {
            "type" : "string",
            "description" : "Minimum number of clauses that must match for a document to be returned",
            "x-ballerina-name" : "minimumShouldMatch"
          },
          "fuzzy_transpositions" : {
            "type" : "boolean",
            "description" : "If `true`, edits for fuzzy matching include transpositions of two adjacent characters. Defaults to `false`",
            "x-ballerina-name" : "fuzzyTranspositions"
          },
          "fuzzy_prefix_length" : {
            "type" : "integer",
            "description" : "Number of beginning characters left unchanged for fuzzy matching. Defaults to 0",
            "format" : "int32",
            "x-ballerina-name" : "fuzzyPrefixLength"
          },
          "lenient" : {
            "type" : "boolean",
            "description" : "If `true`, format-based errors, such as providing a text value for a numeric field are ignored. Defaults to `false`"
          },
          "default_operator" : {
            "type" : "string",
            "description" : "The boolean operator used to combine the terms of the query. Valid values are `OR` (default) and `AND`",
            "x-ballerina-name" : "defaultOperator"
          },
          "analyzer" : {
            "type" : "string",
            "description" : "The name of the analyzer to use to convert the query text into tokens"
          },
          "fuzzy_max_expansions" : {
            "type" : "integer",
            "description" : "Maximum number of terms to which the query expands for fuzzy matching. Defaults to 50",
            "format" : "int32",
            "x-ballerina-name" : "fuzzyMaxExpansions"
          },
          "quote_field_suffix" : {
            "type" : "string",
            "description" : "Suffix appended to quoted text in the query string",
            "x-ballerina-name" : "quoteFieldSuffix"
          },
          "fields" : {
            "type" : "array",
            "description" : "Array of fields to search",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A query that uses simple query string syntax. Will ignore invalid syntax"
      },
      "StackVersionAppSearchConfig" : {
        "required" : [ "blacklist", "docker_image" ],
        "type" : "object",
        "properties" : {
          "capacity_constraints" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StackVersionInstanceCapacityConstraint"
            } ],
            "x-ballerina-name" : "capacityConstraints"
          },
          "settings" : {
            "type" : "object",
            "properties" : { },
            "description" : "Settings that are applied to all nodes of this type"
          },
          "node_types" : {
            "type" : "array",
            "description" : "Node types that are supported by this stack version",
            "items" : {
              "$ref" : "#/components/schemas/StackVersionNodeType"
            },
            "x-ballerina-name" : "nodeTypes"
          },
          "compatible_node_types" : {
            "type" : "array",
            "description" : "Node types that are compatible with this one",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "compatibleNodeTypes"
          },
          "blacklist" : {
            "type" : "array",
            "description" : "List of configuration options that cannot be overridden by user settings",
            "items" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "string",
            "description" : "Version of AppSearch"
          },
          "docker_image" : {
            "type" : "string",
            "description" : "Docker image for the AppSearch",
            "x-ballerina-name" : "dockerImage"
          }
        },
        "description" : "AppSearch related configuration of an Elastic Stack version"
      },
      "AppSearchPlanInfo" : {
        "required" : [ "healthy", "plan_attempt_log", "warnings" ],
        "type" : "object",
        "properties" : {
          "healthy" : {
            "type" : "boolean",
            "description" : "Either the plan ended successfully, or is not yet completed (and no errors have occurred)"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClusterPlanWarning"
            }
          },
          "attempt_end_time" : {
            "type" : "string",
            "description" : "If this plan completed or failed (ie is not pending), when the attempt ended (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "attemptEndTime"
          },
          "source" : {
            "$ref" : "#/components/schemas/ChangeSourceInfo"
          },
          "error" : {
            "$ref" : "#/components/schemas/ClusterPlanAttemptError"
          },
          "plan" : {
            "$ref" : "#/components/schemas/AppSearchPlan"
          },
          "plan_attempt_log" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClusterPlanStepInfo"
            },
            "x-ballerina-name" : "planAttemptLog"
          },
          "plan_end_time" : {
            "type" : "string",
            "description" : "If this plan is not current or pending, when the plan was no longer active (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "planEndTime"
          },
          "plan_attempt_id" : {
            "type" : "string",
            "description" : "A UUID for each plan attempt",
            "x-ballerina-name" : "planAttemptId"
          },
          "plan_attempt_name" : {
            "type" : "string",
            "description" : "A human readable name for each plan attempt, only populated when retrieving plan histories",
            "x-ballerina-name" : "planAttemptName"
          },
          "attempt_start_time" : {
            "type" : "string",
            "description" : "When this plan attempt (ie to apply the plan to the App Search) started (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "attemptStartTime"
          }
        },
        "description" : "Information about the App Search Server plan"
      },
      "ReplyWarning" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "A structured code representing the error type that occurred"
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the warning that occurred"
          }
        }
      },
      "ClusterInstanceInfo" : {
        "required" : [ "container_started", "healthy", "instance_name", "maintenance_mode", "service_running" ],
        "type" : "object",
        "properties" : {
          "instance_name" : {
            "type" : "string",
            "description" : "The name of the instance in Elastic Cloud",
            "x-ballerina-name" : "instanceName"
          },
          "memory" : {
            "$ref" : "#/components/schemas/ClusterInstanceMemoryInfo"
          },
          "maintenance_mode" : {
            "type" : "boolean",
            "description" : "Whether the service is is maintenance mode (meaning that the proxy is not routing external traffic to it)",
            "x-ballerina-name" : "maintenanceMode"
          },
          "service_roles" : {
            "type" : "array",
            "description" : "List of roles assigned to the service running in the instance. Currently only populated for Elasticsearch, with possible values: master,data,ingest,ml",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "serviceRoles"
          },
          "allocator_id" : {
            "type" : "string",
            "description" : "The id of the allocator on which this instance is running (if the container is started or starting)",
            "x-ballerina-name" : "allocatorId"
          },
          "service_version" : {
            "type" : "string",
            "description" : "The version of the service that the instance is running (eg Elasticsearch or Kibana), if available",
            "x-ballerina-name" : "serviceVersion"
          },
          "service_running" : {
            "type" : "boolean",
            "description" : "Whether the service launched inside the container -ie Elasticsearch- is actually running",
            "x-ballerina-name" : "serviceRunning"
          },
          "instance_overrides" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/InstanceOverrides"
            } ],
            "x-ballerina-name" : "instanceOverrides"
          },
          "container_started" : {
            "type" : "boolean",
            "description" : "Whether the container has started (does not tell you anything about the service -ie Elasticsearch- running inside the container)",
            "x-ballerina-name" : "containerStarted"
          },
          "disk" : {
            "$ref" : "#/components/schemas/ClusterInstanceDiskInfo"
          },
          "instance_configuration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ClusterInstanceConfigurationInfo"
            } ],
            "x-ballerina-name" : "instanceConfiguration"
          },
          "zone" : {
            "type" : "string",
            "description" : "The zone in which this instance is being allocated"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the instance is healthy (ie started and running)"
          },
          "node_roles" : {
            "type" : "array",
            "description" : "A list of the node roles assigned to the service running in the instance. Currently populated only for Elasticsearch",
            "items" : {
              "type" : "string",
              "enum" : [ "master", "ingest", "ml", "data_hot", "data_content", "data_warm", "data_cold", "data_frozen", "remote_cluster_client", "transform", "voting_only" ]
            },
            "x-ballerina-name" : "nodeRoles"
          }
        },
        "description" : "Information about each Kibana instance and APM Server in the Elasticsearch cluster"
      },
      "DeploymentUpdateRequest" : {
        "required" : [ "prune_orphans" ],
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/DeploymentUpdateSettings"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/DeploymentUpdateMetadata"
          },
          "name" : {
            "type" : "string",
            "description" : "A new name for the deployment, otherwise stays the same"
          },
          "resources" : {
            "$ref" : "#/components/schemas/DeploymentUpdateResources"
          },
          "alias" : {
            "type" : "string",
            "description" : "A user-defined alias to use in place of Cluster IDs for user-friendly URLs"
          },
          "prune_orphans" : {
            "type" : "boolean",
            "description" : "Whether or not to prune orphan resources that are no longer mentioned in this request. Note that resourcesare tracked by ref_id, and if a resource's ref_id is changed, any previous running resources created with that previousref_id are considered to be orphaned as well",
            "x-ballerina-name" : "pruneOrphans"
          }
        },
        "description" : "A request for updating a Deployment consisting of multiple resources"
      },
      "KibanaPlanControlConfiguration" : {
        "type" : "object",
        "properties" : {
          "cluster_reboot" : {
            "type" : "string",
            "description" : "Set to 'forced' to force a reboot as part of the upgrade plan",
            "enum" : [ "forced" ],
            "x-ballerina-name" : "clusterReboot"
          },
          "calm_wait_time" : {
            "type" : "integer",
            "description" : "This timeout determines how long to give a cluster after it responds to API calls before performing actual operations on it. It defaults to 5s",
            "format" : "int64",
            "x-ballerina-name" : "calmWaitTime"
          },
          "timeout" : {
            "type" : "integer",
            "description" : "The total timeout in seconds after which the plan is cancelled even if it is not complete. Defaults to 4x the max memory capacity per node (in MB)",
            "format" : "int64"
          },
          "extended_maintenance" : {
            "type" : "boolean",
            "description" : "If true (default false), does not clear the maintenance flag (which prevents its API from being accessed except by the constructor) on new instances added until after a snapshot has been restored, otherwise, the maintenance flag is cleared once the new instances successfully join the new cluster",
            "x-ballerina-name" : "extendedMaintenance"
          }
        },
        "description" : "The configuration settings for the timeout and fallback parameters"
      },
      "ProjectRoleAssignments" : {
        "type" : "object",
        "properties" : {
          "security" : {
            "type" : "array",
            "description" : "The Security project-scoped role assignments to set",
            "items" : {
              "$ref" : "#/components/schemas/ProjectRoleAssignment"
            }
          },
          "elasticsearch" : {
            "type" : "array",
            "description" : "The Elasticsearch project-scoped role assignments to set",
            "items" : {
              "$ref" : "#/components/schemas/ProjectRoleAssignment"
            }
          },
          "observability" : {
            "type" : "array",
            "description" : "The Observability project-scoped role assignments to set",
            "items" : {
              "$ref" : "#/components/schemas/ProjectRoleAssignment"
            }
          }
        },
        "description" : "Assignments for roles with project scope"
      },
      "SearchRequest" : {
        "type" : "object",
        "properties" : {
          "cursor" : {
            "type" : "string",
            "description" : "To retrieve the next page of hits, set this to the cursor value of the previous response. When set, all other fields are ignored"
          },
          "size" : {
            "type" : "integer",
            "description" : "The maximum number of search results to return",
            "format" : "int32"
          },
          "query" : {
            "$ref" : "#/components/schemas/QueryContainer"
          },
          "from" : {
            "type" : "integer",
            "description" : "Deprecated, use cursor for a more scalable approach to paging",
            "format" : "int32"
          },
          "sort" : {
            "type" : "array",
            "description" : "An array of fields to sort the search results by. Defaults to query rank and last modified date descending",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        },
        "description" : "An Elasticsearch search request with a subset of options"
      },
      "DeleteApiKeysRequest" : {
        "required" : [ "keys" ],
        "type" : "object",
        "properties" : {
          "keys" : {
            "type" : "array",
            "description" : "The list of API key IDs",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The request payload that deletes the API keys"
      },
      "RoleMappingGroupRule" : {
        "required" : [ "group" ],
        "type" : "object",
        "properties" : {
          "group" : {
            "type" : "string",
            "description" : "The group to match. Can have wildcards"
          }
        }
      },
      "DeploymentObservability" : {
        "required" : [ "healthy" ],
        "type" : "object",
        "properties" : {
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the deployment observability is healthy or not (one or more of the subsections will have healthy: false)"
          },
          "logging" : {
            "$ref" : "#/components/schemas/DeploymentLogging"
          },
          "metrics" : {
            "$ref" : "#/components/schemas/DeploymentMetrics"
          },
          "issues" : {
            "type" : "array",
            "description" : "General observability health issues for the deployment",
            "items" : {
              "$ref" : "#/components/schemas/ObservabilityIssue"
            }
          }
        },
        "description" : "Observability information for a deployment"
      },
      "PublicCertificate" : {
        "required" : [ "active", "metadata", "pem" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/CertificateMetaData"
          },
          "active" : {
            "type" : "boolean",
            "description" : "If true, this certificate is the one which has been used to sign the current certificates. Otherwise, it may be the one that will be used when this certificate expires"
          },
          "pem" : {
            "type" : "string",
            "description" : "The public certificate as string in PEM format"
          }
        },
        "description" : "A certificate used to sign the certificates of this deployment"
      },
      "DeploymentCosts" : {
        "required" : [ "costs", "deployment_id", "deployment_name", "hourly_rate" ],
        "type" : "object",
        "properties" : {
          "costs" : {
            "$ref" : "#/components/schemas/Costs"
          },
          "period" : {
            "$ref" : "#/components/schemas/Period"
          },
          "hourly_rate" : {
            "type" : "number",
            "description" : "Price per hour",
            "format" : "double",
            "x-ballerina-name" : "hourlyRate"
          },
          "deployment_name" : {
            "type" : "string",
            "description" : "Elasticsearch deployment name",
            "x-ballerina-name" : "deploymentName"
          },
          "deployment_id" : {
            "type" : "string",
            "description" : "Elasticsearch deployment id",
            "x-ballerina-name" : "deploymentId"
          }
        },
        "description" : "Detailed costs for a deployment for an organization. All of the costs are expressed in Elastic Consumption Unit (ECU)"
      },
      "DeploymentUpdateSettings" : {
        "type" : "object",
        "properties" : {
          "auto_ops" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutoOpsSettings"
            } ],
            "x-ballerina-name" : "autoOps"
          },
          "autoscaling_enabled" : {
            "type" : "boolean",
            "description" : "Enable autoscaling for this deployment",
            "x-ballerina-name" : "autoscalingEnabled"
          },
          "observability" : {
            "$ref" : "#/components/schemas/DeploymentObservabilitySettings"
          }
        },
        "description" : "Additional configuration for the new deployment object"
      },
      "RestoreSnapshotApiConfiguration" : {
        "type" : "object",
        "properties" : {
          "indices" : {
            "type" : "array",
            "description" : "The list of indices to restore (supports +ve and -ve selection and wildcarding - see the default Elasticsearch index format documentation)",
            "items" : {
              "type" : "string"
            }
          },
          "raw_settings" : {
            "type" : "object",
            "properties" : { },
            "description" : "This JSON object (merged with the 'indices' field (if present) is passed untouched into the restore command - see the Elasticsearch '_snapshot' documentation for more details on supported formats",
            "x-ballerina-name" : "rawSettings"
          }
        },
        "description" : "The configuration for the restore command, such as which indices you want to restore"
      },
      "BoolQuery" : {
        "type" : "object",
        "properties" : {
          "filter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QueryContainer"
            }
          },
          "should" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QueryContainer"
            }
          },
          "must_not" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QueryContainer"
            },
            "x-ballerina-name" : "mustNot"
          },
          "minimum_should_match" : {
            "type" : "integer",
            "description" : "The minimum number of optional should clauses to match",
            "format" : "int32",
            "x-ballerina-name" : "minimumShouldMatch"
          },
          "must" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QueryContainer"
            }
          }
        },
        "description" : "A query for documents that match boolean combinations of other queries"
      },
      "Extensions" : {
        "required" : [ "extensions" ],
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "array",
            "description" : "The list of extensions",
            "items" : {
              "$ref" : "#/components/schemas/Extension"
            }
          }
        },
        "description" : "A collection of extensions"
      },
      "DeploymentLogging" : {
        "required" : [ "healthy" ],
        "type" : "object",
        "properties" : {
          "urls" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The URLs to view this deployment's logs in Kibana"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the deployment logging is healthy or not"
          },
          "issues" : {
            "type" : "array",
            "description" : "Logging health issues for the deployment",
            "items" : {
              "$ref" : "#/components/schemas/ObservabilityIssue"
            }
          }
        },
        "description" : "Logging information for a deployment"
      },
      "AppSearchResourceInfo" : {
        "required" : [ "elasticsearch_cluster_ref_id", "id", "info", "ref_id", "region" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "The locally-unique user-specified id of a Resource",
            "x-ballerina-name" : "refId"
          },
          "elasticsearch_cluster_ref_id" : {
            "type" : "string",
            "description" : "The Elasticsearch cluster that this resource depends on",
            "x-ballerina-name" : "elasticsearchClusterRefId"
          },
          "id" : {
            "type" : "string",
            "description" : "The randomly-generated id of a Resource"
          },
          "region" : {
            "type" : "string",
            "description" : "The region where this resource exists"
          },
          "info" : {
            "$ref" : "#/components/schemas/AppSearchInfo"
          }
        },
        "description" : "Describes an App Search resource belonging to a Deployment"
      },
      "BasicFailedReply" : {
        "required" : [ "errors" ],
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "description" : "A list of errors that occurred in the failing request",
            "items" : {
              "$ref" : "#/components/schemas/BasicFailedReplyElement"
            }
          }
        }
      },
      "DtsRate" : {
        "required" : [ "formatted_value", "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "number",
            "description" : "Raw rate",
            "format" : "double"
          },
          "formatted_value" : {
            "type" : "string",
            "description" : "Rate in human readable format",
            "x-ballerina-name" : "formattedValue"
          }
        },
        "description" : "DTS Rate"
      },
      "ElasticsearchBlockingIssues" : {
        "required" : [ "blocks", "healthy" ],
        "type" : "object",
        "properties" : {
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the cluster has issues (false) or not (true)"
          },
          "blocks" : {
            "type" : "array",
            "description" : "A list of blocks that affect the availability of the cluster",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchBlockingIssueElement"
            }
          }
        },
        "description" : "Issues that prevent the Elasticsearch cluster or index from correctly operating"
      },
      "ClusterCurationSettings" : {
        "required" : [ "specs" ],
        "type" : "object",
        "properties" : {
          "specs" : {
            "type" : "array",
            "description" : "Specifications for curation",
            "items" : {
              "$ref" : "#/components/schemas/ClusterCurationSpec"
            }
          }
        },
        "description" : "The index curation settings for an Elasticsearch cluster"
      },
      "ClusterInstanceConfigurationInfo" : {
        "required" : [ "id", "name", "resource" ],
        "type" : "object",
        "properties" : {
          "resource" : {
            "type" : "string",
            "description" : "The resource type of the instance configuration",
            "enum" : [ "memory", "storage" ]
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the configuration used to create the instance"
          },
          "id" : {
            "type" : "string",
            "description" : "The id of the configuration used to create the instance"
          },
          "config_version" : {
            "type" : "integer",
            "description" : "If the IC is configuration controlled, this field is the version either being read back (reads return the latest IC unless specified by the 'config_version' URL param), or the version to update. Cannot be used in creates. For unversioned IC reads it is left empty",
            "format" : "int32",
            "x-ballerina-name" : "configVersion"
          }
        },
        "description" : "Information about a configuration that creates a Kibana instance or APM Server"
      },
      "UpdateExtensionRequest" : {
        "required" : [ "extension_type", "name", "version" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The extension name"
          },
          "download_url" : {
            "type" : "string",
            "description" : "The URL to download the extension archive",
            "x-ballerina-name" : "downloadUrl"
          },
          "description" : {
            "type" : "string",
            "description" : "The extension description"
          },
          "extension_type" : {
            "type" : "string",
            "description" : "The extension type",
            "enum" : [ "plugin", "bundle" ],
            "x-ballerina-name" : "extensionType"
          },
          "version" : {
            "type" : "string",
            "description" : "The Elasticsearch version"
          }
        },
        "description" : "The body of a request to update an extension"
      },
      "TermQuery" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "The exact value to query for"
          }
        },
        "description" : "A query for documents that contain the specified term in the inverted index"
      },
      "ApmPlansInfo" : {
        "required" : [ "healthy", "history" ],
        "type" : "object",
        "properties" : {
          "current" : {
            "$ref" : "#/components/schemas/ApmPlanInfo"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the plan situation is healthy (if unhealthy, means the last plan attempt failed)"
          },
          "pending" : {
            "$ref" : "#/components/schemas/ApmPlanInfo"
          },
          "history" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApmPlanInfo"
            }
          }
        },
        "description" : "Information about current, pending, and past APM Server plans"
      },
      "RollingGrowShrinkStrategyConfig" : {
        "type" : "object",
        "description" : "A strategy that creates new Elasticsearch instances, Kibana instances, and APM Servers with the new plan, then migrates the node data to minimize the amount of spare capacity"
      },
      "DeploymentMetrics" : {
        "required" : [ "healthy" ],
        "type" : "object",
        "properties" : {
          "urls" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The URLs to view this deployment's metrics in Kibana"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the deployment metrics are healthy or not"
          },
          "issues" : {
            "type" : "array",
            "description" : "Metrics health issues for the deployment",
            "items" : {
              "$ref" : "#/components/schemas/ObservabilityIssue"
            }
          }
        },
        "description" : "Metrics information for a deployment"
      },
      "SimplifiedLineItem" : {
        "required" : [ "ecu_balance", "ecu_quantity", "end", "id", "start" ],
        "type" : "object",
        "properties" : {
          "ecu_balance" : {
            "type" : "number",
            "description" : "Elastic Consumption Unit (ECU) Balance",
            "format" : "double",
            "x-ballerina-name" : "ecuBalance"
          },
          "ecu_quantity" : {
            "type" : "number",
            "description" : "Original Elastic Consumption Unit (ECU) quantity",
            "format" : "double",
            "x-ballerina-name" : "ecuQuantity"
          },
          "start" : {
            "type" : "string",
            "description" : "Start of the line item's validity",
            "format" : "date-time"
          },
          "end" : {
            "type" : "string",
            "description" : "Expiration of the line item",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string",
            "description" : "Line Item ID"
          }
        },
        "description" : "Line Item"
      },
      "ElasticsearchClusterPlansInfo" : {
        "required" : [ "healthy", "history" ],
        "type" : "object",
        "properties" : {
          "current" : {
            "$ref" : "#/components/schemas/ElasticsearchClusterPlanInfo"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the plan situation is healthy (if unhealthy, means the last plan attempt failed)"
          },
          "pending" : {
            "$ref" : "#/components/schemas/ElasticsearchClusterPlanInfo"
          },
          "history" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchClusterPlanInfo"
            }
          }
        },
        "description" : "Information about the current, pending, and past Elasticsearch cluster plans"
      },
      "OrganizationInvitation" : {
        "required" : [ "created_at", "email", "expired", "expires_at", "organization", "token" ],
        "type" : "object",
        "properties" : {
          "role_assignments" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoleAssignments"
            } ],
            "x-ballerina-name" : "roleAssignments"
          },
          "expires_at" : {
            "type" : "string",
            "description" : "The date and time when the invitation expires",
            "format" : "date-time",
            "x-ballerina-name" : "expiresAt"
          },
          "expired" : {
            "type" : "boolean",
            "description" : "True if the invitation is expired"
          },
          "organization" : {
            "$ref" : "#/components/schemas/Organization"
          },
          "created_at" : {
            "type" : "string",
            "description" : "The date and time when the invitation was created",
            "format" : "date-time",
            "x-ballerina-name" : "createdAt"
          },
          "accepted_at" : {
            "type" : "string",
            "description" : "The date and time when the invitation was accepted",
            "format" : "date-time",
            "x-ballerina-name" : "acceptedAt"
          },
          "email" : {
            "type" : "string",
            "description" : "The email address to invite to the organization"
          },
          "token" : {
            "type" : "string",
            "description" : "The token used to accept the invitation"
          }
        },
        "description" : "An invitation to an organization"
      },
      "KibanaClusterPlan" : {
        "required" : [ "kibana" ],
        "type" : "object",
        "properties" : {
          "transient" : {
            "$ref" : "#/components/schemas/TransientKibanaPlanConfiguration"
          },
          "cluster_topology" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KibanaClusterTopologyElement"
            },
            "x-ballerina-name" : "clusterTopology"
          },
          "kibana" : {
            "$ref" : "#/components/schemas/KibanaConfiguration"
          }
        },
        "description" : "The plan for the Kibana instance"
      },
      "TrafficFilterSettings" : {
        "required" : [ "rulesets" ],
        "type" : "object",
        "properties" : {
          "rulesets" : {
            "type" : "array",
            "description" : "IDs of the traffic filter rulesets",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The configuration settings for the traffic filter"
      },
      "TransientKibanaPlanConfiguration" : {
        "type" : "object",
        "properties" : {
          "plan_configuration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/KibanaPlanControlConfiguration"
            } ],
            "x-ballerina-name" : "planConfiguration"
          },
          "strategy" : {
            "$ref" : "#/components/schemas/PlanStrategy"
          }
        },
        "description" : "Defines the configuration parameters that control how the plan is applied. For example, the Elasticsearch cluster topology and Kibana instance settings"
      },
      "ExtensionsextensionIdBody" : {
        "required" : [ "file" ],
        "type" : "object",
        "properties" : {
          "file" : {
            "type" : "string",
            "description" : "Zip file that contains the extension",
            "format" : "binary"
          }
        }
      },
      "EnterpriseSearchPlanControlConfiguration" : {
        "type" : "object",
        "properties" : {
          "preferred_allocators" : {
            "type" : "array",
            "description" : "List of allocators on which instances are placed if possible (if not possible/not specified then any available allocator with space is used)",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "preferredAllocators"
          },
          "cluster_reboot" : {
            "type" : "string",
            "description" : "Set to 'forced' to force a reboot as part of the upgrade plan",
            "enum" : [ "forced" ],
            "x-ballerina-name" : "clusterReboot"
          },
          "move_allocators" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AllocatorMoveRequest"
            },
            "x-ballerina-name" : "moveAllocators"
          },
          "calm_wait_time" : {
            "type" : "integer",
            "description" : "This timeout determines how long to give a cluster after it responds to API calls before performing actual operations on it. It defaults to 5s",
            "format" : "int64",
            "x-ballerina-name" : "calmWaitTime"
          },
          "move_instances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InstanceMoveRequest"
            },
            "x-ballerina-name" : "moveInstances"
          },
          "reallocate_instances" : {
            "type" : "boolean",
            "description" : "If true (default: false) does not allow re-using any existing instances currently in the cluster, i.e. even unchanged instances will be re-created",
            "x-ballerina-name" : "reallocateInstances"
          },
          "timeout" : {
            "type" : "integer",
            "description" : "The total timeout in seconds after which the plan is cancelled even if it is not complete. Defaults to 4x the max memory capacity per node (in MB)",
            "format" : "int64"
          },
          "extended_maintenance" : {
            "type" : "boolean",
            "description" : "If true (default false), does not clear the maintenance flag (which prevents its API from being accessed except by the constructor) on new instances added until after a snapshot has been restored, otherwise, the maintenance flag is cleared once the new instances successfully join the new cluster",
            "x-ballerina-name" : "extendedMaintenance"
          }
        }
      },
      "AutoOpsSettings" : {
        "required" : [ "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "See AutoOps integration status for this deployment",
            "enum" : [ "connected", "not_connected", "excluded" ]
          }
        },
        "description" : "AutoOps settings for this deployment"
      },
      "IntegrationsServerPlan" : {
        "required" : [ "integrations_server" ],
        "type" : "object",
        "properties" : {
          "transient" : {
            "$ref" : "#/components/schemas/TransientIntegrationsServerPlanConfiguration"
          },
          "cluster_topology" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationsServerTopologyElement"
            },
            "x-ballerina-name" : "clusterTopology"
          },
          "integrations_server" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IntegrationsServerConfiguration"
            } ],
            "x-ballerina-name" : "integrationsServer"
          }
        },
        "description" : "The plan for the Integrations Server"
      },
      "ClusterMetadataSettings" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The display name of the cluster"
          }
        },
        "description" : "The top-level configuration settings for the Elasticsearch cluster"
      },
      "ElasticsearchElasticUserPasswordResetResponse" : {
        "required" : [ "password", "username" ],
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string",
            "description" : "The newly-reset password for the given Elasticsearch cluster"
          },
          "username" : {
            "type" : "string",
            "description" : "The username for the newly-reset password for the given Elasticsearch cluster"
          }
        },
        "description" : "Envelope holding the newly-reset password for a cluster's user"
      },
      "Extension" : {
        "required" : [ "extension_type", "id", "name", "url", "version" ],
        "type" : "object",
        "properties" : {
          "deployments" : {
            "type" : "array",
            "description" : "List of deployments using this extension. Up to only 10000 deployments will be included in the list",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The extension name"
          },
          "download_url" : {
            "type" : "string",
            "description" : "The download URL specified during extension creation",
            "x-ballerina-name" : "downloadUrl"
          },
          "description" : {
            "type" : "string",
            "description" : "The extension description"
          },
          "id" : {
            "type" : "string",
            "description" : "The extension ID"
          },
          "file_metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ExtensionFileMetadata"
            } ],
            "x-ballerina-name" : "fileMetadata"
          },
          "extension_type" : {
            "type" : "string",
            "description" : "The extension type",
            "enum" : [ "plugin", "bundle" ],
            "x-ballerina-name" : "extensionType"
          },
          "version" : {
            "type" : "string",
            "description" : "The Elasticsearch version"
          },
          "url" : {
            "type" : "string",
            "description" : "The extension URL to be used in the plan"
          }
        },
        "description" : "An API extension. It represents clusters' plugins and bundles"
      },
      "ElasticsearchClusterBlockingIssueElement" : {
        "required" : [ "description", "instances" ],
        "type" : "object",
        "properties" : {
          "instances" : {
            "type" : "array",
            "description" : "A list of instances that are affected by the issue",
            "items" : {
              "type" : "string"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the issue"
          }
        },
        "description" : "> WARNING\n> This endpoint is deprecated and scheduled to be removed in the next major version. Use `blocks` in `cluster_blocking_issues` instead\n\nInformation about an issue and the Elasticsearch instance it affects"
      },
      "ApmSettings" : {
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ClusterMetadataSettings"
          }
        },
        "description" : "The settings for the APM Server"
      },
      "ElasticsearchShardsInfo" : {
        "required" : [ "available_shards", "healthy", "unavailable_replicas", "unavailable_shards" ],
        "type" : "object",
        "properties" : {
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the shard situation is healthy (any unavailable shards is unhealthy)"
          },
          "unavailable_replicas" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchReplicaElement"
            },
            "x-ballerina-name" : "unavailableReplicas"
          },
          "available_shards" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchShardElement"
            },
            "x-ballerina-name" : "availableShards"
          },
          "unavailable_shards" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchShardElement"
            },
            "x-ballerina-name" : "unavailableShards"
          }
        },
        "description" : "> WARNING\n> This endpoint is deprecated and scheduled to be removed in the next major version. Use `shards_status` instead.\n\nInformation about the shards and replicas that comprise the Elasticsearch indices"
      },
      "TrafficFilterClaimedLinkIdRequest" : {
        "required" : [ "region" ],
        "type" : "object",
        "properties" : {
          "azure_endpoint_guid" : {
            "type" : "string",
            "description" : "Resource GUID of the Azure Private Endpoint to allow connections from",
            "x-ballerina-name" : "azureEndpointGuid"
          },
          "azure_endpoint_name" : {
            "type" : "string",
            "description" : "Name of the Azure Private Endpoint to allow connections from",
            "x-ballerina-name" : "azureEndpointName"
          },
          "region" : {
            "type" : "string",
            "description" : "The claimed link id can be used only for traffic filter in the specific region"
          },
          "link_id" : {
            "type" : "string",
            "description" : "Link id. A GCP private service connect ID or AWS VPC endpoint ID",
            "x-ballerina-name" : "linkId"
          }
        },
        "description" : "The specification for traffic filter claimed link id"
      },
      "AppSearch" : {
        "required" : [ "backend_plan", "display_name", "elasticsearch_cluster_ref_id", "ref_id" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "A locally-unique user-specified id",
            "x-ballerina-name" : "refId"
          },
          "elasticsearch_cluster_ref_id" : {
            "type" : "string",
            "description" : "The user-specified id of the Elasticsearch Cluster that this will link to",
            "x-ballerina-name" : "elasticsearchClusterRefId"
          },
          "backend_plan" : {
            "type" : "object",
            "properties" : { },
            "description" : "The backend plan as JSON",
            "x-ballerina-name" : "backendPlan"
          },
          "display_name" : {
            "type" : "string",
            "description" : "The human readable name (defaults to the generated cluster id if not specified)",
            "x-ballerina-name" : "displayName"
          }
        },
        "description" : "Holds diagnostics for an AppSearch resource"
      },
      "AccountTrustSettings" : {
        "required" : [ "trust_all" ],
        "type" : "object",
        "properties" : {
          "trust_all" : {
            "type" : "boolean",
            "description" : "If true, all clusters in this account will by default trust all other clusters in the same account",
            "x-ballerina-name" : "trustAll"
          }
        },
        "description" : "Settings related to the level of trust of the clusters in this account"
      },
      "DeploymentShutdownResponse" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the deployment"
          },
          "orphaned" : {
            "$ref" : "#/components/schemas/Orphaned"
          },
          "id" : {
            "type" : "string",
            "description" : "The id of the deployment"
          }
        },
        "description" : "A response returned from the Deployment shutdown endpoint"
      },
      "IntegrationsServerResourceInfo" : {
        "required" : [ "elasticsearch_cluster_ref_id", "id", "info", "ref_id", "region" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "The locally-unique user-specified id of a Resource",
            "x-ballerina-name" : "refId"
          },
          "elasticsearch_cluster_ref_id" : {
            "type" : "string",
            "description" : "The Elasticsearch cluster that this resource depends on",
            "x-ballerina-name" : "elasticsearchClusterRefId"
          },
          "id" : {
            "type" : "string",
            "description" : "The randomly-generated id of a Resource"
          },
          "region" : {
            "type" : "string",
            "description" : "The region where this resource exists"
          },
          "info" : {
            "$ref" : "#/components/schemas/IntegrationsServerInfo"
          }
        },
        "description" : "Describes an Integrations Server resource belonging to a Deployment"
      },
      "IntegrationsServerPlansInfo" : {
        "required" : [ "healthy", "history" ],
        "type" : "object",
        "properties" : {
          "current" : {
            "$ref" : "#/components/schemas/IntegrationsServerPlanInfo"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the plan situation is healthy (if unhealthy, means the last plan attempt failed)"
          },
          "pending" : {
            "$ref" : "#/components/schemas/IntegrationsServerPlanInfo"
          },
          "history" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationsServerPlanInfo"
            }
          }
        },
        "description" : "Information about current, pending, and past Integrations Server plans"
      },
      "ElasticsearchShardElement" : {
        "required" : [ "instance_name", "shard_count" ],
        "type" : "object",
        "properties" : {
          "instance_name" : {
            "type" : "string",
            "description" : "The Elastic Cloud name/id of the instance (container)",
            "x-ballerina-name" : "instanceName"
          },
          "shard_count" : {
            "type" : "integer",
            "description" : "The number of shards of the given type (available/unavailable) on this instance",
            "format" : "int32",
            "x-ballerina-name" : "shardCount"
          }
        },
        "description" : "Information about the shards for each Elasticsearch instance container that hosts an Elasticsearch node. TIP: When the shard is unavailable, the cluster is unable to serve all of the data"
      },
      "RestoreSnapshotRepoConfiguration" : {
        "type" : "object",
        "properties" : {
          "raw_settings" : {
            "type" : "object",
            "properties" : { },
            "description" : "The remote snapshot settings raw JSON - see the Elasticsearch '_snapshot' documentation for more details on supported formats",
            "x-ballerina-name" : "rawSettings"
          }
        },
        "description" : "Configures the location of a remote repository. The default is the system repository"
      },
      "StackVersionConfig" : {
        "required" : [ "elasticsearch", "kibana", "template", "upgradable_to" ],
        "type" : "object",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/StackVersionTemplateInfo"
          },
          "accessible" : {
            "type" : "boolean",
            "description" : "Whether or not this version is accessible by the calling user. This is only relevant in EC (SaaS) and is not sent in ECE"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/StackVersionMetadata"
          },
          "version" : {
            "type" : "string",
            "description" : "Stack version",
            "readOnly" : true
          },
          "appsearch" : {
            "$ref" : "#/components/schemas/StackVersionAppSearchConfig"
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Identifies that the Elastic Stack version is marked for deletion",
            "readOnly" : true
          },
          "elasticsearch" : {
            "$ref" : "#/components/schemas/StackVersionElasticsearchConfig"
          },
          "min_upgradable_from" : {
            "type" : "string",
            "description" : "The minimum version recommended to upgrade this version",
            "example" : "6.7.0",
            "x-ballerina-name" : "minUpgradableFrom"
          },
          "rolling_upgrade_compatible_versions" : {
            "type" : "array",
            "description" : "List of versions that can be upgraded to the current version of the stackpack",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "rollingUpgradeCompatibleVersions"
          },
          "upgradable_to" : {
            "type" : "array",
            "description" : "Stack Versions that this version can upgrade to",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "upgradableTo"
          },
          "whitelisted" : {
            "type" : "boolean",
            "description" : "Whether or not this version is whitelisted. This is only relevant in EC (SaaS) and is not sent in ECE"
          },
          "kibana" : {
            "$ref" : "#/components/schemas/StackVersionKibanaConfig"
          },
          "apm" : {
            "$ref" : "#/components/schemas/StackVersionApmConfig"
          }
        },
        "description" : "The details for an Elastic Stack configuration"
      },
      "ChartItemValue" : {
        "required" : [ "id", "name", "value" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the chart item value"
          },
          "id" : {
            "type" : "string",
            "description" : "The id of chart item value"
          },
          "value" : {
            "type" : "number",
            "description" : "The actual value of the chart item value",
            "format" : "double"
          }
        },
        "description" : "A ChartItem value"
      },
      "OrganizationMembership" : {
        "required" : [ "member_since", "organization_id", "user_id" ],
        "type" : "object",
        "properties" : {
          "member_since" : {
            "type" : "string",
            "description" : "The date and time the user was added to the organization",
            "format" : "date-time",
            "x-ballerina-name" : "memberSince"
          },
          "role_assignments" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoleAssignments"
            } ],
            "x-ballerina-name" : "roleAssignments"
          },
          "user_id" : {
            "type" : "string",
            "description" : "The users's identifier",
            "x-ballerina-name" : "userId"
          },
          "organization_id" : {
            "type" : "string",
            "description" : "The organization's identifier",
            "x-ballerina-name" : "organizationId"
          },
          "name" : {
            "type" : "string",
            "description" : "The user's full name"
          },
          "email" : {
            "type" : "string",
            "description" : "The user's email address"
          }
        },
        "description" : "A user's membership to an organization"
      },
      "ApiKeyResponse" : {
        "required" : [ "creation_date", "description", "id" ],
        "type" : "object",
        "properties" : {
          "role_assignments" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoleAssignments"
            } ],
            "x-ballerina-name" : "roleAssignments"
          },
          "user_id" : {
            "type" : "string",
            "description" : "The user ID",
            "x-ballerina-name" : "userId"
          },
          "organization_id" : {
            "type" : "string",
            "description" : "The organization ID linked to the API key",
            "x-ballerina-name" : "organizationId"
          },
          "description" : {
            "type" : "string",
            "description" : "The API key description. TIP: Useful when you have multiple API keys"
          },
          "id" : {
            "type" : "string",
            "description" : "The API key ID"
          },
          "creation_date" : {
            "type" : "string",
            "description" : "The date/time for when the API key is created",
            "format" : "date-time",
            "x-ballerina-name" : "creationDate"
          },
          "expiration_date" : {
            "type" : "string",
            "description" : "The date/time when the API key expires",
            "format" : "date-time",
            "x-ballerina-name" : "expirationDate"
          },
          "key" : {
            "type" : "string",
            "description" : "The API key. TIP: Since the API key is returned only once, save it in a safe place"
          }
        },
        "description" : "The response model for an API key"
      },
      "StackVersionKibanaConfig" : {
        "required" : [ "blacklist", "docker_image" ],
        "type" : "object",
        "properties" : {
          "capacity_constraints" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StackVersionInstanceCapacityConstraint"
            } ],
            "x-ballerina-name" : "capacityConstraints"
          },
          "settings" : {
            "type" : "object",
            "properties" : { },
            "description" : "Settings that are applied to all nodes of this type"
          },
          "compatible_node_types" : {
            "type" : "array",
            "description" : "Node types that are compatible with this one",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "compatibleNodeTypes"
          },
          "blacklist" : {
            "type" : "array",
            "description" : "List of configuration options that cannot be overridden by user settings",
            "items" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "string",
            "description" : "Version of Kibana"
          },
          "docker_image" : {
            "type" : "string",
            "description" : "Docker image for the kibana",
            "x-ballerina-name" : "dockerImage"
          }
        },
        "description" : "The Kibana configuration for an Elastic Stack version"
      },
      "ElasticsearchScriptTypeSettings" : {
        "type" : "object",
        "properties" : {
          "sandbox_mode" : {
            "type" : "boolean",
            "description" : "If enabled (default: true) and this script type is enabled, then only the sandbox languages are allowed. By default the sandbox languages are painless, expressions and mustache, but this can be restricted via the 'painless_enabled', 'mustache_enabled' 'expression_enabled' settings.NOTES: Not supported in 6.x. (Corresponds to the parameters 'script.engine.[painless|mustache|expressions].[file|stored|inline]')",
            "x-ballerina-name" : "sandboxMode"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "If enabled (default: true) then scripts are enabled, either for sandboxing languages (by default), or for all installed languages if 'sandbox_mode' is disabled (or for 6.x). NOTES: (Corresponds to the parameter 'script.file|stored/indexed|inline')"
          }
        },
        "description" : "Enables scripting for the specified type and controls other parameters. Store scripts in indexes (`stored`), upload in file bundles (`file`), or use in API requests (`inline`)"
      },
      "ApmSystemSettings" : {
        "type" : "object",
        "properties" : {
          "elasticsearch_password" : {
            "type" : "string",
            "description" : "Optionally override the account within APM - defaults to a system account that always exists (if specified, the username must also be specified). Note that this field is never returned from the API, it is write only",
            "x-ballerina-name" : "elasticsearchPassword"
          },
          "elasticsearch_username" : {
            "type" : "string",
            "description" : "Optionally override the account within APM - defaults to a system account that always exists (if specified, the password must also be specified). Note that this field is never returned from the API, it is write only",
            "x-ballerina-name" : "elasticsearchUsername"
          },
          "debug_enabled" : {
            "type" : "boolean",
            "description" : "Optionally enable debug mode for APM servers - defaults false",
            "x-ballerina-name" : "debugEnabled"
          },
          "secret_token" : {
            "type" : "string",
            "description" : "Optionally override the secret token within APM - defaults to the previously existing secretToken",
            "x-ballerina-name" : "secretToken"
          }
        },
        "description" : "A structure that defines a curated subset of the APM Server settings. \nTIP: To define the complete set of APM Server setting, use `ApmSystemSettings` with `user_settings_override_` and `user_settings_`"
      },
      "EnterpriseSearchPlanInfo" : {
        "required" : [ "healthy", "plan_attempt_log", "warnings" ],
        "type" : "object",
        "properties" : {
          "healthy" : {
            "type" : "boolean",
            "description" : "Either the plan ended successfully, or is not yet completed (and no errors have occurred)"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClusterPlanWarning"
            }
          },
          "attempt_end_time" : {
            "type" : "string",
            "description" : "If this plan completed or failed (ie is not pending), when the attempt ended (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "attemptEndTime"
          },
          "source" : {
            "$ref" : "#/components/schemas/ChangeSourceInfo"
          },
          "error" : {
            "$ref" : "#/components/schemas/ClusterPlanAttemptError"
          },
          "plan" : {
            "$ref" : "#/components/schemas/EnterpriseSearchPlan"
          },
          "plan_attempt_log" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClusterPlanStepInfo"
            },
            "x-ballerina-name" : "planAttemptLog"
          },
          "plan_end_time" : {
            "type" : "string",
            "description" : "If this plan is not current or pending, when the plan was no longer active (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "planEndTime"
          },
          "plan_attempt_id" : {
            "type" : "string",
            "description" : "A UUID for each plan attempt",
            "x-ballerina-name" : "planAttemptId"
          },
          "plan_attempt_name" : {
            "type" : "string",
            "description" : "A human readable name for each plan attempt, only populated when retrieving plan histories",
            "x-ballerina-name" : "planAttemptName"
          },
          "attempt_start_time" : {
            "type" : "string",
            "description" : "When this plan attempt (ie to apply the plan to the Enterprise Search) started (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "attemptStartTime"
          }
        },
        "description" : "Information about the Enterprise Search Server plan"
      },
      "AppSearchSettings" : {
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ClusterMetadataSettings"
          }
        },
        "description" : "The settings for the App Search"
      },
      "KibanaPayload" : {
        "required" : [ "elasticsearch_cluster_ref_id", "plan", "ref_id", "region" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "A locally-unique user-specified id for Kibana",
            "x-ballerina-name" : "refId"
          },
          "settings" : {
            "$ref" : "#/components/schemas/KibanaClusterSettings"
          },
          "elasticsearch_cluster_ref_id" : {
            "type" : "string",
            "description" : "Alias to the Elasticsearch Cluster to attach Kibana to",
            "x-ballerina-name" : "elasticsearchClusterRefId"
          },
          "display_name" : {
            "type" : "string",
            "description" : "The human readable name for the Kibana cluster (default: takes the name of its Elasticsearch cluster)",
            "x-ballerina-name" : "displayName"
          },
          "region" : {
            "type" : "string",
            "description" : "The region where this resource exists"
          },
          "plan" : {
            "$ref" : "#/components/schemas/KibanaClusterPlan"
          }
        },
        "description" : "A Kibana creation request paired with the alias of the Elasticsearch cluster it should be paired with"
      },
      "ApmPlanInfo" : {
        "required" : [ "healthy", "plan_attempt_log", "warnings" ],
        "type" : "object",
        "properties" : {
          "healthy" : {
            "type" : "boolean",
            "description" : "Either the plan ended successfully, or is not yet completed (and no errors have occurred)"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClusterPlanWarning"
            }
          },
          "attempt_end_time" : {
            "type" : "string",
            "description" : "If this plan completed or failed (ie is not pending), when the attempt ended (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "attemptEndTime"
          },
          "source" : {
            "$ref" : "#/components/schemas/ChangeSourceInfo"
          },
          "error" : {
            "$ref" : "#/components/schemas/ClusterPlanAttemptError"
          },
          "plan" : {
            "$ref" : "#/components/schemas/ApmPlan"
          },
          "plan_attempt_log" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClusterPlanStepInfo"
            },
            "x-ballerina-name" : "planAttemptLog"
          },
          "plan_end_time" : {
            "type" : "string",
            "description" : "If this plan is not current or pending, when the plan was no longer active (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "planEndTime"
          },
          "plan_attempt_id" : {
            "type" : "string",
            "description" : "A UUID for each plan attempt",
            "x-ballerina-name" : "planAttemptId"
          },
          "plan_attempt_name" : {
            "type" : "string",
            "description" : "A human readable name for each plan attempt, only populated when retrieving plan histories",
            "x-ballerina-name" : "planAttemptName"
          },
          "attempt_start_time" : {
            "type" : "string",
            "description" : "When this plan attempt (ie to apply the plan to the APM) started (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "attemptStartTime"
          }
        },
        "description" : "Information about the APM Server plan"
      },
      "MatchQuery" : {
        "required" : [ "query" ],
        "type" : "object",
        "properties" : {
          "analyzer" : {
            "type" : "string",
            "description" : "The analyzer that will be used to perform the analysis process on the text. Defaults to the analyzer that was used to index the field"
          },
          "query" : {
            "type" : "string",
            "description" : "The text/numeric/date to query for"
          },
          "minimum_should_match" : {
            "type" : "integer",
            "description" : "The minimum number of optional should clauses to match",
            "format" : "int32",
            "x-ballerina-name" : "minimumShouldMatch"
          },
          "operator" : {
            "type" : "string",
            "description" : "The operator flag can be set to or or and to control the boolean clauses (defaults to or)"
          }
        },
        "description" : "Consumes and analyzes text, numbers, and dates, then constructs a query"
      },
      "ClusterPlanStepInfo" : {
        "required" : [ "info_log", "stage", "started", "status", "step_id" ],
        "type" : "object",
        "properties" : {
          "info_log" : {
            "type" : "array",
            "description" : "Human readable summaries of the step, including messages for each stage of the step",
            "items" : {
              "$ref" : "#/components/schemas/ClusterPlanStepLogMessageInfo"
            },
            "x-ballerina-name" : "infoLog"
          },
          "stage" : {
            "type" : "string",
            "description" : "Current stage that the step is in",
            "enum" : [ "starting", "completed", "in_progress" ]
          },
          "duration_in_millis" : {
            "type" : "integer",
            "description" : "The duration of the step in MS",
            "format" : "int64",
            "x-ballerina-name" : "durationInMillis"
          },
          "started" : {
            "type" : "string",
            "description" : "When the step started (ISO format in UTC)",
            "format" : "date-time"
          },
          "completed" : {
            "type" : "string",
            "description" : "When the step completed (ISO format in UTC)",
            "format" : "date-time"
          },
          "step_id" : {
            "type" : "string",
            "description" : "ID of current step",
            "x-ballerina-name" : "stepId"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the step (success, warning, error - warning means something didn't go as expected but it was not serious enough to abort the plan)",
            "enum" : [ "success", "warning", "error", "pending" ]
          }
        },
        "description" : "Information about a step in a plan"
      },
      "DeploymentUpdateMetadata" : {
        "type" : "object",
        "properties" : {
          "tags" : {
            "type" : "array",
            "description" : "Arbitrary user-defined metadata associated with this deployment",
            "items" : {
              "$ref" : "#/components/schemas/MetadataItem"
            }
          }
        },
        "description" : "Additional information about the current deployment object"
      },
      "StackVersionInstanceCapacityConstraint" : {
        "required" : [ "max", "min" ],
        "type" : "object",
        "properties" : {
          "min" : {
            "type" : "integer",
            "description" : "Min capacity of the instances",
            "format" : "int32"
          },
          "max" : {
            "type" : "integer",
            "description" : "Max capacity of the instances",
            "format" : "int32"
          }
        },
        "description" : "The Elasticsearch instance, Kibana instance, APM Server capacity constraints for an Elastic Stack node type"
      },
      "StackVersionNodeType" : {
        "required" : [ "description", "name", "node_type" ],
        "type" : "object",
        "properties" : {
          "capacity_constraints" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StackVersionInstanceCapacityConstraint"
            } ],
            "x-ballerina-name" : "capacityConstraints"
          },
          "settings" : {
            "type" : "object",
            "properties" : { },
            "description" : "Settings that are applied to all nodes of this type"
          },
          "compatible_node_types" : {
            "type" : "array",
            "description" : "Node types that are compatible with this one",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "compatibleNodeTypes"
          },
          "node_type" : {
            "type" : "string",
            "description" : "Type of the node (master, data, ...)",
            "x-ballerina-name" : "nodeType"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the node type"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the node type"
          },
          "mandatory" : {
            "type" : "boolean",
            "description" : "Flag to specify a node type is mandatory in a cluster's plan"
          }
        },
        "description" : "The configuration for an Elastic Stack node type"
      },
      "ElasticsearchBlockingIssueElement" : {
        "required" : [ "description", "level" ],
        "type" : "object",
        "properties" : {
          "level" : {
            "type" : "string",
            "description" : "Applicable level for the block. Either global ie. cluster-wide or index level",
            "enum" : [ "index", "global" ]
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the block"
          }
        },
        "description" : "Information about index or cluster blocks"
      },
      "OrganizationIdpConfiguration" : {
        "required" : [ "enabled", "login_identifier_prefix", "saml_idp" ],
        "type" : "object",
        "properties" : {
          "saml_idp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SamlIdp"
            } ],
            "x-ballerina-name" : "samlIdp"
          },
          "login_identifier_prefix" : {
            "type" : "string",
            "description" : "The prefix of the login identifier that will be generated",
            "x-ballerina-name" : "loginIdentifierPrefix"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether or not the IdP is enabled"
          }
        },
        "description" : "The organization's IdP configuration"
      },
      "QueryContainer" : {
        "type" : "object",
        "properties" : {
          "bool" : {
            "$ref" : "#/components/schemas/BoolQuery"
          },
          "prefix" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PrefixQuery"
            }
          },
          "match" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MatchQuery"
            }
          },
          "match_none" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MatchNoneQuery"
            } ],
            "x-ballerina-name" : "matchNone"
          },
          "match_all" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MatchAllQuery"
            } ],
            "x-ballerina-name" : "matchAll"
          },
          "exists" : {
            "$ref" : "#/components/schemas/ExistsQuery"
          },
          "range" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/RangeQuery"
            }
          },
          "term" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/TermQuery"
            }
          },
          "nested" : {
            "$ref" : "#/components/schemas/NestedQuery"
          },
          "query_string" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/QueryStringQuery"
            } ],
            "x-ballerina-name" : "queryString"
          },
          "simple_query_string" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SimpleQueryStringQuery"
            } ],
            "x-ballerina-name" : "simpleQueryString"
          }
        },
        "description" : "The container for all of the allowed Elasticsearch queries. Specify only one property each time"
      },
      "OrganizationRoleAssignment" : {
        "required" : [ "organization_id", "role_id" ],
        "type" : "object",
        "properties" : {
          "role_id" : {
            "type" : "string",
            "description" : "The ID of the role that is assigned",
            "x-ballerina-name" : "roleId"
          },
          "organization_id" : {
            "type" : "string",
            "description" : "The ID of the organization the role is scoped to",
            "x-ballerina-name" : "organizationId"
          }
        },
        "description" : "Assignment for a role with organization scope"
      },
      "AppSearchTopologyElement" : {
        "type" : "object",
        "properties" : {
          "instance_configuration_id" : {
            "type" : "string",
            "description" : "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration",
            "x-ballerina-name" : "instanceConfigurationId"
          },
          "instance_configuration_version" : {
            "type" : "integer",
            "description" : "The version of the Instance Configuration Id. If it is unset, the meaning depends on read vs writes. For deployment reads, it is equivalent to version 0 (or the IC is unversioned); for deployment creates and deployment template use, it is equivalent to 'the latest version'; and for deployment updates, it is equivalent to 'retain the current version'",
            "format" : "int32",
            "x-ballerina-name" : "instanceConfigurationVersion"
          },
          "node_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppSearchNodeTypes"
            } ],
            "x-ballerina-name" : "nodeType"
          },
          "size" : {
            "$ref" : "#/components/schemas/TopologySize"
          },
          "zone_count" : {
            "type" : "integer",
            "description" : "number of zones in which nodes will be placed",
            "format" : "int32",
            "x-ballerina-name" : "zoneCount"
          },
          "appsearch" : {
            "$ref" : "#/components/schemas/AppSearchConfiguration"
          }
        },
        "description" : "Defines the topology of the AppSearch nodes (eg number/capacity of nodes, and where they can be allocated)"
      },
      "StackVersionTemplateFileHash" : {
        "required" : [ "hash", "path" ],
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "description" : "File path relative to template's root"
          },
          "hash" : {
            "type" : "string",
            "description" : "SHA-256 hash of a file"
          }
        },
        "description" : "The template file hash for an Elastic Stack version"
      },
      "OrphanedElasticsearch" : {
        "required" : [ "dependents", "id" ],
        "type" : "object",
        "properties" : {
          "dependents" : {
            "type" : "array",
            "description" : "List of orphaned dependent resources",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchDependant"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The id of the orphaned resource"
          }
        },
        "description" : "Details about an orphaned Elasticsearch resources"
      },
      "ElasticsearchMasterInfo" : {
        "required" : [ "healthy", "instances_with_no_master", "masters" ],
        "type" : "object",
        "properties" : {
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the master situation in the cluster is healthy (ie is the number of masters != 1), or do any instances have no master"
          },
          "masters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchMasterElement"
            }
          },
          "instances_with_no_master" : {
            "type" : "array",
            "description" : "A list of any instances with no master",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "instancesWithNoMaster"
          }
        },
        "description" : "Information about the master nodes in the Elasticsearch cluster"
      },
      "ElasticsearchUserPlugin" : {
        "required" : [ "elasticsearch_version", "name", "url" ],
        "type" : "object",
        "properties" : {
          "elasticsearch_version" : {
            "type" : "string",
            "description" : "The supported Elasticsearch version (must match the version in the plan)",
            "x-ballerina-name" : "elasticsearchVersion"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the plugin"
          },
          "url" : {
            "type" : "string",
            "description" : "The URL of the plugin (must be accessible from the ECE infrastructure)"
          }
        },
        "description" : "A list of admin-uploaded plugin objects"
      },
      "TransientEnterpriseSearchPlanConfiguration" : {
        "type" : "object",
        "properties" : {
          "plan_configuration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnterpriseSearchPlanControlConfiguration"
            } ],
            "x-ballerina-name" : "planConfiguration"
          },
          "strategy" : {
            "$ref" : "#/components/schemas/PlanStrategy"
          }
        },
        "description" : "Defines configuration parameters that control how the plan (i.e. consisting of the cluster topology and Enterprise Search settings) is applied"
      },
      "EnterpriseSearchInfo" : {
        "required" : [ "elasticsearch_cluster", "external_links", "healthy", "id", "name", "plan_info", "status", "topology" ],
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/EnterpriseSearchSettings"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ClusterMetadataInfo"
          },
          "topology" : {
            "$ref" : "#/components/schemas/ClusterTopologyInfo"
          },
          "plan_info" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EnterpriseSearchPlansInfo"
            } ],
            "x-ballerina-name" : "planInfo"
          },
          "elasticsearch_cluster" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TargetElasticsearchCluster"
            } ],
            "x-ballerina-name" : "elasticsearchCluster"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the Enterprise Search is healthy or not (one or more of the info subsections will have healthy: false)"
          },
          "external_links" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "External resources related to the Enterprise Search",
            "items" : {
              "$ref" : "#/components/schemas/ExternalHyperlink"
            },
            "x-ballerina-name" : "externalLinks"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Enterprise Search"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Hyperlink"
            },
            "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
          },
          "id" : {
            "type" : "string",
            "description" : "The id of the Enterprise Search"
          },
          "deployment_id" : {
            "type" : "string",
            "description" : "The id of the deployment that this Enterprise Search belongs to",
            "x-ballerina-name" : "deploymentId"
          },
          "region" : {
            "type" : "string",
            "description" : "The region that this Enterprise Search belongs to. Only populated in SaaS or federated ECE"
          },
          "status" : {
            "type" : "string",
            "description" : "Enterprise Search status",
            "enum" : [ "initializing", "stopping", "stopped", "rebooting", "restarting", "reconfiguring", "started" ]
          }
        },
        "description" : "The overview information for the Enterprise Search Server"
      },
      "DeploymentSearchResponse" : {
        "required" : [ "healthy", "id", "name", "resources" ],
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/DeploymentSettings"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/DeploymentMetadata"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the deployment is overall healthy or not (one or more of the resource info subsections will have healthy: false)"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of this deployment"
          },
          "alias" : {
            "type" : "string",
            "description" : "A user-defined deployment alias for user-friendly resource URLs"
          },
          "resources" : {
            "$ref" : "#/components/schemas/DeploymentResources"
          },
          "id" : {
            "type" : "string",
            "description" : "A randomly-generated id of this Deployment"
          }
        },
        "description" : "Describes a searched Deployment"
      },
      "IntegrationsServerSystemSettings" : {
        "type" : "object",
        "properties" : {
          "elasticsearch_password" : {
            "type" : "string",
            "description" : "Optionally override the account within Integrations Server - defaults to a system account that always exists (if specified, the username must also be specified). Note that this field is never returned from the API, it is write only",
            "x-ballerina-name" : "elasticsearchPassword"
          },
          "elasticsearch_username" : {
            "type" : "string",
            "description" : "Optionally override the account within Integrations Server - defaults to a system account that always exists (if specified, the password must also be specified). Note that this field is never returned from the API, it is write only",
            "x-ballerina-name" : "elasticsearchUsername"
          },
          "debug_enabled" : {
            "type" : "boolean",
            "description" : "Optionally enable debug mode for Integrations Server - defaults false",
            "x-ballerina-name" : "debugEnabled"
          },
          "secret_token" : {
            "type" : "string",
            "description" : "Optionally override the secret token within Integrations Server - defaults to the previously existing secretToken",
            "x-ballerina-name" : "secretToken"
          }
        },
        "description" : "A structure that defines a curated subset of the Integrations Server settings. \nTIP: To define the complete set of Integrations Server setting, use `IntegrationsSystemSettings` with `user_settings_override_` and `user_settings_`"
      },
      "AppSearchSystemSettings" : {
        "type" : "object",
        "properties" : {
          "elasticsearch_url" : {
            "type" : "string",
            "description" : "Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)",
            "x-ballerina-name" : "elasticsearchUrl"
          },
          "secret_session_key" : {
            "type" : "string",
            "description" : "Optionally override the secret session key within App Search - defaults to the previously existing secretSession. Note that this field is never returned from the API, it is write only",
            "x-ballerina-name" : "secretSessionKey"
          },
          "elasticsearch_password" : {
            "type" : "string",
            "description" : "Optionally override the account within App Search - defaults to a system account that always exists (if specified, the username must also be specified). Note that this field is never returned from the API, it is write only",
            "x-ballerina-name" : "elasticsearchPassword"
          },
          "elasticsearch_username" : {
            "type" : "string",
            "description" : "Optionally override the account within App Search - defaults to a system account that always exists (if specified, the password must also be specified). Note that this field is never returned from the API, it is write only",
            "x-ballerina-name" : "elasticsearchUsername"
          }
        },
        "description" : "This structure defines a curated subset of the AppSearch settings. (This field together with 'user_settings_override*' and  'user_settings*' defines the total set of AppSearch settings)"
      },
      "TransientAppSearchPlanConfiguration" : {
        "type" : "object",
        "properties" : {
          "plan_configuration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppSearchPlanControlConfiguration"
            } ],
            "x-ballerina-name" : "planConfiguration"
          },
          "strategy" : {
            "$ref" : "#/components/schemas/PlanStrategy"
          }
        },
        "description" : "Defines configuration parameters that control how the plan (ie consisting of the cluster topology and AppSearch settings) is applied"
      },
      "CostsOverview" : {
        "required" : [ "costs", "hourly_rate", "trials" ],
        "type" : "object",
        "properties" : {
          "costs" : {
            "$ref" : "#/components/schemas/Costs"
          },
          "trials" : {
            "type" : "number",
            "description" : "Trial costs for the organization",
            "format" : "double"
          },
          "balance" : {
            "$ref" : "#/components/schemas/Balance"
          },
          "hourly_rate" : {
            "type" : "number",
            "description" : "Hourly rate applied",
            "format" : "double",
            "x-ballerina-name" : "hourlyRate"
          }
        },
        "description" : "The top level costs overview for an organization. All of the costs, credits, trials are expressed in Elastic Consumption Unit (ECU)"
      },
      "OrganizationInvitations" : {
        "required" : [ "invitations" ],
        "type" : "object",
        "properties" : {
          "invitations" : {
            "type" : "array",
            "description" : "The list of organization invitations",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationInvitation"
            }
          }
        },
        "description" : "A collection of invitations to an organization"
      },
      "CertificateAuthority" : {
        "required" : [ "public_certificates", "recommended_trust_restriction" ],
        "type" : "object",
        "properties" : {
          "public_certificates" : {
            "type" : "array",
            "description" : "The certificates used by this certificate authority. The active certificate is the one that has been used to sign the current certificates of the Elasticsearch instances. All others are either certificates used in the past or certificates that will be used in the future when the currently active certificate expires",
            "items" : {
              "$ref" : "#/components/schemas/PublicCertificate"
            },
            "x-ballerina-name" : "publicCertificates"
          },
          "recommended_trust_restriction" : {
            "type" : "string",
            "description" : "The trust restriction expression to use that would provide trust with the Elasticsearch nodes of this deployment",
            "x-ballerina-name" : "recommendedTrustRestriction"
          }
        },
        "description" : "The certificate authority used to sign the certificates of this deployment"
      },
      "AccountUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "trust" : {
            "$ref" : "#/components/schemas/AccountTrustSettings"
          }
        },
        "description" : "A request to update an account"
      },
      "AllocatorMoveRequest" : {
        "required" : [ "from" ],
        "type" : "object",
        "properties" : {
          "allocator_down" : {
            "type" : "boolean",
            "description" : "Tells the infrastructure that all instances on the allocator should be considered as permanently down when deciding how to migrate data to new nodes. If left blank then the system will auto-decide (currently: will treat the allocator as up)",
            "x-ballerina-name" : "allocatorDown"
          },
          "from" : {
            "type" : "string",
            "description" : "The allocator id off which all instances in the cluster should be moved"
          },
          "to" : {
            "type" : "array",
            "description" : "An optional list of allocator ids to which the instance(s) should be moved. If not specified then any available allocator can be used (including the current one if it is healthy)",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "As part of the upgrade plan, identifies the move requests for the Kibana instances or APM Servers on the allocators"
      },
      "ProjectRoleAssignment" : {
        "required" : [ "organization_id", "role_id" ],
        "type" : "object",
        "properties" : {
          "all" : {
            "type" : "boolean",
            "description" : "When true, the role applies to all projects in the organization, otherwise the role is scoped to the projects specified in `project_ids`"
          },
          "role_id" : {
            "type" : "string",
            "description" : "The ID of the role that is assigned",
            "x-ballerina-name" : "roleId"
          },
          "organization_id" : {
            "type" : "string",
            "description" : "The ID of the organization the role is scoped to",
            "x-ballerina-name" : "organizationId"
          },
          "application_roles" : {
            "type" : "array",
            "description" : "If provided, the user assigned this role assignment will be granted this application role when signing in to the project(s) specified in the role assignment",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "applicationRoles"
          },
          "project_ids" : {
            "type" : "array",
            "description" : "The IDs of the projects the role is scoped to. Must be absent if `all` is true, and present if `all` is false",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "projectIds"
          }
        },
        "description" : "Assignment for a role with project scope"
      },
      "Kibana" : {
        "required" : [ "backend_plan", "display_name", "elasticsearch_cluster_ref_id", "ref_id" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "A locally-unique user-specified id",
            "x-ballerina-name" : "refId"
          },
          "elasticsearch_cluster_ref_id" : {
            "type" : "string",
            "description" : "The user-specified id of the Elasticsearch Cluster that this will link to",
            "x-ballerina-name" : "elasticsearchClusterRefId"
          },
          "backend_plan" : {
            "type" : "object",
            "properties" : { },
            "description" : "The backend plan as JSON",
            "x-ballerina-name" : "backendPlan"
          },
          "display_name" : {
            "type" : "string",
            "description" : "The human readable name (defaults to the generated cluster id if not specified)",
            "x-ballerina-name" : "displayName"
          }
        },
        "description" : "Holds diagnostics for a Kibana resource"
      },
      "Organization" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "sso_login_identifier" : {
            "type" : "string",
            "description" : "The login identifier for initiating SSO",
            "x-ballerina-name" : "ssoLoginIdentifier"
          },
          "default_disk_usage_alerts_enabled" : {
            "type" : "boolean",
            "description" : "Whether the default disk alerts are enabled",
            "x-ballerina-name" : "defaultDiskUsageAlertsEnabled"
          },
          "name" : {
            "type" : "string",
            "description" : "The organization's friendly name"
          },
          "notifications_allowed_email_domains" : {
            "type" : "array",
            "description" : "The list of allowed domains for notification-email recipients",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "notificationsAllowedEmailDomains"
          },
          "billing_contacts" : {
            "type" : "array",
            "description" : "The list of contacts for billing notifications, if specified",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "billingContacts"
          },
          "id" : {
            "type" : "string",
            "description" : "The organization's identifier"
          },
          "operational_contacts" : {
            "type" : "array",
            "description" : "The list of contacts for operational notifications, if specified",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "operationalContacts"
          }
        },
        "description" : "An organization"
      },
      "ClusterCurationSpec" : {
        "required" : [ "index_pattern", "trigger_interval_seconds" ],
        "type" : "object",
        "properties" : {
          "trigger_interval_seconds" : {
            "type" : "integer",
            "description" : "Number of seconds after index creation to trigger this spec",
            "format" : "int32",
            "x-ballerina-name" : "triggerIntervalSeconds"
          },
          "index_pattern" : {
            "type" : "string",
            "description" : "Index matching pattern",
            "x-ballerina-name" : "indexPattern"
          }
        },
        "description" : "Specifies the conditions to trigger an Elasticsearch cluster curation"
      },
      "IntegrationsServer" : {
        "required" : [ "backend_plan", "display_name", "elasticsearch_cluster_ref_id", "ref_id" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "A locally-unique user-specified id",
            "x-ballerina-name" : "refId"
          },
          "elasticsearch_cluster_ref_id" : {
            "type" : "string",
            "description" : "The user-specified id of the Elasticsearch Cluster that this will link to",
            "x-ballerina-name" : "elasticsearchClusterRefId"
          },
          "backend_plan" : {
            "type" : "object",
            "properties" : { },
            "description" : "The backend plan as JSON",
            "x-ballerina-name" : "backendPlan"
          },
          "display_name" : {
            "type" : "string",
            "description" : "The human readable name (defaults to the generated cluster id if not specified)",
            "x-ballerina-name" : "displayName"
          }
        },
        "description" : "Holds diagnostics for an Integrations Server resource"
      },
      "IndexPattern" : {
        "required" : [ "index_pattern", "policy_name" ],
        "type" : "object",
        "properties" : {
          "node_attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Defines the Elasticsearch node attributes for the warm element of the topology",
            "x-ballerina-name" : "nodeAttributes"
          },
          "policy_name" : {
            "type" : "string",
            "description" : "Name of the policy to create",
            "x-ballerina-name" : "policyName"
          },
          "index_pattern" : {
            "type" : "string",
            "description" : "Index pattern to which the ILM policy will be applied",
            "x-ballerina-name" : "indexPattern"
          }
        },
        "description" : "An index pattern described indicating how it has to be migrated to ILM"
      },
      "VerificationCodeRequest" : {
        "required" : [ "domain_claim_request" ],
        "type" : "object",
        "properties" : {
          "domain_claim_request" : {
            "type" : "string",
            "description" : "The domain claim request",
            "x-ballerina-name" : "domainClaimRequest"
          }
        }
      },
      "ElasticsearchSystemSettings" : {
        "type" : "object",
        "properties" : {
          "scripting" : {
            "$ref" : "#/components/schemas/ElasticsearchScriptingUserSettings"
          },
          "enable_close_index" : {
            "type" : "boolean",
            "description" : "Defaults to false on versions <= 7.2.0, true otherwise. If false, then the API commands to close indices are disabled. This is important because Elasticsearch does not snapshot or migrate close indices on versions under 7.2.0, therefore standard Elastic Cloud configuration operations will cause irretrievable loss of indices' data. NOTES: (Corresponds to the parameter 'cluster.indices.close.enable')",
            "x-ballerina-name" : "enableCloseIndex"
          },
          "reindex_whitelist" : {
            "type" : "array",
            "description" : "Limits remote Elasticsearch clusters that can be used as the source for '_reindex' API commands",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "reindexWhitelist"
          },
          "watcher_trigger_engine" : {
            "type" : "string",
            "description" : "The trigger engine for Watcher, defaults to 'scheduler' - see the xpack documentation for more information. NOTES: (Corresponds to the parameter '(xpack.)watcher.trigger.schedule.engine', depending on version. Ignored from 6.x onwards.)",
            "x-ballerina-name" : "watcherTriggerEngine"
          },
          "auto_create_index" : {
            "type" : "boolean",
            "description" : "If true (the default), then any write operation on an index that does not currently exist will create it. NOTES: (Corresponds to the parameter 'action.auto_create_index')",
            "x-ballerina-name" : "autoCreateIndex"
          },
          "monitoring_collection_interval" : {
            "type" : "integer",
            "description" : "The default interval at which monitoring information from the cluster if collected, if monitoring is enabled. NOTES: (Corresponds to the parameter 'marvel.agent.interval' in 2.x and 'xpack.monitoring.collection.interval' in 5.x)",
            "format" : "int32",
            "x-ballerina-name" : "monitoringCollectionInterval"
          },
          "default_shards_per_index" : {
            "type" : "integer",
            "description" : "(2.x only - to get the same result in 5.x template mappings must be used) Sets the default number of shards per index, defaulting to 1 if not specified. (Corresponds to the parameter 'index.number_of_shards' in 2.x, not supported in 5.x)",
            "format" : "int32",
            "x-ballerina-name" : "defaultShardsPerIndex"
          },
          "monitoring_history_duration" : {
            "type" : "string",
            "description" : "The duration for which monitoring history is stored (format '(NUMBER)d' eg '3d' for 3 days). NOTES: ('Corresponds to the parameter xpack.monitoring.history.duration' in 5.x, defaults to '7d')",
            "x-ballerina-name" : "monitoringHistoryDuration"
          },
          "destructive_requires_name" : {
            "type" : "boolean",
            "description" : "If true (default is false) then the index deletion API will not support wildcards or '_all'. NOTES: (Corresponds to the parameter 'action.destructive_requires_name')",
            "x-ballerina-name" : "destructiveRequiresName"
          }
        },
        "description" : "A subset of Elasticsearch settings. TIP: To define the complete set of Elasticsearch settings, use `ElasticsearchSystemSettings` with `user_settings_override*` and `user_settings*`"
      },
      "BasicFailedReplyElement" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "A structured code representing the error type that occurred"
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error that occurred"
          },
          "fields" : {
            "type" : "array",
            "description" : "If the error can be tied to a specific field or fields in the user request, this lists those fields",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Orphaned" : {
        "required" : [ "apm", "appsearch", "elasticsearch", "enterprise_search", "integrations_server", "kibana" ],
        "type" : "object",
        "properties" : {
          "enterprise_search" : {
            "type" : "array",
            "description" : "List of orphaned Enterprise Search resource ids",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "enterpriseSearch"
          },
          "elasticsearch" : {
            "type" : "array",
            "description" : "List of orphaned Elasticsearch resources",
            "items" : {
              "$ref" : "#/components/schemas/OrphanedElasticsearch"
            }
          },
          "kibana" : {
            "type" : "array",
            "description" : "List of orphaned Kibana resource ids",
            "items" : {
              "type" : "string"
            }
          },
          "apm" : {
            "type" : "array",
            "description" : "List of orphaned APM resource ids",
            "items" : {
              "type" : "string"
            }
          },
          "appsearch" : {
            "type" : "array",
            "description" : "List of orphaned AppSearch resource ids",
            "items" : {
              "type" : "string"
            }
          },
          "integrations_server" : {
            "type" : "array",
            "description" : "List of orphaned Integrations Server resource ids",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "integrationsServer"
          }
        },
        "description" : "Details about orphaned resources"
      },
      "IdpConfigurationRequest" : {
        "required" : [ "enabled", "login_identifier_prefix", "saml_idp" ],
        "type" : "object",
        "properties" : {
          "saml_idp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SamlIdp"
            } ],
            "x-ballerina-name" : "samlIdp"
          },
          "login_identifier_prefix" : {
            "type" : "string",
            "description" : "The prefix of the login identifier that will be generated",
            "x-ballerina-name" : "loginIdentifierPrefix"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether or not the IdP is enabled"
          }
        },
        "description" : "A request to setup an organization IdP"
      },
      "KibanaSystemSettings" : {
        "type" : "object",
        "properties" : {
          "elasticsearch_password" : {
            "type" : "string",
            "description" : "Optionally override the account within Elasticsearch - defaults to a system account that always exists (if specified, the username must also be specified). Note that this field is never returned from the API, it is write only",
            "x-ballerina-name" : "elasticsearchPassword"
          },
          "elasticsearch_username" : {
            "type" : "string",
            "description" : "Optionally override the account within Elasticsearch - defaults to a system account that always exists (if specified, the password must also be specified). Note that this field is never returned from the API, it is write only",
            "x-ballerina-name" : "elasticsearchUsername"
          }
        },
        "description" : "A subset of Kibana settings. TIP: To define the complete set of Elasticsearch settings, use `KibanaSystemSettings` with `user_settings_override_` and `user_settings_`"
      },
      "PlatformRoleAssignment" : {
        "required" : [ "role_id" ],
        "type" : "object",
        "properties" : {
          "role_id" : {
            "type" : "string",
            "description" : "The ID of the role that is assigned",
            "x-ballerina-name" : "roleId"
          }
        },
        "description" : "Assignment for a role with platform scope"
      },
      "StackVersionConfigs" : {
        "required" : [ "stacks" ],
        "type" : "object",
        "properties" : {
          "stacks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StackVersionConfig"
            }
          }
        },
        "description" : "The details for multiple Elastic Stack configurations"
      },
      "ClusterInstanceDiskInfo" : {
        "required" : [ "disk_space_used", "storage_multiplier" ],
        "type" : "object",
        "properties" : {
          "disk_space_used" : {
            "type" : "integer",
            "description" : "The amount of disk space being used by the service in MB",
            "format" : "int64",
            "x-ballerina-name" : "diskSpaceUsed"
          },
          "storage_multiplier" : {
            "type" : "number",
            "description" : "The storage multiplier originally defined to calculate disk space",
            "format" : "double",
            "x-ballerina-name" : "storageMultiplier"
          },
          "disk_space_available" : {
            "type" : "integer",
            "description" : "If known, the amount of total disk space available to the container in MB",
            "format" : "int64",
            "x-ballerina-name" : "diskSpaceAvailable"
          }
        },
        "description" : "Information about the use and storage capacity of a Kibana instance or APM Server"
      },
      "ElasticsearchClusterUser" : {
        "required" : [ "password_hash", "username" ],
        "type" : "object",
        "properties" : {
          "password_hash" : {
            "type" : "string",
            "description" : "The hashed password",
            "x-ballerina-name" : "passwordHash"
          },
          "username" : {
            "type" : "string",
            "description" : "The username"
          }
        },
        "description" : "The information about an Elasticsearch cluster user"
      },
      "IntegrationsServerTopologyElement" : {
        "type" : "object",
        "properties" : {
          "instance_configuration_id" : {
            "type" : "string",
            "description" : "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration",
            "x-ballerina-name" : "instanceConfigurationId"
          },
          "instance_configuration_version" : {
            "type" : "integer",
            "description" : "The version of the Instance Configuration Id. If it is unset, the meaning depends on read vs writes. For deployment reads, it is equivalent to version 0 (or the IC is unversioned); for deployment creates and deployment template use, it is equivalent to 'the latest version'; and for deployment updates, it is equivalent to 'retain the current version'",
            "format" : "int32",
            "x-ballerina-name" : "instanceConfigurationVersion"
          },
          "size" : {
            "$ref" : "#/components/schemas/TopologySize"
          },
          "zone_count" : {
            "type" : "integer",
            "description" : "number of zones in which nodes will be placed",
            "format" : "int32",
            "x-ballerina-name" : "zoneCount"
          },
          "integrations_server" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IntegrationsServerConfiguration"
            } ],
            "x-ballerina-name" : "integrationsServer"
          }
        },
        "description" : "Defines the topology of the Integrations Server nodes. For example, the number or capacity of the nodes, and where you can allocate the nodes"
      },
      "RemoteResourceRef" : {
        "required" : [ "alias", "deployment_id", "elasticsearch_ref_id" ],
        "type" : "object",
        "properties" : {
          "skip_unavailable" : {
            "type" : "boolean",
            "description" : "If true, skip this cluster during search if it is disconnected. Default: false",
            "x-ballerina-name" : "skipUnavailable"
          },
          "alias" : {
            "type" : "string",
            "description" : "The alias for this remote cluster. Aliases must only contain letters, digits, dashes and underscores"
          },
          "elasticsearch_ref_id" : {
            "type" : "string",
            "description" : "The locally-unique user-specified id of an Elasticsearch Resource",
            "x-ballerina-name" : "elasticsearchRefId"
          },
          "deployment_id" : {
            "type" : "string",
            "description" : "The id of the deployment",
            "x-ballerina-name" : "deploymentId"
          },
          "info" : {
            "$ref" : "#/components/schemas/RemoteResourceInfo"
          }
        },
        "description" : "The Elasticsearch resource used as a Remote Cluster"
      },
      "OrganizationRequest" : {
        "type" : "object",
        "properties" : {
          "default_disk_usage_alerts_enabled" : {
            "type" : "boolean",
            "description" : "Whether the default disk alerts are enabled",
            "x-ballerina-name" : "defaultDiskUsageAlertsEnabled"
          },
          "name" : {
            "type" : "string",
            "description" : "The organization's friendly name"
          },
          "notifications_allowed_email_domains" : {
            "type" : "array",
            "description" : "The list of allowed domains for notification-email recipients",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "notificationsAllowedEmailDomains"
          },
          "billing_contacts" : {
            "type" : "array",
            "description" : "The list of contacts for billing notifications",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "billingContacts"
          },
          "operational_contacts" : {
            "type" : "array",
            "description" : "The list of contacts for operational notifications",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "operationalContacts"
          }
        },
        "description" : "A request to create or update an organization"
      },
      "SnapshotStatusInfo" : {
        "required" : [ "count", "healthy", "recent_success" ],
        "type" : "object",
        "properties" : {
          "healthy" : {
            "type" : "boolean",
            "description" : "Health status of snapshots for this cluster"
          },
          "latest_successful_end_time" : {
            "type" : "string",
            "description" : "The end time of the most recently successful snapshot",
            "format" : "date-time",
            "x-ballerina-name" : "latestSuccessfulEndTime"
          },
          "recent_success" : {
            "type" : "boolean",
            "description" : "Indicates whether the cluster has a relatively recent successful snapshot",
            "x-ballerina-name" : "recentSuccess"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of snapshots stored for this cluster",
            "format" : "int32"
          },
          "latest_successful" : {
            "type" : "boolean",
            "description" : "Latest snapshot status",
            "x-ballerina-name" : "latestSuccessful"
          },
          "latest_end_time" : {
            "type" : "string",
            "description" : "The end time of the most recently attempted snapshot",
            "format" : "date-time",
            "x-ballerina-name" : "latestEndTime"
          },
          "scheduled_time" : {
            "type" : "string",
            "description" : "Scheduled time of next snapshot attempt",
            "format" : "date-time",
            "x-ballerina-name" : "scheduledTime"
          },
          "latest_status" : {
            "type" : "string",
            "description" : "Status of the latest snapshot attempt, if any exist",
            "x-ballerina-name" : "latestStatus"
          }
        },
        "description" : "Information about the snapshot status for the Elasticsearch cluster. For example, the health status"
      },
      "ReadOnlyRequest" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "Enabled or disabled read-only mode"
          }
        },
        "description" : "Read-only mode request payload"
      },
      "ClusterMetadataPortInfo" : {
        "required" : [ "http", "https", "transport_passthrough" ],
        "type" : "object",
        "properties" : {
          "transport_passthrough" : {
            "type" : "integer",
            "description" : "Port where the cluster listens for transport traffic using TLS",
            "format" : "int32",
            "x-ballerina-name" : "transportPassthrough"
          },
          "http" : {
            "type" : "integer",
            "description" : "Port where the cluster listens for HTTP traffic",
            "format" : "int32"
          },
          "https" : {
            "type" : "integer",
            "description" : "Port where the cluster listens for HTTPS traffic",
            "format" : "int32"
          }
        },
        "description" : "Information about the ports that allow communication between the Elasticsearch cluster and various protocols"
      },
      "DeploymentRestoreResponse" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of the deployment"
          }
        },
        "description" : "A response returned from the Deployment restore endpoint"
      },
      "IntegrationsServerPayload" : {
        "required" : [ "elasticsearch_cluster_ref_id", "plan", "ref_id", "region" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "A locally-unique user-specified id for the Integrations Server",
            "x-ballerina-name" : "refId"
          },
          "settings" : {
            "$ref" : "#/components/schemas/IntegrationsServerSettings"
          },
          "elasticsearch_cluster_ref_id" : {
            "type" : "string",
            "description" : "Alias to the Elasticsearch Cluster to attach the Integrations Server to",
            "x-ballerina-name" : "elasticsearchClusterRefId"
          },
          "display_name" : {
            "type" : "string",
            "description" : "The human readable name for the Integrations Server cluster (default: takes the name of its Elasticsearch cluster)",
            "x-ballerina-name" : "displayName"
          },
          "region" : {
            "type" : "string",
            "description" : "The region where this resource exists"
          },
          "plan" : {
            "$ref" : "#/components/schemas/IntegrationsServerPlan"
          }
        },
        "description" : "An Integrations Server creation request paired with the alias of the Elasticsearch cluster it should be paired with"
      },
      "TopologyElementControl" : {
        "required" : [ "min" ],
        "type" : "object",
        "properties" : {
          "min" : {
            "$ref" : "#/components/schemas/TopologySize"
          }
        },
        "description" : "Controls for the topology element. Only used as part of the deployment template. Ignored if included as part of a deployment"
      },
      "DtsQuantity" : {
        "required" : [ "formatted_value", "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "integer",
            "description" : "Raw quantity",
            "format" : "int64"
          },
          "formatted_value" : {
            "type" : "string",
            "description" : "Quantity in human readable format",
            "x-ballerina-name" : "formattedValue"
          }
        },
        "description" : "DTS quantity"
      },
      "RemoteResourceInfo" : {
        "required" : [ "compatible", "connected", "healthy", "trusted", "trusted_back" ],
        "type" : "object",
        "properties" : {
          "connected" : {
            "type" : "boolean",
            "description" : "Whether or not there is at least one connection to the remote cluster"
          },
          "compatible" : {
            "type" : "boolean",
            "description" : "Whether or not the remote cluster version is compatible with this cluster version"
          },
          "trusted" : {
            "type" : "boolean",
            "description" : "Whether or not the remote cluster is trusted by this cluster"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether or not the remote cluster is healthy"
          },
          "trusted_back" : {
            "type" : "boolean",
            "description" : "Whether or not the remote cluster trusts this cluster back",
            "x-ballerina-name" : "trustedBack"
          }
        },
        "description" : "Information about a Remote Cluster"
      },
      "Dimension" : {
        "required" : [ "cost", "type" ],
        "type" : "object",
        "properties" : {
          "cost" : {
            "type" : "number",
            "description" : "The cost of the billing dimension",
            "format" : "double"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the billing dimension",
            "enum" : [ "capacity", "data_in", "data_internode", "data_out", "storage_api", "storage_bytes" ]
          }
        },
        "description" : "Billing dimension"
      },
      "ElasticsearchClusterPlanInfo" : {
        "required" : [ "healthy", "plan_attempt_log", "warnings" ],
        "type" : "object",
        "properties" : {
          "healthy" : {
            "type" : "boolean",
            "description" : "Either the plan ended successfully, or is not yet completed (and no errors have occurred)"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClusterPlanWarning"
            }
          },
          "attempt_end_time" : {
            "type" : "string",
            "description" : "If this plan completed or failed (ie is not pending), when the attempt ended (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "attemptEndTime"
          },
          "source" : {
            "$ref" : "#/components/schemas/ChangeSourceInfo"
          },
          "error" : {
            "$ref" : "#/components/schemas/ClusterPlanAttemptError"
          },
          "plan" : {
            "$ref" : "#/components/schemas/ElasticsearchClusterPlan"
          },
          "plan_attempt_log" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClusterPlanStepInfo"
            },
            "x-ballerina-name" : "planAttemptLog"
          },
          "plan_end_time" : {
            "type" : "string",
            "description" : "If this plan is not current or pending, when the plan was no longer active (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "planEndTime"
          },
          "plan_attempt_id" : {
            "type" : "string",
            "description" : "A UUID for each plan attempt",
            "x-ballerina-name" : "planAttemptId"
          },
          "plan_attempt_name" : {
            "type" : "string",
            "description" : "A human readable name for each plan attempt, only populated when retrieving plan histories",
            "x-ballerina-name" : "planAttemptName"
          },
          "attempt_start_time" : {
            "type" : "string",
            "description" : "When this plan attempt (ie to apply the plan to the cluster) started (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "attemptStartTime"
          }
        },
        "description" : "Information about the Elasticsearch cluster plan"
      },
      "KibanaClusterInfo" : {
        "required" : [ "cluster_id", "cluster_name", "elasticsearch_cluster", "external_links", "healthy", "metadata", "plan_info", "status", "topology" ],
        "type" : "object",
        "properties" : {
          "cluster_name" : {
            "type" : "string",
            "description" : "The name of the cluster",
            "x-ballerina-name" : "clusterName"
          },
          "settings" : {
            "$ref" : "#/components/schemas/KibanaClusterSettings"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ClusterMetadataInfo"
          },
          "topology" : {
            "$ref" : "#/components/schemas/ClusterTopologyInfo"
          },
          "plan_info" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/KibanaClusterPlansInfo"
            } ],
            "x-ballerina-name" : "planInfo"
          },
          "elasticsearch_cluster" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TargetElasticsearchCluster"
            } ],
            "x-ballerina-name" : "elasticsearchCluster"
          },
          "cluster_id" : {
            "type" : "string",
            "description" : "The id of the cluster",
            "x-ballerina-name" : "clusterId"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the cluster is healthy or not (one or more of the info subsections will have healthy: false)"
          },
          "external_links" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "External resources related to the cluster",
            "items" : {
              "$ref" : "#/components/schemas/ExternalHyperlink"
            },
            "x-ballerina-name" : "externalLinks"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Hyperlink"
            },
            "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
          },
          "deployment_id" : {
            "type" : "string",
            "description" : "The id of the deployment to which this Kibana Server belongs to",
            "x-ballerina-name" : "deploymentId"
          },
          "region" : {
            "type" : "string",
            "description" : "The region that this cluster belongs to. Only populated in SaaS or federated ECE"
          },
          "status" : {
            "type" : "string",
            "description" : "Cluster status",
            "enum" : [ "initializing", "stopping", "stopped", "rebooting", "restarting", "reconfiguring", "started" ]
          }
        },
        "description" : "The top-level object information for a Kibana instance"
      },
      "TrafficFilterClaimedLinkIds" : {
        "required" : [ "claimed_link_ids" ],
        "type" : "object",
        "properties" : {
          "claimed_link_ids" : {
            "type" : "array",
            "description" : "List of traffic filter claimed link id",
            "items" : {
              "$ref" : "#/components/schemas/TrafficFilterClaimedLinkIdInfo"
            },
            "x-ballerina-name" : "claimedLinkIds"
          }
        },
        "description" : "The container for a set of traffic filter claimed link id"
      },
      "EnterpriseSearchResourceInfo" : {
        "required" : [ "elasticsearch_cluster_ref_id", "id", "info", "ref_id", "region" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "The locally-unique user-specified id of a Resource",
            "x-ballerina-name" : "refId"
          },
          "elasticsearch_cluster_ref_id" : {
            "type" : "string",
            "description" : "The Elasticsearch cluster that this resource depends on",
            "x-ballerina-name" : "elasticsearchClusterRefId"
          },
          "id" : {
            "type" : "string",
            "description" : "The randomly-generated id of a Resource"
          },
          "region" : {
            "type" : "string",
            "description" : "The region where this resource exists"
          },
          "info" : {
            "$ref" : "#/components/schemas/EnterpriseSearchInfo"
          }
        },
        "description" : "Describes an Enterprise Search resource belonging to a Deployment"
      },
      "DiscreteSizes" : {
        "required" : [ "sizes" ],
        "type" : "object",
        "properties" : {
          "default_size" : {
            "type" : "integer",
            "description" : "The default size",
            "format" : "int32",
            "x-ballerina-name" : "defaultSize"
          },
          "sizes" : {
            "type" : "array",
            "description" : "List of supported sizes",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "resource" : {
            "type" : "string",
            "description" : "The unit that each size represents. If not specified, it will default to 'memory'",
            "enum" : [ "memory", "storage" ]
          }
        },
        "description" : "Instance sizes that are supported by the Elasticsearch instance, Kibana instance, or APM Server configuration"
      },
      "KibanaClusterTopologyElement" : {
        "type" : "object",
        "properties" : {
          "instance_configuration_id" : {
            "type" : "string",
            "description" : "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration",
            "x-ballerina-name" : "instanceConfigurationId"
          },
          "instance_configuration_version" : {
            "type" : "integer",
            "description" : "The version of the Instance Configuration Id. If it is unset, the meaning depends on read vs writes. For deployment reads, it is equivalent to version 0 (or the IC is unversioned); for deployment creates and deployment template use, it is equivalent to 'the latest version'; and for deployment updates, it is equivalent to 'retain the current version'",
            "format" : "int32",
            "x-ballerina-name" : "instanceConfigurationVersion"
          },
          "size" : {
            "$ref" : "#/components/schemas/TopologySize"
          },
          "zone_count" : {
            "type" : "integer",
            "description" : "number of zones in which nodes will be placed",
            "format" : "int32",
            "x-ballerina-name" : "zoneCount"
          },
          "kibana" : {
            "$ref" : "#/components/schemas/KibanaConfiguration"
          }
        },
        "description" : "The topology of the Kibana nodes, including the number, capacity, and type of nodes, and where they can be allocated"
      },
      "ItemsCosts" : {
        "required" : [ "costs", "data_transfer_and_storage", "resources" ],
        "type" : "object",
        "properties" : {
          "costs" : {
            "$ref" : "#/components/schemas/Costs"
          },
          "data_transfer_and_storage" : {
            "type" : "array",
            "description" : "List of the detailed costs associated to the Data Transfer and Storage (DTS) dimensions",
            "items" : {
              "$ref" : "#/components/schemas/DtsDimensionCosts"
            },
            "x-ballerina-name" : "dataTransferAndStorage"
          },
          "resources" : {
            "type" : "array",
            "description" : "Costs of the list of resources",
            "items" : {
              "$ref" : "#/components/schemas/ItemCosts"
            }
          }
        },
        "description" : "Costs associated to a set of Elastic Cloud resources for an organization. All of the costs are expressed in Elastic Consumption Unit (ECU)"
      },
      "TargetElasticsearchCluster" : {
        "required" : [ "elasticsearch_id" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Hyperlink"
            },
            "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
          },
          "elasticsearch_id" : {
            "type" : "string",
            "description" : "The Elasticsearch cluster Id",
            "x-ballerina-name" : "elasticsearchId"
          }
        },
        "description" : "Information about the specified Elasticsearch cluster"
      },
      "ClusterMetadataInfo" : {
        "required" : [ "last_modified", "version" ],
        "type" : "object",
        "properties" : {
          "service_url" : {
            "type" : "string",
            "description" : "The full URL to access this deployment resource",
            "x-ballerina-name" : "serviceUrl"
          },
          "endpoint" : {
            "type" : "string",
            "description" : "The DNS name of the cluster endpoint, if available"
          },
          "aliased_endpoint" : {
            "type" : "string",
            "description" : "The DNS name of the cluster endpoint derived from the deployment alias, if available",
            "x-ballerina-name" : "aliasedEndpoint"
          },
          "aliased_url" : {
            "type" : "string",
            "description" : "The full aliased URL to access this deployment resource",
            "x-ballerina-name" : "aliasedUrl"
          },
          "raw" : {
            "type" : "object",
            "properties" : { },
            "description" : "An unstructured JSON representation of the public and internal state (can be filtered out via URL parameter). The contents and structure of the `raw` field can change at any time. "
          },
          "cloud_id" : {
            "type" : "string",
            "description" : "The cloud ID, an encoded string that provides other Elastic services with the necessary information to connect to this Elasticsearch and Kibana (only present if both exist)",
            "x-ballerina-name" : "cloudId"
          },
          "services_urls" : {
            "type" : "array",
            "description" : "A list of the URLs to access services that the resource provides at this time. Note that if the service is not running or has not started yet, the URL to access it won't be available",
            "items" : {
              "$ref" : "#/components/schemas/ServiceUrl"
            },
            "x-ballerina-name" : "servicesUrls"
          },
          "ports" : {
            "$ref" : "#/components/schemas/ClusterMetadataPortInfo"
          },
          "version" : {
            "type" : "integer",
            "description" : "The resource version number of the cluster metadata",
            "format" : "int32"
          },
          "last_modified" : {
            "type" : "string",
            "description" : "The most recent time the cluster metadata was changed (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "lastModified"
          }
        },
        "description" : "Information about the public and internal state, and the configuration settings of an Elasticsearch cluster"
      },
      "MetadataItem" : {
        "required" : [ "key", "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "The metadata value"
          },
          "key" : {
            "type" : "string",
            "description" : "The metadata field name"
          }
        },
        "description" : "The key-value pair"
      },
      "DirectTrustRelationship" : {
        "required" : [ "certificates", "name", "trust_all" ],
        "type" : "object",
        "properties" : {
          "uid" : {
            "type" : "string",
            "description" : "Auto generated identifier for this trust, allows distinguishing between update vs remove and add"
          },
          "additional_node_names" : {
            "type" : "array",
            "description" : "A list of node names trusted in addition to those deducible from trust_allowlist and scope id. Allows trusting nodes that don't have a scoped name at the cost of maintaining the list. Mandatory if scope id is not defined. Wildcards are not allowed",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "additionalNodeNames"
          },
          "certificates" : {
            "type" : "array",
            "description" : "The public ca certificate(s) to trust. Only one is required, but it is possible to specify multiple certificates in order to facilitate key rotation",
            "items" : {
              "$ref" : "#/components/schemas/TrustedCertificate"
            }
          },
          "scope_id" : {
            "type" : "string",
            "description" : "A lowercase alphanumerical string of max 32 characters. Usually an organization id or an environment id, but could really be any suitable suffix for clusters using the CA certificate of this trust. Required unless trust_all is false and trust_allowlist is empty",
            "example" : "abc123",
            "x-ballerina-name" : "scopeId"
          },
          "trust_all" : {
            "type" : "boolean",
            "description" : "If true, scope_id is required and the `trust_allowlist` is ignored and all clusters matching the scope id will be trusted",
            "x-ballerina-name" : "trustAll"
          },
          "name" : {
            "type" : "string",
            "description" : "a human readable name of the trust relationship"
          },
          "trust_allowlist" : {
            "type" : "array",
            "description" : "The list of clusters with matching scope to trust. Only used when `trust_all` is false. Providing one or more clusters makes scope_id mandatory",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "trustAllowlist"
          },
          "type" : {
            "type" : "string",
            "description" : "The type can either be ESS, ECE, generic or proxy. If none is specified, then generic is assumed. If proxy is specified, trust_all should be false and trust_allowlist, scope_id and additional_node_names should be omitted",
            "enum" : [ "ECE", "ESS", "generic", "proxy" ]
          }
        },
        "description" : "The trust relationship with entities trusted directly having their certificate bundled together with the trust settings"
      },
      "ManagedMonitoringSettings" : {
        "required" : [ "target_cluster_id" ],
        "type" : "object",
        "properties" : {
          "target_cluster_id" : {
            "type" : "string",
            "description" : "The Id of the target cluster to which to send monitoring information",
            "x-ballerina-name" : "targetClusterId"
          }
        },
        "description" : "The settings for sending monitoring information to another cluster"
      },
      "AppSearchPlansInfo" : {
        "required" : [ "healthy", "history" ],
        "type" : "object",
        "properties" : {
          "current" : {
            "$ref" : "#/components/schemas/AppSearchPlanInfo"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the plan situation is healthy (if unhealthy, means the last plan attempt failed)"
          },
          "pending" : {
            "$ref" : "#/components/schemas/AppSearchPlanInfo"
          },
          "history" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppSearchPlanInfo"
            }
          }
        },
        "description" : "Information about current, pending, and past App Search Server plans"
      },
      "ElasticsearchInfo" : {
        "required" : [ "blocking_issues", "healthy", "master_info", "shard_info" ],
        "type" : "object",
        "properties" : {
          "cluster_blocking_issues" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ElasticsearchBlockingIssues"
            } ],
            "x-ballerina-name" : "clusterBlockingIssues"
          },
          "blocking_issues" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ElasticsearchClusterBlockingIssues"
            } ],
            "x-ballerina-name" : "blockingIssues"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the Elasticsearch cluster is healthy (check the sub-objects for more details if not)"
          },
          "shard_info" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ElasticsearchShardsInfo"
            } ],
            "x-ballerina-name" : "shardInfo"
          },
          "shards_status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ElasticsearchShardsStatus"
            } ],
            "x-ballerina-name" : "shardsStatus"
          },
          "master_info" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ElasticsearchMasterInfo"
            } ],
            "x-ballerina-name" : "masterInfo"
          }
        },
        "description" : "Information about the Elasticsearch cluster"
      },
      "EnterpriseSearchSystemSettings" : {
        "type" : "object",
        "properties" : {
          "secret_session_key" : {
            "type" : "string",
            "description" : "Optionally override the secret session key within Enterprise Search - defaults to the previously existing secretSession. Note that this field is never returned from the API, it is write only",
            "x-ballerina-name" : "secretSessionKey"
          },
          "elasticsearch_password" : {
            "type" : "string",
            "description" : "Optionally override the account within Enterprise Search - defaults to a system account that always exists (if specified, the username must also be specified). Note that this field is never returned from the API, it is write only",
            "x-ballerina-name" : "elasticsearchPassword"
          },
          "elasticsearch_username" : {
            "type" : "string",
            "description" : "Optionally override the account within Enterprise Search - defaults to a system account that always exists (if specified, the password must also be specified). Note that this field is never returned from the API, it is write only",
            "x-ballerina-name" : "elasticsearchUsername"
          }
        },
        "description" : "This structure defines a curated subset of the Enterprise Search settings. (This field together with 'user_settings_override*' and  'user_settings*' defines the total set of Enterprise Search settings)"
      },
      "ElasticsearchScriptingUserSettings" : {
        "type" : "object",
        "properties" : {
          "mustache_enabled" : {
            "type" : "boolean",
            "description" : "(5.x+ only) If enabled (the default) then the mustache scripting engine is allowed as a sandboxed language. Sandboxed languages are the only ones allowed if 'sandbox_mode' is set to true. NOTES: (Corresponds to the parameters 'script.engine.mustache.[file|stored|inline]')",
            "x-ballerina-name" : "mustacheEnabled"
          },
          "file" : {
            "$ref" : "#/components/schemas/ElasticsearchScriptTypeSettings"
          },
          "inline" : {
            "$ref" : "#/components/schemas/ElasticsearchScriptTypeSettings"
          },
          "stored" : {
            "$ref" : "#/components/schemas/ElasticsearchScriptTypeSettings"
          },
          "expressions_enabled" : {
            "type" : "boolean",
            "description" : "(5.x+ only) If enabled (the default) then the expressions scripting engine is allowed as a sandboxed language. Sandboxed languages are the only ones allowed if 'sandbox_mode' is set to true. NOTES: (Corresponds to the parameters 'script.engine.expression.[file|stored|inline]')",
            "x-ballerina-name" : "expressionsEnabled"
          },
          "painless_enabled" : {
            "type" : "boolean",
            "description" : "(5.x+ only) If enabled (the default) then the painless scripting engine is allowed as a sandboxed language. Sandboxed languages are the only ones allowed if 'sandbox_mode' is set to true. NOTES: (Corresponds to the parameters 'script.engine.painless.[file|stored|inline]')",
            "x-ballerina-name" : "painlessEnabled"
          }
        },
        "description" : "Controls the languages supported by the Elasticsearch cluster, such as Painless, Mustache, and Expressions. Controls how the languages are used, such as file, index, and inline. TIP: For complex configurations, leave these blank and configure these settings in the user YAML or JSON"
      },
      "StackVersionMetadata" : {
        "type" : "object",
        "properties" : {
          "schema_version" : {
            "type" : "integer",
            "description" : "The schema version of the stack pack version",
            "format" : "int32",
            "x-ballerina-name" : "schemaVersion"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes for administrator"
          },
          "min_platform_version" : {
            "type" : "string",
            "description" : "The minimum version of the platform that the stack pack version is compatible with",
            "x-ballerina-name" : "minPlatformVersion"
          },
          "pre_release" : {
            "type" : "boolean",
            "description" : "Indicates that the stack pack version is not GA and is not supposed to be used in production",
            "x-ballerina-name" : "preRelease"
          },
          "min_wire_compatibility_version" : {
            "type" : "string",
            "description" : "The minimum version required for performing a rolling upgrade to this stack version",
            "x-ballerina-name" : "minWireCompatibilityVersion"
          },
          "min_index_compatibility_version" : {
            "type" : "string",
            "description" : "The minimum version required for performing a full cluster restart upgrade to this stack version",
            "x-ballerina-name" : "minIndexCompatibilityVersion"
          }
        },
        "description" : "The metadata for the Elastic Stack"
      },
      "Updates" : {
        "type" : "object",
        "properties" : {
          "enterprise_search" : {
            "type" : "array",
            "description" : "Diagnostics for Enterprise Search resources",
            "items" : {
              "$ref" : "#/components/schemas/EnterpriseSearch"
            },
            "x-ballerina-name" : "enterpriseSearch"
          },
          "elasticsearch" : {
            "type" : "array",
            "description" : "Diagnostics for Elasticsearch clusters",
            "items" : {
              "$ref" : "#/components/schemas/Elasticsearch"
            }
          },
          "kibana" : {
            "type" : "array",
            "description" : "Diagnostics for Kibanas",
            "items" : {
              "$ref" : "#/components/schemas/Kibana"
            }
          },
          "apm" : {
            "type" : "array",
            "description" : "Diagnostics for APMs",
            "items" : {
              "$ref" : "#/components/schemas/Apm"
            }
          },
          "integrations_server" : {
            "type" : "array",
            "description" : "Diagnostics for Integrations Server",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationsServer"
            },
            "x-ballerina-name" : "integrationsServer"
          },
          "appsearch" : {
            "type" : "array",
            "description" : "Diagnostics for AppSearches",
            "items" : {
              "$ref" : "#/components/schemas/AppSearch"
            }
          }
        },
        "description" : "Holds diagnostics for existing resources that might be updated"
      },
      "TopologySize" : {
        "required" : [ "resource", "value" ],
        "type" : "object",
        "properties" : {
          "resource" : {
            "type" : "string",
            "description" : "Type of resource. In ESS the resource used should always be `memory`",
            "enum" : [ "memory", "storage" ]
          },
          "value" : {
            "type" : "integer",
            "description" : "Amount of resource",
            "format" : "int32"
          }
        },
        "description" : "Measured by the amount of a resource. The final cluster size is calculated using multipliers from the topology instance configuration"
      },
      "EnterpriseSearchSettings" : {
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ClusterMetadataSettings"
          }
        },
        "description" : "The settings for the Enterprise Search"
      },
      "DomainVerificationRequest" : {
        "required" : [ "domain_claim_request" ],
        "type" : "object",
        "properties" : {
          "domain_claim_request" : {
            "type" : "string",
            "description" : "The domain claim request",
            "x-ballerina-name" : "domainClaimRequest"
          }
        }
      },
      "TrafficFilterClaimedLinkIdInfo" : {
        "required" : [ "region" ],
        "type" : "object",
        "properties" : {
          "azure_endpoint_guid" : {
            "type" : "string",
            "description" : "Resource GUID of the Azure Private Endpoint to allow connections from",
            "x-ballerina-name" : "azureEndpointGuid"
          },
          "azure_endpoint_name" : {
            "type" : "string",
            "description" : "Name of the Azure Private Endpoint to allow connections from",
            "x-ballerina-name" : "azureEndpointName"
          },
          "region" : {
            "type" : "string",
            "description" : "The claimed link id can be used only for traffic filter in the specific region"
          },
          "link_id" : {
            "type" : "string",
            "description" : "Link id. A GCP private service connect ID or AWS VPC endpoint ID",
            "x-ballerina-name" : "linkId"
          }
        }
      },
      "StackVersionElasticsearchConfig" : {
        "required" : [ "blacklist", "default_plugins", "docker_image", "plugins" ],
        "type" : "object",
        "properties" : {
          "capacity_constraints" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StackVersionInstanceCapacityConstraint"
            } ],
            "x-ballerina-name" : "capacityConstraints"
          },
          "node_types" : {
            "type" : "array",
            "description" : "Node types that are supported by this stack version",
            "items" : {
              "$ref" : "#/components/schemas/StackVersionNodeType"
            },
            "x-ballerina-name" : "nodeTypes"
          },
          "settings" : {
            "type" : "object",
            "properties" : { },
            "description" : "Settings that are applied to all nodes of this type"
          },
          "compatible_node_types" : {
            "type" : "array",
            "description" : "Node types that are compatible with this one",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "compatibleNodeTypes"
          },
          "plugins" : {
            "type" : "array",
            "description" : "List of available plugins",
            "items" : {
              "type" : "string"
            }
          },
          "default_plugins" : {
            "type" : "array",
            "description" : "List of default plugins",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "defaultPlugins"
          },
          "blacklist" : {
            "type" : "array",
            "description" : "List of configuration options that cannot be overridden by user settings",
            "items" : {
              "type" : "string"
            }
          },
          "docker_image" : {
            "type" : "string",
            "description" : "Docker image for the Elasticsearch",
            "x-ballerina-name" : "dockerImage"
          }
        },
        "description" : "The Elasticsearch configuration for an Elastic Stack version. "
      },
      "KeystoreSecret" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "object",
            "properties" : { },
            "description" : "Value of this setting. This can either be a string or a JSON object that is stored as a JSON string in the keystore. NOTE: When the keystore secret is unspecified, it is removed"
          },
          "as_file" : {
            "type" : "boolean",
            "description" : "Stores the keystore secret as a file. The default is false, which stores the keystore secret as string when value is a plain string, or true when value is an object",
            "x-ballerina-name" : "asFile"
          }
        },
        "description" : "The value that you configure for the Elasticsearch keystore secret"
      },
      "DeploymentTemplateInfoV2" : {
        "required" : [ "deployment_template", "id", "instance_configurations", "name" ],
        "type" : "object",
        "properties" : {
          "min_version" : {
            "type" : "string",
            "description" : "Minimum stack version required by this template, if any",
            "x-ballerina-name" : "minVersion"
          },
          "system_owned" : {
            "type" : "boolean",
            "description" : "Whether or not if this is system owned template",
            "x-ballerina-name" : "systemOwned"
          },
          "kibana_deeplink" : {
            "type" : "array",
            "description" : "The Kibana Deeplink for this type of deployment",
            "items" : {
              "$ref" : "#/components/schemas/KibanaDeeplink"
            },
            "x-ballerina-name" : "kibanaDeeplink"
          },
          "metadata" : {
            "type" : "array",
            "description" : "Optional arbitrary metadata to associate with this template",
            "items" : {
              "$ref" : "#/components/schemas/MetadataItem"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "A human readable name for the template"
          },
          "description" : {
            "type" : "string",
            "description" : "An optional description for the template"
          },
          "template_category_id" : {
            "type" : "string",
            "description" : "Provider and version agnostic template identifier used for grouping related template types",
            "x-ballerina-name" : "templateCategoryId"
          },
          "id" : {
            "type" : "string",
            "description" : "The unique identifier for the template"
          },
          "source" : {
            "$ref" : "#/components/schemas/ChangeSourceInfo"
          },
          "instance_configurations" : {
            "type" : "array",
            "description" : "List of instance configurations used in the cluster template",
            "items" : {
              "$ref" : "#/components/schemas/InstanceConfigurationInfo"
            },
            "x-ballerina-name" : "instanceConfigurations"
          },
          "deployment_template" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DeploymentCreateRequest"
            } ],
            "x-ballerina-name" : "deploymentTemplate"
          },
          "order" : {
            "type" : "integer",
            "description" : "Determines the order in which this template should be returned when listed. Templates are returned in ascending order. If not specified, then the template willbe appended to the end of the list",
            "format" : "int32"
          }
        },
        "description" : "Deployment template detailed information"
      },
      "EnterpriseSearch" : {
        "required" : [ "backend_plan", "display_name", "elasticsearch_cluster_ref_id", "ref_id" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "A locally-unique user-specified id",
            "x-ballerina-name" : "refId"
          },
          "elasticsearch_cluster_ref_id" : {
            "type" : "string",
            "description" : "The user-specified id of the Elasticsearch Cluster that this will link to",
            "x-ballerina-name" : "elasticsearchClusterRefId"
          },
          "backend_plan" : {
            "type" : "object",
            "properties" : { },
            "description" : "The backend plan as JSON",
            "x-ballerina-name" : "backendPlan"
          },
          "display_name" : {
            "type" : "string",
            "description" : "The human readable name (defaults to the generated cluster id if not specified)",
            "x-ballerina-name" : "displayName"
          }
        },
        "description" : "Holds diagnostics for an Enterprise Search resource"
      },
      "ReadOnlyResponse" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether read-only mode is enabled or disabled"
          }
        },
        "description" : "Read-only mode response"
      },
      "ElasticsearchClusterSettings" : {
        "type" : "object",
        "properties" : {
          "trust" : {
            "$ref" : "#/components/schemas/ElasticsearchClusterTrustSettings"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ClusterMetadataSettings"
          },
          "traffic_filter" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrafficFilterSettings"
            } ],
            "x-ballerina-name" : "trafficFilter"
          },
          "curation" : {
            "$ref" : "#/components/schemas/ClusterCurationSettings"
          },
          "keystore_contents" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/KeystoreContents"
            } ],
            "x-ballerina-name" : "keystoreContents"
          },
          "monitoring" : {
            "$ref" : "#/components/schemas/ManagedMonitoringSettings"
          },
          "snapshot" : {
            "$ref" : "#/components/schemas/ClusterSnapshotSettings"
          },
          "dedicated_masters_threshold" : {
            "type" : "integer",
            "description" : "Threshold starting from which the number of instances in the cluster results in the introduction of dedicated masters. If the cluster is downscaled to a number of nodes below this one, dedicated masters will be removed. Limit is inclusive. When provided the threshold setting is updated. A `null` value removes the field. Otherwise, the setting remains as it was set previously",
            "format" : "int32",
            "x-ballerina-name" : "dedicatedMastersThreshold"
          }
        },
        "description" : "The settings for an Elasticsearch cluster"
      },
      "ElasticsearchNodeType" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "boolean",
            "description" : "Defines whether this node can hold data (default: false)"
          },
          "master" : {
            "type" : "boolean",
            "description" : "Defines whether this node can be elected master (default: false)"
          },
          "ingest" : {
            "type" : "boolean",
            "description" : "Defines whether this node can run an ingest pipeline (default: false)"
          },
          "ml" : {
            "type" : "boolean",
            "description" : "Defines whether this node can run ml jobs, valid only for versions 5.4.0 or greater (default: false)"
          }
        },
        "description" : "Controls the combinations of Elasticsearch node types. TIP: By default, the Elasticsearch node is master eligible, can hold data, and run ingest pipelines. WARNING: Do not set for tiebreaker topologies"
      },
      "InstanceOverrides" : {
        "type" : "object",
        "properties" : {
          "storage_multiplier" : {
            "type" : "number",
            "description" : "Overrides the disk quota multiplier for the instance",
            "format" : "double",
            "x-ballerina-name" : "storageMultiplier"
          },
          "capacity" : {
            "type" : "integer",
            "description" : "Sets the memory capacity for the instances container. Requires a restart to take effect",
            "format" : "int32"
          }
        }
      },
      "ElasticsearchMasterElement" : {
        "required" : [ "instances", "master_node_id" ],
        "type" : "object",
        "properties" : {
          "instances" : {
            "type" : "array",
            "description" : "The names of the instance/container hosting the node belong to the cluster with the given master",
            "items" : {
              "type" : "string"
            }
          },
          "master_node_id" : {
            "type" : "string",
            "description" : "The Elasticsearch node id of a master node",
            "x-ballerina-name" : "masterNodeId"
          },
          "master_instance_name" : {
            "type" : "string",
            "description" : "The corresponding instance name of the container hosting the Elasticsearch master node, if available",
            "x-ballerina-name" : "masterInstanceName"
          }
        },
        "description" : "Information about the Elasticsearch instances. For split-brain cases, this also includes sub-clusters"
      },
      "TrafficFilterRule" : {
        "type" : "object",
        "properties" : {
          "remote_cluster_id" : {
            "type" : "string",
            "description" : "The remote cluster ID",
            "x-ballerina-name" : "remoteClusterId"
          },
          "egress_rule" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrafficFilterEgressRule"
            } ],
            "x-ballerina-name" : "egressRule"
          },
          "azure_endpoint_guid" : {
            "type" : "string",
            "description" : "Resource GUID of the Azure Private Endpoint to allow connections from",
            "x-ballerina-name" : "azureEndpointGuid"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the rule"
          },
          "id" : {
            "type" : "string",
            "description" : "The rule ID"
          },
          "source" : {
            "type" : "string",
            "description" : "Allowed traffic filter source: IP address, CIDR mask, or VPC endpoint ID"
          },
          "azure_endpoint_name" : {
            "type" : "string",
            "description" : "Name of the Azure Private Endpoint to allow connections from",
            "x-ballerina-name" : "azureEndpointName"
          },
          "remote_cluster_org_id" : {
            "type" : "string",
            "description" : "The remote cluster organization ID",
            "x-ballerina-name" : "remoteClusterOrgId"
          }
        },
        "description" : "The container for a traffic filter rule"
      },
      "ElasticsearchClusterInfo" : {
        "required" : [ "associated_apm_clusters", "associated_appsearch_clusters", "associated_enterprise_search_clusters", "associated_kibana_clusters", "cluster_id", "cluster_name", "elasticsearch", "external_links", "healthy", "metadata", "plan_info", "snapshots", "status", "topology" ],
        "type" : "object",
        "properties" : {
          "cluster_name" : {
            "type" : "string",
            "description" : "The name of the cluster",
            "x-ballerina-name" : "clusterName"
          },
          "associated_kibana_clusters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KibanaSubClusterInfo"
            },
            "x-ballerina-name" : "associatedKibanaClusters"
          },
          "settings" : {
            "$ref" : "#/components/schemas/ElasticsearchClusterSettings"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ClusterMetadataInfo"
          },
          "associated_apm_clusters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApmSubInfo"
            },
            "x-ballerina-name" : "associatedApmClusters"
          },
          "topology" : {
            "$ref" : "#/components/schemas/ClusterTopologyInfo"
          },
          "associated_appsearch_clusters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppSearchSubInfo"
            },
            "x-ballerina-name" : "associatedAppsearchClusters"
          },
          "plan_info" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ElasticsearchClusterPlansInfo"
            } ],
            "x-ballerina-name" : "planInfo"
          },
          "system_alerts" : {
            "type" : "array",
            "description" : "List of cluster system alerts",
            "items" : {
              "$ref" : "#/components/schemas/ClusterSystemAlert"
            },
            "x-ballerina-name" : "systemAlerts"
          },
          "snapshots" : {
            "$ref" : "#/components/schemas/SnapshotStatusInfo"
          },
          "cluster_id" : {
            "type" : "string",
            "description" : "The id of the cluster",
            "x-ballerina-name" : "clusterId"
          },
          "security" : {
            "$ref" : "#/components/schemas/ElasticsearchClusterSecurityInfo"
          },
          "elasticsearch" : {
            "$ref" : "#/components/schemas/ElasticsearchInfo"
          },
          "elasticsearch_monitoring_info" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ElasticsearchMonitoringInfo"
            } ],
            "x-ballerina-name" : "elasticsearchMonitoringInfo"
          },
          "healthy" : {
            "type" : "boolean",
            "description" : "Whether the cluster is healthy or not (one or more of the info subsections will have healthy: false)"
          },
          "external_links" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "External resources related to the cluster",
            "items" : {
              "$ref" : "#/components/schemas/ExternalHyperlink"
            },
            "x-ballerina-name" : "externalLinks"
          },
          "associated_enterprise_search_clusters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnterpriseSearchSubInfo"
            },
            "x-ballerina-name" : "associatedEnterpriseSearchClusters"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Hyperlink"
            },
            "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
          },
          "deployment_id" : {
            "type" : "string",
            "description" : "The id of the deployment that this Elasticsearch belongs to",
            "x-ballerina-name" : "deploymentId"
          },
          "region" : {
            "type" : "string",
            "description" : "The region that this cluster belongs to. Only populated in SaaS or federated ECE"
          },
          "status" : {
            "type" : "string",
            "description" : "Cluster status",
            "enum" : [ "initializing", "stopping", "stopped", "rebooting", "restarting", "reconfiguring", "started" ]
          }
        },
        "description" : "The information for an Elasticsearch cluster"
      },
      "EnableIlmRequest" : {
        "required" : [ "index_patterns" ],
        "type" : "object",
        "properties" : {
          "index_patterns" : {
            "type" : "array",
            "description" : "A locally-unique user-specified id for Kibana",
            "items" : {
              "$ref" : "#/components/schemas/IndexPattern"
            },
            "x-ballerina-name" : "indexPatterns"
          }
        },
        "description" : "Request sent to enable ILM on a deployment"
      },
      "ElasticsearchUserBundle" : {
        "required" : [ "elasticsearch_version", "name", "url" ],
        "type" : "object",
        "properties" : {
          "elasticsearch_version" : {
            "type" : "string",
            "description" : "The supported Elasticsearch version (must match the version in the plan)",
            "x-ballerina-name" : "elasticsearchVersion"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the bundle"
          },
          "url" : {
            "type" : "string",
            "description" : "The URL of the bundle, which must be accessible from the ECE infrastructure. This URL could be cached by platform, make sure to change it when updating the bundle"
          }
        },
        "description" : "A list of admin-uploaded bundle objects, such as scripts and synonym files"
      },
      "EnterpriseSearchSubInfo" : {
        "required" : [ "enabled", "enterprise_search_id" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Hyperlink"
            },
            "description" : "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
          },
          "enterprise_search_id" : {
            "type" : "string",
            "description" : "The Enterprise Search Id",
            "x-ballerina-name" : "enterpriseSearchId"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether the associated Enterprise Search is currently available"
          }
        },
        "description" : "Information about the APM Servers associated with the Elasticsearch cluster"
      },
      "Period" : {
        "required" : [ "end", "start" ],
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "string",
            "description" : "Start",
            "format" : "date-time"
          },
          "end" : {
            "type" : "string",
            "description" : "End",
            "format" : "date-time"
          }
        },
        "description" : "Period"
      },
      "RoleMapping" : {
        "required" : [ "enabled", "name", "role_assignments", "rule" ],
        "type" : "object",
        "properties" : {
          "role_assignments" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoleAssignments"
            } ],
            "x-ballerina-name" : "roleAssignments"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the role mapping"
          },
          "rule" : {
            "$ref" : "#/components/schemas/RoleMappingRule"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether or not the role mapping is enabled"
          }
        }
      },
      "DeploymentDiagnostics" : {
        "type" : "object",
        "properties" : {
          "creates" : {
            "$ref" : "#/components/schemas/Creates"
          },
          "updates" : {
            "$ref" : "#/components/schemas/Updates"
          }
        },
        "description" : "Describes the diagnostics for a given Deployment-modifying payload"
      },
      "DeploymentLoggingSettings" : {
        "required" : [ "destination" ],
        "type" : "object",
        "properties" : {
          "destination" : {
            "$ref" : "#/components/schemas/ObservabilityAbsoluteDeployment"
          }
        },
        "description" : "The logging settings for a deployment"
      },
      "RoleAssignments" : {
        "type" : "object",
        "properties" : {
          "organization" : {
            "type" : "array",
            "description" : "Assignments for roles with organization scope",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationRoleAssignment"
            }
          },
          "project" : {
            "$ref" : "#/components/schemas/ProjectRoleAssignments"
          },
          "platform" : {
            "type" : "array",
            "description" : "Assignments for roles with platform scope",
            "items" : {
              "$ref" : "#/components/schemas/PlatformRoleAssignment"
            }
          },
          "deployment" : {
            "type" : "array",
            "description" : "Assignments for roles with deployment scope",
            "items" : {
              "$ref" : "#/components/schemas/DeploymentRoleAssignment"
            }
          }
        },
        "description" : "Roles assigned to users, API keys or organization invitations. Currently unavailable in self-hosted ECE"
      },
      "ChangeSourceInfo" : {
        "required" : [ "action", "date", "facilitator" ],
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "description" : "The time the change was initiated",
            "format" : "date-time"
          },
          "user_id" : {
            "type" : "string",
            "description" : "The user that requested the change",
            "x-ballerina-name" : "userId"
          },
          "remote_addresses" : {
            "type" : "array",
            "description" : "The host addresses of the user that originated the change",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "remoteAddresses"
          },
          "admin_id" : {
            "type" : "string",
            "description" : "The admin user that requested the change",
            "x-ballerina-name" : "adminId"
          },
          "action" : {
            "type" : "string",
            "description" : "The type of plan change that was initiated"
          },
          "facilitator" : {
            "type" : "string",
            "description" : "The service where the change originated from"
          }
        },
        "description" : "A container for information about the source of a change"
      },
      "QueryStringQuery" : {
        "required" : [ "query" ],
        "type" : "object",
        "properties" : {
          "default_operator" : {
            "type" : "string",
            "description" : "The default operator used if no explicit operator is specified",
            "x-ballerina-name" : "defaultOperator"
          },
          "analyzer" : {
            "type" : "string",
            "description" : "The analyzer used to analyze each term of the query when creating composite queries"
          },
          "query" : {
            "type" : "string",
            "description" : "The actual query to be parsed"
          },
          "default_field" : {
            "type" : "string",
            "description" : "The default field for query terms if no prefix field is specified",
            "x-ballerina-name" : "defaultField"
          },
          "allow_leading_wildcard" : {
            "type" : "boolean",
            "description" : "When set, * or ? are allowed as the first character. Defaults to false",
            "x-ballerina-name" : "allowLeadingWildcard"
          }
        },
        "description" : "A query that uses the strict query string syntax for parsing. Will return an error for invalid syntax"
      },
      "ElasticsearchPayload" : {
        "required" : [ "plan", "ref_id", "region" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "A locally-unique user-specified id for this Elasticsearch cluster",
            "x-ballerina-name" : "refId"
          },
          "settings" : {
            "$ref" : "#/components/schemas/ElasticsearchClusterSettings"
          },
          "display_name" : {
            "type" : "string",
            "description" : "The human readable name for the cluster (defaults to the generated cluster id if not specified)",
            "x-ballerina-name" : "displayName"
          },
          "region" : {
            "type" : "string",
            "description" : "The region where this resource exists"
          },
          "plan" : {
            "$ref" : "#/components/schemas/ElasticsearchClusterPlan"
          }
        },
        "description" : "An alias for an Elasticsearch Cluster paired with a request for creating one"
      },
      "DeploymentsListingData" : {
        "required" : [ "id", "name", "resources" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of this deployment"
          },
          "resources" : {
            "type" : "array",
            "description" : "List of resources in this deployment",
            "items" : {
              "$ref" : "#/components/schemas/DeploymentResource"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The id of this deployment"
          }
        }
      },
      "ElasticsearchConfiguration" : {
        "type" : "object",
        "properties" : {
          "user_settings_json" : {
            "type" : "object",
            "properties" : { },
            "description" : "An arbitrary JSON object allowing cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided the parameters arey are on the allowlist and not on the denylist. NOTES: (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Elasticsearch settings)",
            "x-ballerina-name" : "userSettingsJson"
          },
          "system_settings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ElasticsearchSystemSettings"
            } ],
            "x-ballerina-name" : "systemSettings"
          },
          "user_settings_yaml" : {
            "type" : "string",
            "description" : "An arbitrary YAML object allowing cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided the parameters arey are on the allowlist and not on the denylist. NOTES: (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Elasticsearch settings)",
            "x-ballerina-name" : "userSettingsYaml"
          },
          "user_settings_override_json" : {
            "type" : "object",
            "properties" : { },
            "description" : "An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), ie in addition to the documented 'system_settings'. NOTES: (This field together with 'system_settings' and 'user_settings*' defines the total set of Elasticsearch settings)",
            "x-ballerina-name" : "userSettingsOverrideJson"
          },
          "enabled_built_in_plugins" : {
            "type" : "array",
            "description" : "A list of plugin names from the Elastic-supported subset that are bundled with the version images. NOTES: (Users should consult the Elastic stack objects to see what plugins are available, this is currently only available from the UI)",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "enabledBuiltInPlugins"
          },
          "curation" : {
            "$ref" : "#/components/schemas/ElasticsearchCuration"
          },
          "node_attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Defines the Elasticsearch node attributes for the instances in the topology",
            "x-ballerina-name" : "nodeAttributes"
          },
          "user_plugins" : {
            "type" : "array",
            "description" : "A list of admin-uploaded plugin objects that are available for this user",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchUserPlugin"
            },
            "x-ballerina-name" : "userPlugins"
          },
          "user_bundles" : {
            "type" : "array",
            "description" : "A list of admin-uploaded bundle objects (eg scripts, synonym files) that are available for this user",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchUserBundle"
            },
            "x-ballerina-name" : "userBundles"
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the Elasticsearch cluster (must be one of the ECE supported versions). Currently cannot be different across the topology (and is generally specified in the globals). Defaults to the latest version if not specified"
          },
          "docker_image" : {
            "type" : "string",
            "description" : "A docker URI that allows overriding of the default docker image specified for this version",
            "x-ballerina-name" : "dockerImage"
          },
          "user_settings_override_yaml" : {
            "type" : "string",
            "description" : "An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), ie in addition to the documented 'system_settings'. NOTES: (This field together with 'system_settings' and 'user_settings*' defines the total set of Elasticsearch settings)",
            "x-ballerina-name" : "userSettingsOverrideYaml"
          }
        },
        "description" : "The Elasticsearch cluster settings. When specified at the top level, provides a field-by-field default. When specified at the topology level, provides the override settings"
      },
      "DeploymentMetricsSettings" : {
        "required" : [ "destination" ],
        "type" : "object",
        "properties" : {
          "destination" : {
            "$ref" : "#/components/schemas/ObservabilityAbsoluteDeployment"
          }
        },
        "description" : "The metrics settings for a deployment"
      },
      "TrafficFilterRulesetResponse" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The new ruleset ID"
          }
        },
        "description" : "The response after you create a new ruleset"
      },
      "AccountResponse" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "trust" : {
            "$ref" : "#/components/schemas/AccountTrustSettings"
          },
          "id" : {
            "type" : "string",
            "description" : "The account's identifier"
          }
        },
        "description" : "An account is the entity that owns deployments, and it is accessed by users. Accounts are isolated from each other"
      },
      "ExtensionFileMetadata" : {
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "integer",
            "description" : "The extension file size in bytes",
            "format" : "int64"
          },
          "last_modified_date" : {
            "type" : "string",
            "description" : "The date and time the extension was last modified",
            "format" : "date-time",
            "x-ballerina-name" : "lastModifiedDate"
          },
          "url" : {
            "type" : "string",
            "description" : "The temporary URL to download the extension file. Usable for verification",
            "format" : "uri"
          }
        }
      },
      "Balance" : {
        "required" : [ "available", "line_items", "remaining" ],
        "type" : "object",
        "properties" : {
          "available" : {
            "type" : "number",
            "description" : "Available balance",
            "format" : "double"
          },
          "line_items" : {
            "type" : "array",
            "description" : "A collection of order line items for for an organization",
            "items" : {
              "$ref" : "#/components/schemas/SimplifiedLineItem"
            },
            "x-ballerina-name" : "lineItems"
          },
          "remaining" : {
            "type" : "number",
            "description" : "Remaining balance",
            "format" : "double"
          }
        },
        "description" : "The available balance for an organization"
      },
      "EmptyResponse" : {
        "type" : "object"
      },
      "MatchAllQuery" : {
        "type" : "object",
        "description" : "A query that matches all documents"
      },
      "DeleteDomainClaimRequest" : {
        "required" : [ "domain_claim_request" ],
        "type" : "object",
        "properties" : {
          "domain_claim_request" : {
            "type" : "string",
            "description" : "The request to remove a domain claim",
            "x-ballerina-name" : "domainClaimRequest"
          }
        }
      },
      "EnterpriseSearchNodeTypes" : {
        "required" : [ "appserver", "connector", "worker" ],
        "type" : "object",
        "properties" : {
          "connector" : {
            "type" : "boolean",
            "description" : "Defines whether this instance should run as Connector"
          },
          "appserver" : {
            "type" : "boolean",
            "description" : "Defines whether this instance should run as Application/API server"
          },
          "worker" : {
            "type" : "boolean",
            "description" : "Defines whether this instance should run as background worker"
          }
        },
        "description" : "Node types to enable for an Enterprise Search instance"
      },
      "ClusterCredentials" : {
        "required" : [ "password", "username" ],
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string",
            "description" : "The password of the newly created cluster"
          },
          "username" : {
            "type" : "string",
            "description" : "The username of the newly created cluster"
          }
        },
        "description" : "The username and password for the new Elasticsearch cluster, which is returned from the Elasticsearch cluster `create` command"
      },
      "OrganizationIdp" : {
        "required" : [ "acs", "configuration", "login_identifier", "metadata_url", "signing_certificate", "sp_entity_id", "sso_login_url" ],
        "type" : "object",
        "properties" : {
          "acs" : {
            "type" : "string",
            "description" : "The SAML2 assertion consumer service of the SP"
          },
          "metadata_url" : {
            "type" : "string",
            "description" : "The SAML2 metadata url for downloading the SAML2 SP metadata XML",
            "x-ballerina-name" : "metadataUrl"
          },
          "configuration" : {
            "$ref" : "#/components/schemas/OrganizationIdpConfiguration"
          },
          "sso_login_url" : {
            "type" : "string",
            "description" : "The Elastic Cloud login URL for this IdP",
            "x-ballerina-name" : "ssoLoginUrl"
          },
          "login_identifier" : {
            "type" : "string",
            "description" : "The login identifier that is unique to this organization",
            "x-ballerina-name" : "loginIdentifier"
          },
          "sp_entity_id" : {
            "type" : "string",
            "description" : "The SP entity ID and the audience for SAML2 response assertions",
            "x-ballerina-name" : "spEntityId"
          },
          "signing_certificate" : {
            "type" : "array",
            "description" : "The certificate that will sign SAML2 requests to the IdP",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "signingCertificate"
          }
        },
        "description" : "The organization's IdP info"
      },
      "StackVersionTemplateInfo" : {
        "type" : "object",
        "properties" : {
          "template_version" : {
            "type" : "string",
            "description" : "Template version",
            "readOnly" : true,
            "x-ballerina-name" : "templateVersion"
          },
          "hashes" : {
            "type" : "array",
            "description" : "Relative paths of files with SHA-256 hashes that contains the template",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/StackVersionTemplateFileHash"
            }
          }
        },
        "description" : "The template information for an Elastic Stack version"
      },
      "ClusterInstanceMemoryInfo" : {
        "required" : [ "instance_capacity" ],
        "type" : "object",
        "properties" : {
          "instance_capacity_planned" : {
            "type" : "integer",
            "description" : "The planned memory capacity in MB of the instance (only shown when an override is present)",
            "format" : "int32",
            "x-ballerina-name" : "instanceCapacityPlanned"
          },
          "instance_capacity" : {
            "type" : "integer",
            "description" : "The memory capacity in MB of the instance",
            "format" : "int32",
            "x-ballerina-name" : "instanceCapacity"
          },
          "memory_pressure" : {
            "type" : "integer",
            "description" : "The % memory pressure of Elasticsearch JVM heap space if available (60-75% consider increasing capacity, >75% can incur significant performance and stability issues)",
            "format" : "int32",
            "x-ballerina-name" : "memoryPressure"
          },
          "native_memory_pressure" : {
            "type" : "integer",
            "description" : "The % memory pressure of the instance Docker container (if available)",
            "format" : "int32",
            "x-ballerina-name" : "nativeMemoryPressure"
          }
        },
        "description" : "Information about the specific instances memory capacity and its usage"
      },
      "DeploymentTemplateReference" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The unique identifier of the deployment template"
          },
          "version" : {
            "type" : "string",
            "description" : "A version identifier to disambiguate multiple revisions of the same template"
          }
        },
        "description" : "Specifies the deployment template used to create the plan"
      },
      "Costs" : {
        "required" : [ "dimensions", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "number",
            "description" : "Total costs",
            "format" : "double"
          },
          "dimensions" : {
            "type" : "array",
            "description" : "A collection of billing details by dimension",
            "items" : {
              "$ref" : "#/components/schemas/Dimension"
            }
          }
        },
        "description" : "Costs overview for an organization. All of the costs, credits, trials are expressed in Elastic Consumption Unit (ECU)"
      },
      "ElasticsearchClusterTopologyElement" : {
        "type" : "object",
        "properties" : {
          "instance_configuration_id" : {
            "type" : "string",
            "description" : "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration",
            "x-ballerina-name" : "instanceConfigurationId"
          },
          "autoscaling_max" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TopologySize"
            } ],
            "x-ballerina-name" : "autoscalingMax"
          },
          "instance_configuration_version" : {
            "type" : "integer",
            "description" : "The version of the Instance Configuration Id. If it is unset, the meaning depends on read vs writes. For deployment reads, it is equivalent to version 0 (or the IC is unversioned); for deployment creates and deployment template use, it is equivalent to 'the latest version'; and for deployment updates, it is equivalent to 'retain the current version'",
            "format" : "int32",
            "x-ballerina-name" : "instanceConfigurationVersion"
          },
          "autoscaling_policy_override_json" : {
            "type" : "object",
            "properties" : { },
            "description" : "An arbitrary JSON object overriding the default autoscaling policy. Don't set unless you really know what you are doing",
            "x-ballerina-name" : "autoscalingPolicyOverrideJson"
          },
          "node_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ElasticsearchNodeType"
            } ],
            "x-ballerina-name" : "nodeType"
          },
          "elasticsearch" : {
            "$ref" : "#/components/schemas/ElasticsearchConfiguration"
          },
          "size" : {
            "$ref" : "#/components/schemas/TopologySize"
          },
          "autoscaling_tier_override" : {
            "type" : "boolean",
            "description" : "Set to true to enable autoscaling for this topology element, even if the cluster-level 'autoscaling_enabled' field is false. Note that 'autoscaling_tier_override' cannot be set to false if cluster-level 'autoscaling_enabled' is true. Currently only supported for the 'ml' tier",
            "x-ballerina-name" : "autoscalingTierOverride"
          },
          "zone_count" : {
            "type" : "integer",
            "description" : "The default number of zones in which data nodes will be placed",
            "format" : "int32",
            "x-ballerina-name" : "zoneCount"
          },
          "autoscaling_min" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TopologySize"
            } ],
            "x-ballerina-name" : "autoscalingMin"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier of this topology element"
          },
          "node_roles" : {
            "type" : "array",
            "description" : "The list of node roles for this topology element (ES version >= 7.10). Allowable values are: master, ingest, ml, data_hot, data_content, data_warm, data_cold, data_frozen, remote_cluster_client, transform",
            "items" : {
              "type" : "string",
              "enum" : [ "master", "ingest", "ml", "data_hot", "data_content", "data_warm", "data_cold", "data_frozen", "remote_cluster_client", "transform" ]
            },
            "x-ballerina-name" : "nodeRoles"
          },
          "topology_element_control" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TopologyElementControl"
            } ],
            "x-ballerina-name" : "topologyElementControl"
          }
        },
        "description" : "The topology of the Elasticsearch nodes, including the number, capacity, and type of nodes, and where they can be allocated"
      },
      "UpdateOrganizationRoleMappingRequest" : {
        "required" : [ "mappings" ],
        "type" : "object",
        "properties" : {
          "mappings" : {
            "type" : "array",
            "description" : "The rules for mapping role assignments in the organization",
            "items" : {
              "$ref" : "#/components/schemas/RoleMapping"
            }
          }
        }
      },
      "ClusterSnapshotRetention" : {
        "type" : "object",
        "properties" : {
          "snapshots" : {
            "type" : "integer",
            "description" : "Number of snapshots to retain",
            "format" : "int32"
          },
          "max_age" : {
            "type" : "string",
            "description" : "Total retention period for all snapshots, with the format 'length unit' (space is optional), where unit can be one of: d (day), h (hour), min (minute)",
            "x-ballerina-name" : "maxAge"
          }
        },
        "description" : "Information about the Elasticsearch cluster snapshot retention"
      },
      "GetRoleMappingsResponse" : {
        "required" : [ "mappings" ],
        "type" : "object",
        "properties" : {
          "mappings" : {
            "type" : "array",
            "description" : "The list of role assignments for the organization",
            "items" : {
              "$ref" : "#/components/schemas/RoleMapping"
            }
          }
        }
      },
      "GetOrganizationClaimedDomainsResponse" : {
        "required" : [ "domains" ],
        "type" : "object",
        "properties" : {
          "domains" : {
            "type" : "array",
            "description" : "The list of claimed domains in the organization",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "DeploymentRoleAssignment" : {
        "required" : [ "organization_id", "role_id" ],
        "type" : "object",
        "properties" : {
          "all" : {
            "type" : "boolean",
            "description" : "When true, the role applies to all deployments in the organization, otherwise the role is scoped to the deployments specified in `deployment_ids`"
          },
          "role_id" : {
            "type" : "string",
            "description" : "The ID of the role that is assigned",
            "x-ballerina-name" : "roleId"
          },
          "organization_id" : {
            "type" : "string",
            "description" : "The ID of the organization the role is scoped to",
            "x-ballerina-name" : "organizationId"
          },
          "application_roles" : {
            "type" : "array",
            "description" : "If provided, the user assigned this role assignment will be granted this application role when signing in to the deployment(s) specified in the role assignment",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "applicationRoles"
          },
          "deployment_ids" : {
            "type" : "array",
            "description" : "The IDs of the deployments the role is scoped to. Must be absent if `all` is true, and present if `all` is false",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "deploymentIds"
          }
        },
        "description" : "Assignment for a role with deployment scope"
      },
      "ElasticsearchClusterSecurityInfo" : {
        "required" : [ "last_modified", "roles", "users", "users_roles", "version" ],
        "type" : "object",
        "properties" : {
          "roles" : {
            "type" : "object",
            "properties" : { },
            "description" : "An arbitrarily nested JSON object mapping roles to sets of resources and permissions - see the Elasticsearch security documentation for more details on roles"
          },
          "users_roles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchClusterRole"
            },
            "x-ballerina-name" : "usersRoles"
          },
          "version" : {
            "type" : "integer",
            "description" : "The resource version number of the security settings",
            "format" : "int32"
          },
          "last_modified" : {
            "type" : "string",
            "description" : "The most recent time the security settings were changed (ISO format in UTC)",
            "format" : "date-time",
            "x-ballerina-name" : "lastModified"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ElasticsearchClusterUser"
            }
          }
        },
        "description" : "For 2.x Elasticsearch clusters, specifies the information about the users and roles. For 5.x Elasticsearch clusters, use the Kibana management UI"
      },
      "ApmConfiguration" : {
        "type" : "object",
        "properties" : {
          "user_settings_json" : {
            "type" : "object",
            "properties" : { },
            "description" : "An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided the parameters are on the allowlist and not on the denylist. (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Apm settings)",
            "x-ballerina-name" : "userSettingsJson"
          },
          "system_settings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ApmSystemSettings"
            } ],
            "x-ballerina-name" : "systemSettings"
          },
          "user_settings_yaml" : {
            "type" : "string",
            "description" : "An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided the parameters are on the allowlist and not on the denylist. (These field together with 'user_settings_override*' and 'system_settings' defines the total set of Apm settings)",
            "x-ballerina-name" : "userSettingsYaml"
          },
          "user_settings_override_json" : {
            "type" : "object",
            "properties" : { },
            "description" : "An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Apm settings)",
            "x-ballerina-name" : "userSettingsOverrideJson"
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the Apm cluster (must be one of the ECE supported versions, and won't work unless it matches the APM version. Leave blank to auto-detect version.)"
          },
          "docker_image" : {
            "type" : "string",
            "description" : "A docker URI that allows overriding of the default docker image specified for this version",
            "x-ballerina-name" : "dockerImage"
          },
          "user_settings_override_yaml" : {
            "type" : "string",
            "description" : "An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Apm settings)",
            "x-ballerina-name" : "userSettingsOverrideYaml"
          }
        },
        "description" : "The configuration options for the APM Server"
      },
      "ElasticsearchDependant" : {
        "required" : [ "id", "kind" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "type" : "string",
            "description" : "The kind of resource"
          },
          "id" : {
            "type" : "string",
            "description" : "The id of the orphaned resource"
          }
        },
        "description" : "Details about an orphaned Elasticsearch-dependent resources"
      },
      "Elasticsearch" : {
        "required" : [ "backend_plan", "display_name", "ref_id" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "A locally-unique user-specified id",
            "x-ballerina-name" : "refId"
          },
          "backend_plan" : {
            "type" : "object",
            "properties" : { },
            "description" : "The backend plan as JSON",
            "x-ballerina-name" : "backendPlan"
          },
          "display_name" : {
            "type" : "string",
            "description" : "The human readable name for the cluster (defaults to the generated cluster id if not specified)",
            "x-ballerina-name" : "displayName"
          }
        },
        "description" : "Holds diagnostics for an Elasticsearch cluster"
      },
      "VerificationCodeResponse" : {
        "required" : [ "verification" ],
        "type" : "object",
        "properties" : {
          "verification" : {
            "type" : "string",
            "description" : "The verification code to use for the domain claim challenge"
          }
        }
      },
      "DeploymentsListResponse" : {
        "required" : [ "deployments" ],
        "type" : "object",
        "properties" : {
          "deployments" : {
            "type" : "array",
            "description" : "The deployments",
            "items" : {
              "$ref" : "#/components/schemas/DeploymentsListingData"
            }
          }
        },
        "description" : "Contains a list of deployments"
      },
      "ObservabilityAbsoluteDeployment" : {
        "required" : [ "deployment_id" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "RefId of the Elasticsearch cluster to send logs and/or metrics to. If not specified, refId is resolved automatically as long as the destination deployment contains a single Elasticsearch resource",
            "x-ballerina-name" : "refId"
          },
          "deployment_id" : {
            "type" : "string",
            "description" : "The deployment to send logs and/or metrics to. Contains either the deployment's ID or 'self'",
            "x-ballerina-name" : "deploymentId"
          }
        },
        "description" : "The destination to send logs and metrics to"
      },
      "MatchNoneQuery" : {
        "type" : "object",
        "description" : "A query that doesn't match any documents"
      },
      "InstanceMoveRequest" : {
        "required" : [ "from" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "string",
            "description" : "The instance id that is going to be moved"
          },
          "to" : {
            "type" : "array",
            "description" : "An optional list of allocator ids to which the instance should be moved. If not specified then any available allocator can be used (including the current one if it is healthy)",
            "items" : {
              "type" : "string"
            }
          },
          "instance_down" : {
            "type" : "boolean",
            "description" : "Tells the infrastructure that the instance should be considered as permanently down when deciding how to migrate data to new nodes. If left blank then the system will automatically decide (currently: will treat the instances as up)",
            "x-ballerina-name" : "instanceDown"
          }
        },
        "description" : "The request that specifies the Elasticsearch or stateless (eg Kibana) instances to move to allocators as part of the upgrade plan. When used in conjunction with '\\_\\_all\\_\\_' (roll all instances as a single unit) strategy, these instances are not restarted, which can sometimes enable recovery plans when these instances are boot-looping"
      },
      "ElasticsearchClusterRole" : {
        "required" : [ "roles", "username" ],
        "type" : "object",
        "properties" : {
          "roles" : {
            "type" : "array",
            "description" : "The list of roles for this user",
            "items" : {
              "type" : "string"
            }
          },
          "username" : {
            "type" : "string",
            "description" : "The username"
          }
        },
        "description" : "The authorization information for an Elasticsearch cluster user"
      },
      "OrganizationInvitationRequest" : {
        "required" : [ "emails" ],
        "type" : "object",
        "properties" : {
          "emails" : {
            "type" : "array",
            "description" : "The email addresses to invite to the organization",
            "items" : {
              "type" : "string"
            }
          },
          "role_assignments" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RoleAssignments"
            } ],
            "x-ballerina-name" : "roleAssignments"
          },
          "expires_in" : {
            "type" : "string",
            "description" : "The date and time when the invitation expires. Defaults to three days from now",
            "x-ballerina-name" : "expiresIn"
          }
        },
        "description" : "A request to create one or more invitations to an organization"
      },
      "ExternalTrustRelationship" : {
        "required" : [ "trust_all", "trust_relationship_id" ],
        "type" : "object",
        "properties" : {
          "trust_relationship_id" : {
            "type" : "string",
            "description" : "The ID of the external trust relationship",
            "x-ballerina-name" : "trustRelationshipId"
          },
          "trust_all" : {
            "type" : "boolean",
            "description" : "If true, all clusters in this external entity will be trusted and the `trust_allowlist` is ignored",
            "x-ballerina-name" : "trustAll"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the external trust relationship. Retrieved from the TrustRelationship and ignored on write"
          },
          "trust_allowlist" : {
            "type" : "array",
            "description" : "The list of clusters to trust. Only used when `trust_all` is false",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "trustAllowlist"
          }
        },
        "description" : "The trust relationship with external entities (remote environments, remote accounts...)"
      },
      "IntegrationsServerPlanControlConfiguration" : {
        "type" : "object",
        "properties" : {
          "cluster_reboot" : {
            "type" : "string",
            "description" : "Set to 'forced' to force a reboot as part of the upgrade plan",
            "enum" : [ "forced" ],
            "x-ballerina-name" : "clusterReboot"
          },
          "calm_wait_time" : {
            "type" : "integer",
            "description" : "This timeout determines how long to give a cluster after it responds to API calls before performing actual operations on it. It defaults to 5s",
            "format" : "int64",
            "x-ballerina-name" : "calmWaitTime"
          },
          "timeout" : {
            "type" : "integer",
            "description" : "The total timeout in seconds after which the plan is cancelled even if it is not complete. Defaults to 4x the max memory capacity per node (in MB)",
            "format" : "int64"
          },
          "extended_maintenance" : {
            "type" : "boolean",
            "description" : "If true (default false), does not clear the maintenance flag (which prevents its API from being accessed except by the constructor) on new instances added until after a snapshot has been restored, otherwise, the maintenance flag is cleared once the new instances successfully join the new cluster",
            "x-ballerina-name" : "extendedMaintenance"
          }
        },
        "description" : "The plan control configuration options for the Integrations Server"
      },
      "ApmPlanControlConfiguration" : {
        "type" : "object",
        "properties" : {
          "cluster_reboot" : {
            "type" : "string",
            "description" : "Set to 'forced' to force a reboot as part of the upgrade plan",
            "enum" : [ "forced" ],
            "x-ballerina-name" : "clusterReboot"
          },
          "calm_wait_time" : {
            "type" : "integer",
            "description" : "This timeout determines how long to give a cluster after it responds to API calls before performing actual operations on it. It defaults to 5s",
            "format" : "int64",
            "x-ballerina-name" : "calmWaitTime"
          },
          "timeout" : {
            "type" : "integer",
            "description" : "The total timeout in seconds after which the plan is cancelled even if it is not complete. Defaults to 4x the max memory capacity per node (in MB)",
            "format" : "int64"
          },
          "extended_maintenance" : {
            "type" : "boolean",
            "description" : "If true (default false), does not clear the maintenance flag (which prevents its API from being accessed except by the constructor) on new instances added until after a snapshot has been restored, otherwise, the maintenance flag is cleared once the new instances successfully join the new cluster",
            "x-ballerina-name" : "extendedMaintenance"
          }
        },
        "description" : "The plan control configuration options for the APM Server"
      },
      "TransientApmPlanConfiguration" : {
        "type" : "object",
        "properties" : {
          "plan_configuration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ApmPlanControlConfiguration"
            } ],
            "x-ballerina-name" : "planConfiguration"
          },
          "strategy" : {
            "$ref" : "#/components/schemas/PlanStrategy"
          }
        },
        "description" : "Defines the configuration parameters that control how the plan is applied. For example, the Elasticsearch cluster topology and APM Server settings"
      },
      "AppSearchPlanControlConfiguration" : {
        "type" : "object",
        "properties" : {
          "preferred_allocators" : {
            "type" : "array",
            "description" : "List of allocators on which instances are placed if possible (if not possible/not specified then any available allocator with space is used)",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "preferredAllocators"
          },
          "cluster_reboot" : {
            "type" : "string",
            "description" : "Set to 'forced' to force a reboot as part of the upgrade plan",
            "enum" : [ "forced" ],
            "x-ballerina-name" : "clusterReboot"
          },
          "move_allocators" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AllocatorMoveRequest"
            },
            "x-ballerina-name" : "moveAllocators"
          },
          "calm_wait_time" : {
            "type" : "integer",
            "description" : "This timeout determines how long to give a cluster after it responds to API calls before performing actual operations on it. It defaults to 5s",
            "format" : "int64",
            "x-ballerina-name" : "calmWaitTime"
          },
          "move_instances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InstanceMoveRequest"
            },
            "x-ballerina-name" : "moveInstances"
          },
          "reallocate_instances" : {
            "type" : "boolean",
            "description" : "If true (default: false) does not allow re-using any existing instances currently in the cluster, ie even unchanged instances will be re-created",
            "x-ballerina-name" : "reallocateInstances"
          },
          "timeout" : {
            "type" : "integer",
            "description" : "The total timeout in seconds after which the plan is cancelled even if it is not complete. Defaults to 4x the max memory capacity per node (in MB)",
            "format" : "int64"
          },
          "extended_maintenance" : {
            "type" : "boolean",
            "description" : "If true (default false), does not clear the maintenance flag (which prevents its API from being accessed except by the constructor) on new instances added until after a snapshot has been restored, otherwise, the maintenance flag is cleared once the new instances successfully join the new cluster",
            "x-ballerina-name" : "extendedMaintenance"
          }
        }
      },
      "ElasticsearchShardsStatus" : {
        "required" : [ "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Indicates the elasticsearch cluster health status as a color",
            "enum" : [ "green", "red", "yellow" ]
          }
        },
        "description" : "Shards status represented as green, yellow, or red, as returned by the Elasticsearch cluster health API"
      },
      "ApmTopologyElement" : {
        "type" : "object",
        "properties" : {
          "instance_configuration_id" : {
            "type" : "string",
            "description" : "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration",
            "x-ballerina-name" : "instanceConfigurationId"
          },
          "instance_configuration_version" : {
            "type" : "integer",
            "description" : "The version of the Instance Configuration Id. If it is unset, the meaning depends on read vs writes. For deployment reads, it is equivalent to version 0 (or the IC is unversioned); for deployment creates and deployment template use, it is equivalent to 'the latest version'; and for deployment updates, it is equivalent to 'retain the current version'",
            "format" : "int32",
            "x-ballerina-name" : "instanceConfigurationVersion"
          },
          "size" : {
            "$ref" : "#/components/schemas/TopologySize"
          },
          "zone_count" : {
            "type" : "integer",
            "description" : "number of zones in which nodes will be placed",
            "format" : "int32",
            "x-ballerina-name" : "zoneCount"
          },
          "apm" : {
            "$ref" : "#/components/schemas/ApmConfiguration"
          }
        },
        "description" : "Defines the topology of the APM Server nodes. For example, the number or capacity of the nodes, and where you can allocate the nodes"
      },
      "DeploymentCreateMetadata" : {
        "type" : "object",
        "properties" : {
          "tags" : {
            "type" : "array",
            "description" : "Arbitrary user-defined metadata associated with this deployment",
            "items" : {
              "$ref" : "#/components/schemas/MetadataItem"
            }
          }
        },
        "description" : "Additional information about the new deployment object"
      },
      "PrefixQuery" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "boost" : {
            "type" : "number",
            "description" : "An optional boost value to apply to the query",
            "format" : "float"
          },
          "value" : {
            "type" : "string",
            "description" : "The prefix to search for"
          }
        },
        "description" : "The query that matches documents with fields that contain terms with a specified, not analyzed, prefix"
      },
      "AppSearchNodeTypes" : {
        "required" : [ "appserver", "worker" ],
        "type" : "object",
        "properties" : {
          "appserver" : {
            "type" : "boolean",
            "description" : "Defines whether this instance should run as Application/API server"
          },
          "worker" : {
            "type" : "boolean",
            "description" : "Defines whether this instance should run as background worker"
          }
        },
        "description" : "Node types to enable for an AppSearch instance"
      },
      "RulesetAssociations" : {
        "required" : [ "associations", "total_associations" ],
        "type" : "object",
        "properties" : {
          "associations" : {
            "type" : "array",
            "description" : "List of associations",
            "items" : {
              "$ref" : "#/components/schemas/FilterAssociation"
            }
          },
          "total_associations" : {
            "type" : "integer",
            "description" : "Total number of associations. This includes associations the user does not have permission to view",
            "format" : "int32",
            "x-ballerina-name" : "totalAssociations"
          }
        },
        "description" : "The configuration settings for the traffic filter"
      },
      "ApmPlan" : {
        "required" : [ "apm" ],
        "type" : "object",
        "properties" : {
          "transient" : {
            "$ref" : "#/components/schemas/TransientApmPlanConfiguration"
          },
          "cluster_topology" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApmTopologyElement"
            },
            "x-ballerina-name" : "clusterTopology"
          },
          "apm" : {
            "$ref" : "#/components/schemas/ApmConfiguration"
          }
        },
        "description" : "The plan for the APM Server"
      },
      "Apm" : {
        "required" : [ "backend_plan", "display_name", "elasticsearch_cluster_ref_id", "ref_id" ],
        "type" : "object",
        "properties" : {
          "ref_id" : {
            "type" : "string",
            "description" : "A locally-unique user-specified id",
            "x-ballerina-name" : "refId"
          },
          "elasticsearch_cluster_ref_id" : {
            "type" : "string",
            "description" : "The user-specified id of the Elasticsearch Cluster that this will link to",
            "x-ballerina-name" : "elasticsearchClusterRefId"
          },
          "backend_plan" : {
            "type" : "object",
            "properties" : { },
            "description" : "The backend plan as JSON",
            "x-ballerina-name" : "backendPlan"
          },
          "display_name" : {
            "type" : "string",
            "description" : "The human readable name (defaults to the generated cluster id if not specified)",
            "x-ballerina-name" : "displayName"
          }
        },
        "description" : "Holds diagnostics for an APM resource"
      },
      "AppSearchConfiguration" : {
        "type" : "object",
        "properties" : {
          "user_settings_json" : {
            "type" : "object",
            "properties" : { },
            "description" : "An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided the parameters are on the allowlist and not on the denylist. (This field together with 'user_settings_override*' and 'system_settings' defines the total set of AppSearch settings)",
            "x-ballerina-name" : "userSettingsJson"
          },
          "system_settings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppSearchSystemSettings"
            } ],
            "x-ballerina-name" : "systemSettings"
          },
          "user_settings_yaml" : {
            "type" : "string",
            "description" : "An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided the parameters are on the allowlist and not on the denylist. (These field together with 'user_settings_override*' and 'system_settings' defines the total set of AppSearch settings)",
            "x-ballerina-name" : "userSettingsYaml"
          },
          "user_settings_override_json" : {
            "type" : "object",
            "properties" : { },
            "description" : "An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of AppSearch settings)",
            "x-ballerina-name" : "userSettingsOverrideJson"
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the AppSearch cluster (must be one of the ECE supported versions, and won't work unless it matches the Elasticsearch version. Leave blank to auto-detect version.)"
          },
          "docker_image" : {
            "type" : "string",
            "description" : "A docker URI that allows overriding of the default docker image specified for this version",
            "x-ballerina-name" : "dockerImage"
          },
          "user_settings_override_yaml" : {
            "type" : "string",
            "description" : "An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of AppSearch settings)",
            "x-ballerina-name" : "userSettingsOverrideYaml"
          }
        }
      }
    },
    "securitySchemes" : {
      "apiKey" : {
        "type" : "apiKey",
        "name" : "Authorization",
        "in" : "header",
        "x-ballerina-name" : "authorization"
      }
    }
  },
  "x-elastic" : {
    "curl" : {
      "auth" : "-H \"Authorization: ApiKey $EC_API_KEY\""
    }
  },
  "x-topics" : [ {
    "title" : "Principles",
    "content" : "The Elasticsearch Service API is built on REST. This means that:\n\n- URLs are based on resource IDs.\n- JSON is the data interchange format.\n- Standard HTTP response codes and verbs are used.\n\nRESTful API calls are stateless.\nEvery request that you make happens in isolation from other calls and must include all the information necessary for Elasticsearch Service to fulfill the request.\nAPI requests return JSON output, which is a format that is machine-readable and works well for automation.\n\nCalls to API endpoints require different request methods, depending on what they do.\nYou use these four request methods to communicate with the Elasticsearch Service RESTful API:\n\n- To fetch a resource: GET\n- To create a new resource: POST\n- To update an existing resource: PUT or PATCH\n- To delete a resource: DELETE\n"
  }, {
    "title" : "Rate limiting",
    "content" : "API calls are rate limited in a timing window.\nThe current remaining available calls quota is available through the following header fields, included in each API call response:\n\n- `x-ratelimit-interval` - The time duration for the quota calculation.\n- `x-ratelimit-remaining` - The remaining number of API calls available.\n- `x-ratelimit-limit` - The total number of calls available in the duration `x-ratelimit-interval`.\n"
  }, {
    "title" : "Authentication",
    "content" : "Elastic Cloud APIs support key-based authentication.\nYou must [create an API key](https://www.elastic.co/guide/en/cloud/current/ec-api-authentication.html) and use the encoded value in the request header.            \nFor convenience, you can export your API key into your shell environment:\n\n```\nexport EC_API_KEY=\"YOUR_GENERATED_API_KEY\"\n```\n\nFor example, the following `curl` command retrieves a list of your deployments:\n\n```\ncurl -H \"Authorization: ApiKey $EC_API_KEY\" https://api.elastic-cloud.com/api/v1/deployments\n```\n"
  } ],
  "x-original-swagger-version" : "2.0"
}